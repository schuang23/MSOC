

================================================================
== Vivado HLS Report for 'matrixmul'
================================================================
* Date:           Wed Dec 23 19:15:27 2020

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        matrixmultiplication.proj
* Solution:       solution
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  | 5.00 ns | 4.371 ns |   0.63 ns  |
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-------+-------+---------+
    |  Latency (cycles) |  Latency (absolute) |    Interval   | Pipeline|
    |   min   |   max   |    min   |    max   |  min  |  max  |   Type  |
    +---------+---------+----------+----------+-------+-------+---------+
    |    32792|    32792| 0.164 ms | 0.164 ms |  32792|  32792|   none  |
    +---------+---------+----------+----------+-------+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------+---------+---------+----------+-----------+-----------+------+----------+
        |           |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-----------+---------+---------+----------+-----------+-----------+------+----------+
        |- row_col  |    32790|    32790|        55|         32|          1|  1024|    yes   |
        +-----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 32, depth = 55


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 57
* Pipeline : 1
  Pipeline-0 : II = 32, D = 55, States = { 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 57 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 33 
33 --> 34 
34 --> 35 
35 --> 36 
36 --> 37 
37 --> 38 
38 --> 39 
39 --> 40 
40 --> 41 
41 --> 42 
42 --> 43 
43 --> 44 
44 --> 45 
45 --> 46 
46 --> 47 
47 --> 48 
48 --> 49 
49 --> 50 
50 --> 51 
51 --> 52 
52 --> 53 
53 --> 54 
54 --> 55 
55 --> 56 
56 --> 2 
57 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([1024 x i32]* %A) nounwind, !map !7"   --->   Operation 58 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([1024 x i32]* %B) nounwind, !map !13"   --->   Operation 59 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([1024 x i32]* %AB) nounwind, !map !17"   --->   Operation 60 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([10 x i8]* @matrixmul_str) nounwind"   --->   Operation 61 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecMemCore([1024 x i32]* %A, [1 x i8]* @p_str4, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str4, i32 -1, [1 x i8]* @p_str4, [1 x i8]* @p_str4, [1 x i8]* @p_str4, [1 x i8]* @p_str4, [1 x i8]* @p_str4) nounwind" [matrixmultiplication.cpp:7]   --->   Operation 62 'specmemcore' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 63 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface([1024 x i32]* %A, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)" [matrixmultiplication.cpp:7]   --->   Operation 63 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 64 [1/1] (0.00ns)   --->   "%empty_2 = call i32 (...)* @_ssdm_op_SpecMemCore([1024 x i32]* %AB, [1 x i8]* @p_str6, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str6, i32 -1, [1 x i8]* @p_str6, [1 x i8]* @p_str6, [1 x i8]* @p_str6, [1 x i8]* @p_str6, [1 x i8]* @p_str6) nounwind" [matrixmultiplication.cpp:7]   --->   Operation 64 'specmemcore' 'empty_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 65 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface([1024 x i32]* %AB, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)" [matrixmultiplication.cpp:7]   --->   Operation 65 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 66 [1/1] (0.00ns)   --->   "%empty_3 = call i32 (...)* @_ssdm_op_SpecMemCore([1024 x i32]* %B, [1 x i8]* @p_str5, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str5, i32 -1, [1 x i8]* @p_str5, [1 x i8]* @p_str5, [1 x i8]* @p_str5, [1 x i8]* @p_str5, [1 x i8]* @p_str5) nounwind" [matrixmultiplication.cpp:7]   --->   Operation 66 'specmemcore' 'empty_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 67 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface([1024 x i32]* %B, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)" [matrixmultiplication.cpp:7]   --->   Operation 67 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 68 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [matrixmultiplication.cpp:7]   --->   Operation 68 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 69 [1/1] (1.76ns)   --->   "br label %1" [matrixmultiplication.cpp:10]   --->   Operation 69 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 3.01>
ST_2 : Operation 70 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i11 [ 0, %0 ], [ %add_ln10, %col ]" [matrixmultiplication.cpp:10]   --->   Operation 70 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 71 [1/1] (0.00ns)   --->   "%i_0 = phi i6 [ 0, %0 ], [ %select_ln16_1, %col ]" [matrixmultiplication.cpp:16]   --->   Operation 71 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 72 [1/1] (0.00ns)   --->   "%j_0 = phi i6 [ 0, %0 ], [ %j, %col ]"   --->   Operation 72 'phi' 'j_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 73 [1/1] (1.88ns)   --->   "%icmp_ln10 = icmp eq i11 %indvar_flatten, -1024" [matrixmultiplication.cpp:10]   --->   Operation 73 'icmp' 'icmp_ln10' <Predicate = true> <Delay = 1.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 74 [1/1] (1.63ns)   --->   "%add_ln10 = add i11 %indvar_flatten, 1" [matrixmultiplication.cpp:10]   --->   Operation 74 'add' 'add_ln10' <Predicate = true> <Delay = 1.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 75 [1/1] (0.00ns)   --->   "br i1 %icmp_ln10, label %2, label %col" [matrixmultiplication.cpp:10]   --->   Operation 75 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 76 [1/1] (1.82ns)   --->   "%i = add i6 %i_0, 1" [matrixmultiplication.cpp:10]   --->   Operation 76 'add' 'i' <Predicate = (!icmp_ln10)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 77 [1/1] (1.42ns)   --->   "%icmp_ln11 = icmp eq i6 %j_0, -32" [matrixmultiplication.cpp:11]   --->   Operation 77 'icmp' 'icmp_ln11' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 78 [1/1] (1.18ns)   --->   "%select_ln16 = select i1 %icmp_ln11, i6 0, i6 %j_0" [matrixmultiplication.cpp:16]   --->   Operation 78 'select' 'select_ln16' <Predicate = (!icmp_ln10)> <Delay = 1.18> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 79 [1/1] (1.18ns)   --->   "%select_ln16_1 = select i1 %icmp_ln11, i6 %i, i6 %i_0" [matrixmultiplication.cpp:16]   --->   Operation 79 'select' 'select_ln16_1' <Predicate = (!icmp_ln10)> <Delay = 1.18> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 3 <SV = 2> <Delay = 2.56>
ST_3 : Operation 80 [1/1] (0.00ns)   --->   "%tmp = call i11 @_ssdm_op_BitConcatenate.i11.i6.i5(i6 %select_ln16_1, i5 0)" [matrixmultiplication.cpp:16]   --->   Operation 80 'bitconcatenate' 'tmp' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 81 [1/1] (0.00ns)   --->   "%zext_ln16 = zext i11 %tmp to i64" [matrixmultiplication.cpp:16]   --->   Operation 81 'zext' 'zext_ln16' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 82 [1/1] (0.00ns)   --->   "%A_addr = getelementptr [1024 x i32]* %A, i64 0, i64 %zext_ln16" [matrixmultiplication.cpp:16]   --->   Operation 82 'getelementptr' 'A_addr' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 83 [1/1] (0.00ns)   --->   "%zext_ln16_1 = zext i6 %select_ln16 to i64" [matrixmultiplication.cpp:16]   --->   Operation 83 'zext' 'zext_ln16_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 84 [1/1] (0.00ns)   --->   "%zext_ln16_8 = zext i6 %select_ln16 to i7" [matrixmultiplication.cpp:16]   --->   Operation 84 'zext' 'zext_ln16_8' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 85 [1/1] (0.00ns)   --->   "%B_addr = getelementptr [1024 x i32]* %B, i64 0, i64 %zext_ln16_1" [matrixmultiplication.cpp:16]   --->   Operation 85 'getelementptr' 'B_addr' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 86 [1/1] (1.87ns)   --->   "%add_ln16_31 = add i7 %zext_ln16_8, 32" [matrixmultiplication.cpp:16]   --->   Operation 86 'add' 'add_ln16_31' <Predicate = (!icmp_ln10)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 87 [2/2] (2.56ns)   --->   "%A_load = load i32* %A_addr, align 4" [matrixmultiplication.cpp:16]   --->   Operation 87 'load' 'A_load' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_3 : Operation 88 [2/2] (2.56ns)   --->   "%B_load = load i32* %B_addr, align 4" [matrixmultiplication.cpp:16]   --->   Operation 88 'load' 'B_load' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>

State 4 <SV = 3> <Delay = 2.56>
ST_4 : Operation 89 [1/1] (0.00ns)   --->   "%or_ln16 = or i11 %tmp, 1" [matrixmultiplication.cpp:16]   --->   Operation 89 'or' 'or_ln16' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 90 [1/1] (0.00ns)   --->   "%tmp_2 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %or_ln16)" [matrixmultiplication.cpp:16]   --->   Operation 90 'bitconcatenate' 'tmp_2' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 91 [1/1] (0.00ns)   --->   "%A_addr_1 = getelementptr [1024 x i32]* %A, i64 0, i64 %tmp_2" [matrixmultiplication.cpp:16]   --->   Operation 91 'getelementptr' 'A_addr_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 92 [1/1] (0.00ns)   --->   "%zext_ln16_9 = zext i7 %add_ln16_31 to i64" [matrixmultiplication.cpp:16]   --->   Operation 92 'zext' 'zext_ln16_9' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 93 [1/1] (0.00ns)   --->   "%B_addr_1 = getelementptr [1024 x i32]* %B, i64 0, i64 %zext_ln16_9" [matrixmultiplication.cpp:16]   --->   Operation 93 'getelementptr' 'B_addr_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 94 [1/2] (2.56ns)   --->   "%A_load = load i32* %A_addr, align 4" [matrixmultiplication.cpp:16]   --->   Operation 94 'load' 'A_load' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_4 : Operation 95 [1/2] (2.56ns)   --->   "%B_load = load i32* %B_addr, align 4" [matrixmultiplication.cpp:16]   --->   Operation 95 'load' 'B_load' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_4 : Operation 96 [2/2] (2.56ns)   --->   "%A_load_1 = load i32* %A_addr_1, align 4" [matrixmultiplication.cpp:16]   --->   Operation 96 'load' 'A_load_1' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_4 : Operation 97 [2/2] (2.56ns)   --->   "%B_load_1 = load i32* %B_addr_1, align 4" [matrixmultiplication.cpp:16]   --->   Operation 97 'load' 'B_load_1' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>

State 5 <SV = 4> <Delay = 3.95>
ST_5 : Operation 98 [1/1] (0.00ns)   --->   "%or_ln16_1 = or i11 %tmp, 2" [matrixmultiplication.cpp:16]   --->   Operation 98 'or' 'or_ln16_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 99 [1/1] (0.00ns)   --->   "%tmp_3 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %or_ln16_1)" [matrixmultiplication.cpp:16]   --->   Operation 99 'bitconcatenate' 'tmp_3' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 100 [1/1] (0.00ns)   --->   "%A_addr_2 = getelementptr [1024 x i32]* %A, i64 0, i64 %tmp_3" [matrixmultiplication.cpp:16]   --->   Operation 100 'getelementptr' 'A_addr_2' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 101 [1/1] (0.00ns)   --->   "%tmp_32 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 1, i6 %select_ln16)" [matrixmultiplication.cpp:16]   --->   Operation 101 'bitconcatenate' 'tmp_32' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 102 [1/1] (0.00ns)   --->   "%B_addr_2 = getelementptr [1024 x i32]* %B, i64 0, i64 %tmp_32" [matrixmultiplication.cpp:16]   --->   Operation 102 'getelementptr' 'B_addr_2' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 103 [5/5] (3.95ns)   --->   "%mul_ln16 = mul nsw i32 %B_load, %A_load" [matrixmultiplication.cpp:16]   --->   Operation 103 'mul' 'mul_ln16' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 104 [1/2] (2.56ns)   --->   "%A_load_1 = load i32* %A_addr_1, align 4" [matrixmultiplication.cpp:16]   --->   Operation 104 'load' 'A_load_1' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_5 : Operation 105 [1/2] (2.56ns)   --->   "%B_load_1 = load i32* %B_addr_1, align 4" [matrixmultiplication.cpp:16]   --->   Operation 105 'load' 'B_load_1' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_5 : Operation 106 [2/2] (2.56ns)   --->   "%A_load_2 = load i32* %A_addr_2, align 4" [matrixmultiplication.cpp:16]   --->   Operation 106 'load' 'A_load_2' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_5 : Operation 107 [2/2] (2.56ns)   --->   "%B_load_2 = load i32* %B_addr_2, align 4" [matrixmultiplication.cpp:16]   --->   Operation 107 'load' 'B_load_2' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>

State 6 <SV = 5> <Delay = 3.95>
ST_6 : Operation 108 [1/1] (0.00ns)   --->   "%or_ln16_2 = or i11 %tmp, 3" [matrixmultiplication.cpp:16]   --->   Operation 108 'or' 'or_ln16_2' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_6 : Operation 109 [1/1] (0.00ns)   --->   "%tmp_4 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %or_ln16_2)" [matrixmultiplication.cpp:16]   --->   Operation 109 'bitconcatenate' 'tmp_4' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_6 : Operation 110 [1/1] (0.00ns)   --->   "%A_addr_3 = getelementptr [1024 x i32]* %A, i64 0, i64 %tmp_4" [matrixmultiplication.cpp:16]   --->   Operation 110 'getelementptr' 'A_addr_3' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_6 : Operation 111 [1/1] (0.00ns)   --->   "%tmp_33 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 2, i6 %select_ln16)" [matrixmultiplication.cpp:16]   --->   Operation 111 'bitconcatenate' 'tmp_33' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_6 : Operation 112 [1/1] (0.00ns)   --->   "%B_addr_4 = getelementptr [1024 x i32]* %B, i64 0, i64 %tmp_33" [matrixmultiplication.cpp:16]   --->   Operation 112 'getelementptr' 'B_addr_4' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_6 : Operation 113 [4/5] (3.95ns)   --->   "%mul_ln16 = mul nsw i32 %B_load, %A_load" [matrixmultiplication.cpp:16]   --->   Operation 113 'mul' 'mul_ln16' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 114 [5/5] (3.95ns)   --->   "%mul_ln16_1 = mul nsw i32 %B_load_1, %A_load_1" [matrixmultiplication.cpp:16]   --->   Operation 114 'mul' 'mul_ln16_1' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 115 [1/2] (2.56ns)   --->   "%A_load_2 = load i32* %A_addr_2, align 4" [matrixmultiplication.cpp:16]   --->   Operation 115 'load' 'A_load_2' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_6 : Operation 116 [1/2] (2.56ns)   --->   "%B_load_2 = load i32* %B_addr_2, align 4" [matrixmultiplication.cpp:16]   --->   Operation 116 'load' 'B_load_2' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_6 : Operation 117 [2/2] (2.56ns)   --->   "%A_load_3 = load i32* %A_addr_3, align 4" [matrixmultiplication.cpp:16]   --->   Operation 117 'load' 'A_load_3' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_6 : Operation 118 [2/2] (2.56ns)   --->   "%B_load_4 = load i32* %B_addr_4, align 4" [matrixmultiplication.cpp:16]   --->   Operation 118 'load' 'B_load_4' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>

State 7 <SV = 6> <Delay = 3.95>
ST_7 : Operation 119 [1/1] (0.00ns)   --->   "%or_ln16_3 = or i11 %tmp, 4" [matrixmultiplication.cpp:16]   --->   Operation 119 'or' 'or_ln16_3' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_7 : Operation 120 [1/1] (0.00ns)   --->   "%tmp_5 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %or_ln16_3)" [matrixmultiplication.cpp:16]   --->   Operation 120 'bitconcatenate' 'tmp_5' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_7 : Operation 121 [1/1] (0.00ns)   --->   "%A_addr_4 = getelementptr [1024 x i32]* %A, i64 0, i64 %tmp_5" [matrixmultiplication.cpp:16]   --->   Operation 121 'getelementptr' 'A_addr_4' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_7 : Operation 122 [1/1] (0.00ns)   --->   "%zext_ln16_7 = zext i6 %select_ln16 to i9" [matrixmultiplication.cpp:16]   --->   Operation 122 'zext' 'zext_ln16_7' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_7 : Operation 123 [1/1] (0.00ns)   --->   "%tmp_34 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 3, i6 %select_ln16)" [matrixmultiplication.cpp:16]   --->   Operation 123 'bitconcatenate' 'tmp_34' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_7 : Operation 124 [1/1] (0.00ns)   --->   "%B_addr_6 = getelementptr [1024 x i32]* %B, i64 0, i64 %tmp_34" [matrixmultiplication.cpp:16]   --->   Operation 124 'getelementptr' 'B_addr_6' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_7 : Operation 125 [1/1] (1.82ns)   --->   "%add_ln16_34 = add i9 %zext_ln16_7, 224" [matrixmultiplication.cpp:16]   --->   Operation 125 'add' 'add_ln16_34' <Predicate = (!icmp_ln10)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 126 [3/5] (3.95ns)   --->   "%mul_ln16 = mul nsw i32 %B_load, %A_load" [matrixmultiplication.cpp:16]   --->   Operation 126 'mul' 'mul_ln16' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 127 [4/5] (3.95ns)   --->   "%mul_ln16_1 = mul nsw i32 %B_load_1, %A_load_1" [matrixmultiplication.cpp:16]   --->   Operation 127 'mul' 'mul_ln16_1' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 128 [5/5] (3.95ns)   --->   "%mul_ln16_2 = mul nsw i32 %B_load_2, %A_load_2" [matrixmultiplication.cpp:16]   --->   Operation 128 'mul' 'mul_ln16_2' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 129 [1/2] (2.56ns)   --->   "%A_load_3 = load i32* %A_addr_3, align 4" [matrixmultiplication.cpp:16]   --->   Operation 129 'load' 'A_load_3' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_7 : Operation 130 [2/2] (2.56ns)   --->   "%A_load_4 = load i32* %A_addr_4, align 4" [matrixmultiplication.cpp:16]   --->   Operation 130 'load' 'A_load_4' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_7 : Operation 131 [1/2] (2.56ns)   --->   "%B_load_4 = load i32* %B_addr_4, align 4" [matrixmultiplication.cpp:16]   --->   Operation 131 'load' 'B_load_4' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_7 : Operation 132 [2/2] (2.56ns)   --->   "%B_load_6 = load i32* %B_addr_6, align 4" [matrixmultiplication.cpp:16]   --->   Operation 132 'load' 'B_load_6' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>

State 8 <SV = 7> <Delay = 3.95>
ST_8 : Operation 133 [1/1] (0.00ns)   --->   "%or_ln16_4 = or i11 %tmp, 5" [matrixmultiplication.cpp:16]   --->   Operation 133 'or' 'or_ln16_4' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_8 : Operation 134 [1/1] (0.00ns)   --->   "%tmp_6 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %or_ln16_4)" [matrixmultiplication.cpp:16]   --->   Operation 134 'bitconcatenate' 'tmp_6' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_8 : Operation 135 [1/1] (0.00ns)   --->   "%A_addr_5 = getelementptr [1024 x i32]* %A, i64 0, i64 %tmp_6" [matrixmultiplication.cpp:16]   --->   Operation 135 'getelementptr' 'A_addr_5' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_8 : Operation 136 [1/1] (0.00ns)   --->   "%zext_ln16_12 = zext i9 %add_ln16_34 to i64" [matrixmultiplication.cpp:16]   --->   Operation 136 'zext' 'zext_ln16_12' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_8 : Operation 137 [1/1] (0.00ns)   --->   "%B_addr_7 = getelementptr [1024 x i32]* %B, i64 0, i64 %zext_ln16_12" [matrixmultiplication.cpp:16]   --->   Operation 137 'getelementptr' 'B_addr_7' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_8 : Operation 138 [2/5] (3.95ns)   --->   "%mul_ln16 = mul nsw i32 %B_load, %A_load" [matrixmultiplication.cpp:16]   --->   Operation 138 'mul' 'mul_ln16' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 139 [3/5] (3.95ns)   --->   "%mul_ln16_1 = mul nsw i32 %B_load_1, %A_load_1" [matrixmultiplication.cpp:16]   --->   Operation 139 'mul' 'mul_ln16_1' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 140 [4/5] (3.95ns)   --->   "%mul_ln16_2 = mul nsw i32 %B_load_2, %A_load_2" [matrixmultiplication.cpp:16]   --->   Operation 140 'mul' 'mul_ln16_2' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 141 [1/2] (2.56ns)   --->   "%A_load_4 = load i32* %A_addr_4, align 4" [matrixmultiplication.cpp:16]   --->   Operation 141 'load' 'A_load_4' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_8 : Operation 142 [2/2] (2.56ns)   --->   "%A_load_5 = load i32* %A_addr_5, align 4" [matrixmultiplication.cpp:16]   --->   Operation 142 'load' 'A_load_5' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_8 : Operation 143 [1/2] (2.56ns)   --->   "%B_load_6 = load i32* %B_addr_6, align 4" [matrixmultiplication.cpp:16]   --->   Operation 143 'load' 'B_load_6' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_8 : Operation 144 [2/2] (2.56ns)   --->   "%B_load_7 = load i32* %B_addr_7, align 4" [matrixmultiplication.cpp:16]   --->   Operation 144 'load' 'B_load_7' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>

State 9 <SV = 8> <Delay = 3.95>
ST_9 : Operation 145 [1/1] (0.00ns)   --->   "%or_ln16_5 = or i11 %tmp, 6" [matrixmultiplication.cpp:16]   --->   Operation 145 'or' 'or_ln16_5' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_9 : Operation 146 [1/1] (0.00ns)   --->   "%tmp_7 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %or_ln16_5)" [matrixmultiplication.cpp:16]   --->   Operation 146 'bitconcatenate' 'tmp_7' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_9 : Operation 147 [1/1] (0.00ns)   --->   "%A_addr_6 = getelementptr [1024 x i32]* %A, i64 0, i64 %tmp_7" [matrixmultiplication.cpp:16]   --->   Operation 147 'getelementptr' 'A_addr_6' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_9 : Operation 148 [1/1] (0.00ns)   --->   "%tmp_35 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 4, i6 %select_ln16)" [matrixmultiplication.cpp:16]   --->   Operation 148 'bitconcatenate' 'tmp_35' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_9 : Operation 149 [1/1] (0.00ns)   --->   "%B_addr_8 = getelementptr [1024 x i32]* %B, i64 0, i64 %tmp_35" [matrixmultiplication.cpp:16]   --->   Operation 149 'getelementptr' 'B_addr_8' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_9 : Operation 150 [1/1] (1.82ns)   --->   "%add_ln16_35 = add i9 %zext_ln16_7, -224" [matrixmultiplication.cpp:16]   --->   Operation 150 'add' 'add_ln16_35' <Predicate = (!icmp_ln10)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 151 [1/5] (3.95ns)   --->   "%mul_ln16 = mul nsw i32 %B_load, %A_load" [matrixmultiplication.cpp:16]   --->   Operation 151 'mul' 'mul_ln16' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 152 [2/5] (3.95ns)   --->   "%mul_ln16_1 = mul nsw i32 %B_load_1, %A_load_1" [matrixmultiplication.cpp:16]   --->   Operation 152 'mul' 'mul_ln16_1' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 153 [3/5] (3.95ns)   --->   "%mul_ln16_2 = mul nsw i32 %B_load_2, %A_load_2" [matrixmultiplication.cpp:16]   --->   Operation 153 'mul' 'mul_ln16_2' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 154 [5/5] (3.95ns)   --->   "%mul_ln16_4 = mul nsw i32 %B_load_4, %A_load_4" [matrixmultiplication.cpp:16]   --->   Operation 154 'mul' 'mul_ln16_4' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 155 [1/2] (2.56ns)   --->   "%A_load_5 = load i32* %A_addr_5, align 4" [matrixmultiplication.cpp:16]   --->   Operation 155 'load' 'A_load_5' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_9 : Operation 156 [2/2] (2.56ns)   --->   "%A_load_6 = load i32* %A_addr_6, align 4" [matrixmultiplication.cpp:16]   --->   Operation 156 'load' 'A_load_6' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_9 : Operation 157 [1/2] (2.56ns)   --->   "%B_load_7 = load i32* %B_addr_7, align 4" [matrixmultiplication.cpp:16]   --->   Operation 157 'load' 'B_load_7' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_9 : Operation 158 [2/2] (2.56ns)   --->   "%B_load_8 = load i32* %B_addr_8, align 4" [matrixmultiplication.cpp:16]   --->   Operation 158 'load' 'B_load_8' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>

State 10 <SV = 9> <Delay = 3.95>
ST_10 : Operation 159 [1/1] (0.00ns)   --->   "%or_ln16_6 = or i11 %tmp, 7" [matrixmultiplication.cpp:16]   --->   Operation 159 'or' 'or_ln16_6' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_10 : Operation 160 [1/1] (0.00ns)   --->   "%tmp_8 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %or_ln16_6)" [matrixmultiplication.cpp:16]   --->   Operation 160 'bitconcatenate' 'tmp_8' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_10 : Operation 161 [1/1] (0.00ns)   --->   "%A_addr_7 = getelementptr [1024 x i32]* %A, i64 0, i64 %tmp_8" [matrixmultiplication.cpp:16]   --->   Operation 161 'getelementptr' 'A_addr_7' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_10 : Operation 162 [1/1] (0.00ns)   --->   "%zext_ln16_13 = zext i9 %add_ln16_35 to i64" [matrixmultiplication.cpp:16]   --->   Operation 162 'zext' 'zext_ln16_13' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_10 : Operation 163 [1/1] (0.00ns)   --->   "%B_addr_9 = getelementptr [1024 x i32]* %B, i64 0, i64 %zext_ln16_13" [matrixmultiplication.cpp:16]   --->   Operation 163 'getelementptr' 'B_addr_9' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_10 : Operation 164 [1/5] (3.95ns)   --->   "%mul_ln16_1 = mul nsw i32 %B_load_1, %A_load_1" [matrixmultiplication.cpp:16]   --->   Operation 164 'mul' 'mul_ln16_1' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 165 [2/5] (3.95ns)   --->   "%mul_ln16_2 = mul nsw i32 %B_load_2, %A_load_2" [matrixmultiplication.cpp:16]   --->   Operation 165 'mul' 'mul_ln16_2' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 166 [4/5] (3.95ns)   --->   "%mul_ln16_4 = mul nsw i32 %B_load_4, %A_load_4" [matrixmultiplication.cpp:16]   --->   Operation 166 'mul' 'mul_ln16_4' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 167 [1/2] (2.56ns)   --->   "%A_load_6 = load i32* %A_addr_6, align 4" [matrixmultiplication.cpp:16]   --->   Operation 167 'load' 'A_load_6' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_10 : Operation 168 [2/2] (2.56ns)   --->   "%A_load_7 = load i32* %A_addr_7, align 4" [matrixmultiplication.cpp:16]   --->   Operation 168 'load' 'A_load_7' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_10 : Operation 169 [1/2] (2.56ns)   --->   "%B_load_8 = load i32* %B_addr_8, align 4" [matrixmultiplication.cpp:16]   --->   Operation 169 'load' 'B_load_8' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_10 : Operation 170 [2/2] (2.56ns)   --->   "%B_load_9 = load i32* %B_addr_9, align 4" [matrixmultiplication.cpp:16]   --->   Operation 170 'load' 'B_load_9' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>

State 11 <SV = 10> <Delay = 3.95>
ST_11 : Operation 171 [1/1] (0.00ns)   --->   "%or_ln16_7 = or i11 %tmp, 8" [matrixmultiplication.cpp:16]   --->   Operation 171 'or' 'or_ln16_7' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_11 : Operation 172 [1/1] (0.00ns)   --->   "%tmp_9 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %or_ln16_7)" [matrixmultiplication.cpp:16]   --->   Operation 172 'bitconcatenate' 'tmp_9' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_11 : Operation 173 [1/1] (0.00ns)   --->   "%A_addr_8 = getelementptr [1024 x i32]* %A, i64 0, i64 %tmp_9" [matrixmultiplication.cpp:16]   --->   Operation 173 'getelementptr' 'A_addr_8' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_11 : Operation 174 [1/1] (0.00ns)   --->   "%tmp_37 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 6, i6 %select_ln16)" [matrixmultiplication.cpp:16]   --->   Operation 174 'bitconcatenate' 'tmp_37' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_11 : Operation 175 [1/1] (0.00ns)   --->   "%B_addr_12 = getelementptr [1024 x i32]* %B, i64 0, i64 %tmp_37" [matrixmultiplication.cpp:16]   --->   Operation 175 'getelementptr' 'B_addr_12' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_11 : Operation 176 [1/5] (3.95ns)   --->   "%mul_ln16_2 = mul nsw i32 %B_load_2, %A_load_2" [matrixmultiplication.cpp:16]   --->   Operation 176 'mul' 'mul_ln16_2' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 177 [3/5] (3.95ns)   --->   "%mul_ln16_4 = mul nsw i32 %B_load_4, %A_load_4" [matrixmultiplication.cpp:16]   --->   Operation 177 'mul' 'mul_ln16_4' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 178 [5/5] (3.95ns)   --->   "%mul_ln16_6 = mul nsw i32 %B_load_6, %A_load_6" [matrixmultiplication.cpp:16]   --->   Operation 178 'mul' 'mul_ln16_6' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 179 [1/2] (2.56ns)   --->   "%A_load_7 = load i32* %A_addr_7, align 4" [matrixmultiplication.cpp:16]   --->   Operation 179 'load' 'A_load_7' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_11 : Operation 180 [2/2] (2.56ns)   --->   "%A_load_8 = load i32* %A_addr_8, align 4" [matrixmultiplication.cpp:16]   --->   Operation 180 'load' 'A_load_8' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_11 : Operation 181 [1/2] (2.56ns)   --->   "%B_load_9 = load i32* %B_addr_9, align 4" [matrixmultiplication.cpp:16]   --->   Operation 181 'load' 'B_load_9' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_11 : Operation 182 [2/2] (2.56ns)   --->   "%B_load_12 = load i32* %B_addr_12, align 4" [matrixmultiplication.cpp:16]   --->   Operation 182 'load' 'B_load_12' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_11 : Operation 183 [1/1] (2.55ns)   --->   "%add_ln16 = add i32 %mul_ln16_1, %mul_ln16" [matrixmultiplication.cpp:16]   --->   Operation 183 'add' 'add_ln16' <Predicate = (!icmp_ln10)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 3.95>
ST_12 : Operation 184 [1/1] (0.00ns)   --->   "%or_ln16_8 = or i11 %tmp, 9" [matrixmultiplication.cpp:16]   --->   Operation 184 'or' 'or_ln16_8' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_12 : Operation 185 [1/1] (0.00ns)   --->   "%tmp_s = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %or_ln16_8)" [matrixmultiplication.cpp:16]   --->   Operation 185 'bitconcatenate' 'tmp_s' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_12 : Operation 186 [1/1] (0.00ns)   --->   "%A_addr_9 = getelementptr [1024 x i32]* %A, i64 0, i64 %tmp_s" [matrixmultiplication.cpp:16]   --->   Operation 186 'getelementptr' 'A_addr_9' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_12 : Operation 187 [1/1] (0.00ns)   --->   "%tmp_39 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 8, i6 %select_ln16)" [matrixmultiplication.cpp:16]   --->   Operation 187 'bitconcatenate' 'tmp_39' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_12 : Operation 188 [1/1] (0.00ns)   --->   "%B_addr_16 = getelementptr [1024 x i32]* %B, i64 0, i64 %tmp_39" [matrixmultiplication.cpp:16]   --->   Operation 188 'getelementptr' 'B_addr_16' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_12 : Operation 189 [2/5] (3.95ns)   --->   "%mul_ln16_4 = mul nsw i32 %B_load_4, %A_load_4" [matrixmultiplication.cpp:16]   --->   Operation 189 'mul' 'mul_ln16_4' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 190 [4/5] (3.95ns)   --->   "%mul_ln16_6 = mul nsw i32 %B_load_6, %A_load_6" [matrixmultiplication.cpp:16]   --->   Operation 190 'mul' 'mul_ln16_6' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 191 [5/5] (3.95ns)   --->   "%mul_ln16_7 = mul nsw i32 %B_load_7, %A_load_7" [matrixmultiplication.cpp:16]   --->   Operation 191 'mul' 'mul_ln16_7' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 192 [1/2] (2.56ns)   --->   "%A_load_8 = load i32* %A_addr_8, align 4" [matrixmultiplication.cpp:16]   --->   Operation 192 'load' 'A_load_8' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_12 : Operation 193 [2/2] (2.56ns)   --->   "%A_load_9 = load i32* %A_addr_9, align 4" [matrixmultiplication.cpp:16]   --->   Operation 193 'load' 'A_load_9' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_12 : Operation 194 [1/2] (2.56ns)   --->   "%B_load_12 = load i32* %B_addr_12, align 4" [matrixmultiplication.cpp:16]   --->   Operation 194 'load' 'B_load_12' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_12 : Operation 195 [2/2] (2.56ns)   --->   "%B_load_16 = load i32* %B_addr_16, align 4" [matrixmultiplication.cpp:16]   --->   Operation 195 'load' 'B_load_16' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>

State 13 <SV = 12> <Delay = 4.29>
ST_13 : Operation 196 [1/1] (0.00ns)   --->   "%or_ln16_11 = or i11 %tmp, 12" [matrixmultiplication.cpp:16]   --->   Operation 196 'or' 'or_ln16_11' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_13 : Operation 197 [1/1] (0.00ns)   --->   "%tmp_12 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %or_ln16_11)" [matrixmultiplication.cpp:16]   --->   Operation 197 'bitconcatenate' 'tmp_12' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_13 : Operation 198 [1/1] (0.00ns)   --->   "%A_addr_12 = getelementptr [1024 x i32]* %A, i64 0, i64 %tmp_12" [matrixmultiplication.cpp:16]   --->   Operation 198 'getelementptr' 'A_addr_12' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_13 : Operation 199 [1/1] (0.00ns)   --->   "%zext_ln16_5 = zext i6 %select_ln16 to i10" [matrixmultiplication.cpp:16]   --->   Operation 199 'zext' 'zext_ln16_5' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_13 : Operation 200 [1/1] (1.73ns)   --->   "%add_ln16_38 = add i10 %zext_ln16_5, -480" [matrixmultiplication.cpp:16]   --->   Operation 200 'add' 'add_ln16_38' <Predicate = (!icmp_ln10)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 201 [1/1] (0.00ns)   --->   "%zext_ln16_17 = zext i10 %add_ln16_38 to i64" [matrixmultiplication.cpp:16]   --->   Operation 201 'zext' 'zext_ln16_17' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_13 : Operation 202 [1/1] (0.00ns)   --->   "%B_addr_17 = getelementptr [1024 x i32]* %B, i64 0, i64 %zext_ln16_17" [matrixmultiplication.cpp:16]   --->   Operation 202 'getelementptr' 'B_addr_17' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_13 : Operation 203 [1/5] (3.95ns)   --->   "%mul_ln16_4 = mul nsw i32 %B_load_4, %A_load_4" [matrixmultiplication.cpp:16]   --->   Operation 203 'mul' 'mul_ln16_4' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 204 [3/5] (3.95ns)   --->   "%mul_ln16_6 = mul nsw i32 %B_load_6, %A_load_6" [matrixmultiplication.cpp:16]   --->   Operation 204 'mul' 'mul_ln16_6' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 205 [4/5] (3.95ns)   --->   "%mul_ln16_7 = mul nsw i32 %B_load_7, %A_load_7" [matrixmultiplication.cpp:16]   --->   Operation 205 'mul' 'mul_ln16_7' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 206 [5/5] (3.95ns)   --->   "%mul_ln16_8 = mul nsw i32 %B_load_8, %A_load_8" [matrixmultiplication.cpp:16]   --->   Operation 206 'mul' 'mul_ln16_8' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 207 [1/2] (2.56ns)   --->   "%A_load_9 = load i32* %A_addr_9, align 4" [matrixmultiplication.cpp:16]   --->   Operation 207 'load' 'A_load_9' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_13 : Operation 208 [2/2] (2.56ns)   --->   "%A_load_12 = load i32* %A_addr_12, align 4" [matrixmultiplication.cpp:16]   --->   Operation 208 'load' 'A_load_12' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_13 : Operation 209 [1/2] (2.56ns)   --->   "%B_load_16 = load i32* %B_addr_16, align 4" [matrixmultiplication.cpp:16]   --->   Operation 209 'load' 'B_load_16' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_13 : Operation 210 [2/2] (2.56ns)   --->   "%B_load_17 = load i32* %B_addr_17, align 4" [matrixmultiplication.cpp:16]   --->   Operation 210 'load' 'B_load_17' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>

State 14 <SV = 13> <Delay = 3.95>
ST_14 : Operation 211 [1/1] (0.00ns)   --->   "%or_ln16_12 = or i11 %tmp, 13" [matrixmultiplication.cpp:16]   --->   Operation 211 'or' 'or_ln16_12' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_14 : Operation 212 [1/1] (0.00ns)   --->   "%tmp_13 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %or_ln16_12)" [matrixmultiplication.cpp:16]   --->   Operation 212 'bitconcatenate' 'tmp_13' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_14 : Operation 213 [1/1] (0.00ns)   --->   "%A_addr_13 = getelementptr [1024 x i32]* %A, i64 0, i64 %tmp_13" [matrixmultiplication.cpp:16]   --->   Operation 213 'getelementptr' 'A_addr_13' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_14 : Operation 214 [1/1] (0.00ns)   --->   "%tmp_43 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 12, i6 %select_ln16)" [matrixmultiplication.cpp:16]   --->   Operation 214 'bitconcatenate' 'tmp_43' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_14 : Operation 215 [1/1] (0.00ns)   --->   "%B_addr_24 = getelementptr [1024 x i32]* %B, i64 0, i64 %tmp_43" [matrixmultiplication.cpp:16]   --->   Operation 215 'getelementptr' 'B_addr_24' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_14 : Operation 216 [2/5] (3.95ns)   --->   "%mul_ln16_6 = mul nsw i32 %B_load_6, %A_load_6" [matrixmultiplication.cpp:16]   --->   Operation 216 'mul' 'mul_ln16_6' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 217 [3/5] (3.95ns)   --->   "%mul_ln16_7 = mul nsw i32 %B_load_7, %A_load_7" [matrixmultiplication.cpp:16]   --->   Operation 217 'mul' 'mul_ln16_7' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 218 [4/5] (3.95ns)   --->   "%mul_ln16_8 = mul nsw i32 %B_load_8, %A_load_8" [matrixmultiplication.cpp:16]   --->   Operation 218 'mul' 'mul_ln16_8' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 219 [5/5] (3.95ns)   --->   "%mul_ln16_9 = mul nsw i32 %B_load_9, %A_load_9" [matrixmultiplication.cpp:16]   --->   Operation 219 'mul' 'mul_ln16_9' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 220 [1/2] (2.56ns)   --->   "%A_load_12 = load i32* %A_addr_12, align 4" [matrixmultiplication.cpp:16]   --->   Operation 220 'load' 'A_load_12' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_14 : Operation 221 [2/2] (2.56ns)   --->   "%A_load_13 = load i32* %A_addr_13, align 4" [matrixmultiplication.cpp:16]   --->   Operation 221 'load' 'A_load_13' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_14 : Operation 222 [1/2] (2.56ns)   --->   "%B_load_17 = load i32* %B_addr_17, align 4" [matrixmultiplication.cpp:16]   --->   Operation 222 'load' 'B_load_17' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_14 : Operation 223 [2/2] (2.56ns)   --->   "%B_load_24 = load i32* %B_addr_24, align 4" [matrixmultiplication.cpp:16]   --->   Operation 223 'load' 'B_load_24' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>

State 15 <SV = 14> <Delay = 3.95>
ST_15 : Operation 224 [1/1] (0.00ns)   --->   "%or_ln16_15 = or i11 %tmp, 16" [matrixmultiplication.cpp:16]   --->   Operation 224 'or' 'or_ln16_15' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_15 : Operation 225 [1/1] (0.00ns)   --->   "%tmp_16 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %or_ln16_15)" [matrixmultiplication.cpp:16]   --->   Operation 225 'bitconcatenate' 'tmp_16' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_15 : Operation 226 [1/1] (0.00ns)   --->   "%A_addr_16 = getelementptr [1024 x i32]* %A, i64 0, i64 %tmp_16" [matrixmultiplication.cpp:16]   --->   Operation 226 'getelementptr' 'A_addr_16' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_15 : Operation 227 [1/1] (0.00ns)   --->   "%zext_ln16_6 = zext i6 %select_ln16 to i8" [matrixmultiplication.cpp:16]   --->   Operation 227 'zext' 'zext_ln16_6' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_15 : Operation 228 [1/1] (1.91ns)   --->   "%add_ln16_32 = add i8 %zext_ln16_6, 96" [matrixmultiplication.cpp:16]   --->   Operation 228 'add' 'add_ln16_32' <Predicate = (!icmp_ln10)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 229 [1/1] (0.00ns)   --->   "%sext_ln16_1 = sext i9 %add_ln16_35 to i10" [matrixmultiplication.cpp:16]   --->   Operation 229 'sext' 'sext_ln16_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_15 : Operation 230 [1/1] (0.00ns)   --->   "%zext_ln16_21 = zext i10 %sext_ln16_1 to i64" [matrixmultiplication.cpp:16]   --->   Operation 230 'zext' 'zext_ln16_21' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_15 : Operation 231 [1/1] (0.00ns)   --->   "%B_addr_25 = getelementptr [1024 x i32]* %B, i64 0, i64 %zext_ln16_21" [matrixmultiplication.cpp:16]   --->   Operation 231 'getelementptr' 'B_addr_25' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_15 : Operation 232 [1/5] (3.95ns)   --->   "%mul_ln16_6 = mul nsw i32 %B_load_6, %A_load_6" [matrixmultiplication.cpp:16]   --->   Operation 232 'mul' 'mul_ln16_6' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 233 [2/5] (3.95ns)   --->   "%mul_ln16_7 = mul nsw i32 %B_load_7, %A_load_7" [matrixmultiplication.cpp:16]   --->   Operation 233 'mul' 'mul_ln16_7' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 234 [3/5] (3.95ns)   --->   "%mul_ln16_8 = mul nsw i32 %B_load_8, %A_load_8" [matrixmultiplication.cpp:16]   --->   Operation 234 'mul' 'mul_ln16_8' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 235 [4/5] (3.95ns)   --->   "%mul_ln16_9 = mul nsw i32 %B_load_9, %A_load_9" [matrixmultiplication.cpp:16]   --->   Operation 235 'mul' 'mul_ln16_9' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 236 [5/5] (3.95ns)   --->   "%mul_ln16_12 = mul nsw i32 %B_load_12, %A_load_12" [matrixmultiplication.cpp:16]   --->   Operation 236 'mul' 'mul_ln16_12' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 237 [1/2] (2.56ns)   --->   "%A_load_13 = load i32* %A_addr_13, align 4" [matrixmultiplication.cpp:16]   --->   Operation 237 'load' 'A_load_13' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_15 : Operation 238 [2/2] (2.56ns)   --->   "%A_load_16 = load i32* %A_addr_16, align 4" [matrixmultiplication.cpp:16]   --->   Operation 238 'load' 'A_load_16' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_15 : Operation 239 [1/2] (2.56ns)   --->   "%B_load_24 = load i32* %B_addr_24, align 4" [matrixmultiplication.cpp:16]   --->   Operation 239 'load' 'B_load_24' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_15 : Operation 240 [2/2] (2.56ns)   --->   "%B_load_25 = load i32* %B_addr_25, align 4" [matrixmultiplication.cpp:16]   --->   Operation 240 'load' 'B_load_25' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>

State 16 <SV = 15> <Delay = 3.95>
ST_16 : Operation 241 [1/1] (0.00ns)   --->   "%or_ln16_16 = or i11 %tmp, 17" [matrixmultiplication.cpp:16]   --->   Operation 241 'or' 'or_ln16_16' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_16 : Operation 242 [1/1] (0.00ns)   --->   "%tmp_17 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %or_ln16_16)" [matrixmultiplication.cpp:16]   --->   Operation 242 'bitconcatenate' 'tmp_17' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_16 : Operation 243 [1/1] (0.00ns)   --->   "%A_addr_17 = getelementptr [1024 x i32]* %A, i64 0, i64 %tmp_17" [matrixmultiplication.cpp:16]   --->   Operation 243 'getelementptr' 'A_addr_17' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_16 : Operation 244 [1/1] (0.00ns)   --->   "%zext_ln16_10 = zext i8 %add_ln16_32 to i64" [matrixmultiplication.cpp:16]   --->   Operation 244 'zext' 'zext_ln16_10' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_16 : Operation 245 [1/1] (0.00ns)   --->   "%B_addr_3 = getelementptr [1024 x i32]* %B, i64 0, i64 %zext_ln16_10" [matrixmultiplication.cpp:16]   --->   Operation 245 'getelementptr' 'B_addr_3' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_16 : Operation 246 [1/1] (1.91ns)   --->   "%add_ln16_33 = add i8 %zext_ln16_6, -96" [matrixmultiplication.cpp:16]   --->   Operation 246 'add' 'add_ln16_33' <Predicate = (!icmp_ln10)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 247 [2/2] (2.56ns)   --->   "%B_load_3 = load i32* %B_addr_3, align 4" [matrixmultiplication.cpp:16]   --->   Operation 247 'load' 'B_load_3' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_16 : Operation 248 [1/5] (3.95ns)   --->   "%mul_ln16_7 = mul nsw i32 %B_load_7, %A_load_7" [matrixmultiplication.cpp:16]   --->   Operation 248 'mul' 'mul_ln16_7' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 249 [2/5] (3.95ns)   --->   "%mul_ln16_8 = mul nsw i32 %B_load_8, %A_load_8" [matrixmultiplication.cpp:16]   --->   Operation 249 'mul' 'mul_ln16_8' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 250 [3/5] (3.95ns)   --->   "%mul_ln16_9 = mul nsw i32 %B_load_9, %A_load_9" [matrixmultiplication.cpp:16]   --->   Operation 250 'mul' 'mul_ln16_9' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 251 [4/5] (3.95ns)   --->   "%mul_ln16_12 = mul nsw i32 %B_load_12, %A_load_12" [matrixmultiplication.cpp:16]   --->   Operation 251 'mul' 'mul_ln16_12' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 252 [1/2] (2.56ns)   --->   "%A_load_16 = load i32* %A_addr_16, align 4" [matrixmultiplication.cpp:16]   --->   Operation 252 'load' 'A_load_16' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_16 : Operation 253 [2/2] (2.56ns)   --->   "%A_load_17 = load i32* %A_addr_17, align 4" [matrixmultiplication.cpp:16]   --->   Operation 253 'load' 'A_load_17' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_16 : Operation 254 [1/2] (2.56ns)   --->   "%B_load_25 = load i32* %B_addr_25, align 4" [matrixmultiplication.cpp:16]   --->   Operation 254 'load' 'B_load_25' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>

State 17 <SV = 16> <Delay = 3.95>
ST_17 : Operation 255 [1/1] (0.00ns)   --->   "%or_ln16_23 = or i11 %tmp, 24" [matrixmultiplication.cpp:16]   --->   Operation 255 'or' 'or_ln16_23' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_17 : Operation 256 [1/1] (0.00ns)   --->   "%tmp_24 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %or_ln16_23)" [matrixmultiplication.cpp:16]   --->   Operation 256 'bitconcatenate' 'tmp_24' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_17 : Operation 257 [1/1] (0.00ns)   --->   "%A_addr_24 = getelementptr [1024 x i32]* %A, i64 0, i64 %tmp_24" [matrixmultiplication.cpp:16]   --->   Operation 257 'getelementptr' 'A_addr_24' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_17 : Operation 258 [1/1] (0.00ns)   --->   "%zext_ln16_11 = zext i8 %add_ln16_33 to i64" [matrixmultiplication.cpp:16]   --->   Operation 258 'zext' 'zext_ln16_11' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_17 : Operation 259 [1/1] (0.00ns)   --->   "%B_addr_5 = getelementptr [1024 x i32]* %B, i64 0, i64 %zext_ln16_11" [matrixmultiplication.cpp:16]   --->   Operation 259 'getelementptr' 'B_addr_5' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_17 : Operation 260 [1/2] (2.56ns)   --->   "%B_load_3 = load i32* %B_addr_3, align 4" [matrixmultiplication.cpp:16]   --->   Operation 260 'load' 'B_load_3' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_17 : Operation 261 [2/2] (2.56ns)   --->   "%B_load_5 = load i32* %B_addr_5, align 4" [matrixmultiplication.cpp:16]   --->   Operation 261 'load' 'B_load_5' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_17 : Operation 262 [1/5] (3.95ns)   --->   "%mul_ln16_8 = mul nsw i32 %B_load_8, %A_load_8" [matrixmultiplication.cpp:16]   --->   Operation 262 'mul' 'mul_ln16_8' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 263 [2/5] (3.95ns)   --->   "%mul_ln16_9 = mul nsw i32 %B_load_9, %A_load_9" [matrixmultiplication.cpp:16]   --->   Operation 263 'mul' 'mul_ln16_9' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 264 [3/5] (3.95ns)   --->   "%mul_ln16_12 = mul nsw i32 %B_load_12, %A_load_12" [matrixmultiplication.cpp:16]   --->   Operation 264 'mul' 'mul_ln16_12' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 265 [5/5] (3.95ns)   --->   "%mul_ln16_16 = mul nsw i32 %B_load_16, %A_load_16" [matrixmultiplication.cpp:16]   --->   Operation 265 'mul' 'mul_ln16_16' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 266 [1/2] (2.56ns)   --->   "%A_load_17 = load i32* %A_addr_17, align 4" [matrixmultiplication.cpp:16]   --->   Operation 266 'load' 'A_load_17' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_17 : Operation 267 [2/2] (2.56ns)   --->   "%A_load_24 = load i32* %A_addr_24, align 4" [matrixmultiplication.cpp:16]   --->   Operation 267 'load' 'A_load_24' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_17 : Operation 268 [1/1] (2.55ns)   --->   "%add_ln16_4 = add i32 %mul_ln16_7, %mul_ln16_6" [matrixmultiplication.cpp:16]   --->   Operation 268 'add' 'add_ln16_4' <Predicate = (!icmp_ln10)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 18 <SV = 17> <Delay = 3.95>
ST_18 : Operation 269 [1/1] (0.00ns)   --->   "%or_ln16_24 = or i11 %tmp, 25" [matrixmultiplication.cpp:16]   --->   Operation 269 'or' 'or_ln16_24' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_18 : Operation 270 [1/1] (0.00ns)   --->   "%tmp_25 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %or_ln16_24)" [matrixmultiplication.cpp:16]   --->   Operation 270 'bitconcatenate' 'tmp_25' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_18 : Operation 271 [1/1] (0.00ns)   --->   "%A_addr_25 = getelementptr [1024 x i32]* %A, i64 0, i64 %tmp_25" [matrixmultiplication.cpp:16]   --->   Operation 271 'getelementptr' 'A_addr_25' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_18 : Operation 272 [1/1] (0.00ns)   --->   "%sext_ln16 = sext i8 %add_ln16_33 to i9" [matrixmultiplication.cpp:16]   --->   Operation 272 'sext' 'sext_ln16' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_18 : Operation 273 [1/1] (0.00ns)   --->   "%zext_ln16_15 = zext i9 %sext_ln16 to i64" [matrixmultiplication.cpp:16]   --->   Operation 273 'zext' 'zext_ln16_15' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_18 : Operation 274 [1/1] (0.00ns)   --->   "%B_addr_13 = getelementptr [1024 x i32]* %B, i64 0, i64 %zext_ln16_15" [matrixmultiplication.cpp:16]   --->   Operation 274 'getelementptr' 'B_addr_13' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_18 : Operation 275 [1/2] (2.56ns)   --->   "%B_load_5 = load i32* %B_addr_5, align 4" [matrixmultiplication.cpp:16]   --->   Operation 275 'load' 'B_load_5' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_18 : Operation 276 [1/5] (3.95ns)   --->   "%mul_ln16_9 = mul nsw i32 %B_load_9, %A_load_9" [matrixmultiplication.cpp:16]   --->   Operation 276 'mul' 'mul_ln16_9' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 277 [2/5] (3.95ns)   --->   "%mul_ln16_12 = mul nsw i32 %B_load_12, %A_load_12" [matrixmultiplication.cpp:16]   --->   Operation 277 'mul' 'mul_ln16_12' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 278 [2/2] (2.56ns)   --->   "%B_load_13 = load i32* %B_addr_13, align 4" [matrixmultiplication.cpp:16]   --->   Operation 278 'load' 'B_load_13' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_18 : Operation 279 [4/5] (3.95ns)   --->   "%mul_ln16_16 = mul nsw i32 %B_load_16, %A_load_16" [matrixmultiplication.cpp:16]   --->   Operation 279 'mul' 'mul_ln16_16' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 280 [5/5] (3.95ns)   --->   "%mul_ln16_17 = mul nsw i32 %B_load_17, %A_load_17" [matrixmultiplication.cpp:16]   --->   Operation 280 'mul' 'mul_ln16_17' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 281 [1/2] (2.56ns)   --->   "%A_load_24 = load i32* %A_addr_24, align 4" [matrixmultiplication.cpp:16]   --->   Operation 281 'load' 'A_load_24' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_18 : Operation 282 [2/2] (2.56ns)   --->   "%A_load_25 = load i32* %A_addr_25, align 4" [matrixmultiplication.cpp:16]   --->   Operation 282 'load' 'A_load_25' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>

State 19 <SV = 18> <Delay = 3.95>
ST_19 : Operation 283 [1/1] (0.00ns)   --->   "%or_ln16_9 = or i11 %tmp, 10" [matrixmultiplication.cpp:16]   --->   Operation 283 'or' 'or_ln16_9' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_19 : Operation 284 [1/1] (0.00ns)   --->   "%tmp_10 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %or_ln16_9)" [matrixmultiplication.cpp:16]   --->   Operation 284 'bitconcatenate' 'tmp_10' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_19 : Operation 285 [1/1] (0.00ns)   --->   "%A_addr_10 = getelementptr [1024 x i32]* %A, i64 0, i64 %tmp_10" [matrixmultiplication.cpp:16]   --->   Operation 285 'getelementptr' 'A_addr_10' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_19 : Operation 286 [1/1] (0.00ns)   --->   "%tmp_36 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 5, i6 %select_ln16)" [matrixmultiplication.cpp:16]   --->   Operation 286 'bitconcatenate' 'tmp_36' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_19 : Operation 287 [1/1] (0.00ns)   --->   "%B_addr_10 = getelementptr [1024 x i32]* %B, i64 0, i64 %tmp_36" [matrixmultiplication.cpp:16]   --->   Operation 287 'getelementptr' 'B_addr_10' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_19 : Operation 288 [1/1] (1.82ns)   --->   "%add_ln16_36 = add i9 %zext_ln16_7, -160" [matrixmultiplication.cpp:16]   --->   Operation 288 'add' 'add_ln16_36' <Predicate = (!icmp_ln10)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 289 [2/2] (2.56ns)   --->   "%A_load_10 = load i32* %A_addr_10, align 4" [matrixmultiplication.cpp:16]   --->   Operation 289 'load' 'A_load_10' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_19 : Operation 290 [2/2] (2.56ns)   --->   "%B_load_10 = load i32* %B_addr_10, align 4" [matrixmultiplication.cpp:16]   --->   Operation 290 'load' 'B_load_10' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_19 : Operation 291 [1/5] (3.95ns)   --->   "%mul_ln16_12 = mul nsw i32 %B_load_12, %A_load_12" [matrixmultiplication.cpp:16]   --->   Operation 291 'mul' 'mul_ln16_12' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 292 [1/2] (2.56ns)   --->   "%B_load_13 = load i32* %B_addr_13, align 4" [matrixmultiplication.cpp:16]   --->   Operation 292 'load' 'B_load_13' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_19 : Operation 293 [3/5] (3.95ns)   --->   "%mul_ln16_16 = mul nsw i32 %B_load_16, %A_load_16" [matrixmultiplication.cpp:16]   --->   Operation 293 'mul' 'mul_ln16_16' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 294 [4/5] (3.95ns)   --->   "%mul_ln16_17 = mul nsw i32 %B_load_17, %A_load_17" [matrixmultiplication.cpp:16]   --->   Operation 294 'mul' 'mul_ln16_17' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 295 [5/5] (3.95ns)   --->   "%mul_ln16_24 = mul nsw i32 %B_load_24, %A_load_24" [matrixmultiplication.cpp:16]   --->   Operation 295 'mul' 'mul_ln16_24' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 296 [1/2] (2.56ns)   --->   "%A_load_25 = load i32* %A_addr_25, align 4" [matrixmultiplication.cpp:16]   --->   Operation 296 'load' 'A_load_25' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_19 : Operation 297 [1/1] (2.55ns)   --->   "%add_ln16_7 = add i32 %mul_ln16_9, %mul_ln16_8" [matrixmultiplication.cpp:16]   --->   Operation 297 'add' 'add_ln16_7' <Predicate = (!icmp_ln10)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 20 <SV = 19> <Delay = 3.95>
ST_20 : Operation 298 [1/1] (0.00ns)   --->   "%or_ln16_10 = or i11 %tmp, 11" [matrixmultiplication.cpp:16]   --->   Operation 298 'or' 'or_ln16_10' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_20 : Operation 299 [1/1] (0.00ns)   --->   "%tmp_11 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %or_ln16_10)" [matrixmultiplication.cpp:16]   --->   Operation 299 'bitconcatenate' 'tmp_11' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_20 : Operation 300 [1/1] (0.00ns)   --->   "%A_addr_11 = getelementptr [1024 x i32]* %A, i64 0, i64 %tmp_11" [matrixmultiplication.cpp:16]   --->   Operation 300 'getelementptr' 'A_addr_11' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_20 : Operation 301 [1/1] (0.00ns)   --->   "%zext_ln16_14 = zext i9 %add_ln16_36 to i64" [matrixmultiplication.cpp:16]   --->   Operation 301 'zext' 'zext_ln16_14' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_20 : Operation 302 [1/1] (0.00ns)   --->   "%B_addr_11 = getelementptr [1024 x i32]* %B, i64 0, i64 %zext_ln16_14" [matrixmultiplication.cpp:16]   --->   Operation 302 'getelementptr' 'B_addr_11' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_20 : Operation 303 [1/2] (2.56ns)   --->   "%A_load_10 = load i32* %A_addr_10, align 4" [matrixmultiplication.cpp:16]   --->   Operation 303 'load' 'A_load_10' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_20 : Operation 304 [1/2] (2.56ns)   --->   "%B_load_10 = load i32* %B_addr_10, align 4" [matrixmultiplication.cpp:16]   --->   Operation 304 'load' 'B_load_10' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_20 : Operation 305 [2/2] (2.56ns)   --->   "%A_load_11 = load i32* %A_addr_11, align 4" [matrixmultiplication.cpp:16]   --->   Operation 305 'load' 'A_load_11' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_20 : Operation 306 [2/2] (2.56ns)   --->   "%B_load_11 = load i32* %B_addr_11, align 4" [matrixmultiplication.cpp:16]   --->   Operation 306 'load' 'B_load_11' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_20 : Operation 307 [2/5] (3.95ns)   --->   "%mul_ln16_16 = mul nsw i32 %B_load_16, %A_load_16" [matrixmultiplication.cpp:16]   --->   Operation 307 'mul' 'mul_ln16_16' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 308 [3/5] (3.95ns)   --->   "%mul_ln16_17 = mul nsw i32 %B_load_17, %A_load_17" [matrixmultiplication.cpp:16]   --->   Operation 308 'mul' 'mul_ln16_17' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 309 [4/5] (3.95ns)   --->   "%mul_ln16_24 = mul nsw i32 %B_load_24, %A_load_24" [matrixmultiplication.cpp:16]   --->   Operation 309 'mul' 'mul_ln16_24' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 310 [5/5] (3.95ns)   --->   "%mul_ln16_25 = mul nsw i32 %B_load_25, %A_load_25" [matrixmultiplication.cpp:16]   --->   Operation 310 'mul' 'mul_ln16_25' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 21 <SV = 20> <Delay = 3.95>
ST_21 : Operation 311 [1/1] (0.00ns)   --->   "%or_ln16_13 = or i11 %tmp, 14" [matrixmultiplication.cpp:16]   --->   Operation 311 'or' 'or_ln16_13' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_21 : Operation 312 [1/1] (0.00ns)   --->   "%tmp_14 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %or_ln16_13)" [matrixmultiplication.cpp:16]   --->   Operation 312 'bitconcatenate' 'tmp_14' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_21 : Operation 313 [1/1] (0.00ns)   --->   "%A_addr_14 = getelementptr [1024 x i32]* %A, i64 0, i64 %tmp_14" [matrixmultiplication.cpp:16]   --->   Operation 313 'getelementptr' 'A_addr_14' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_21 : Operation 314 [1/1] (0.00ns)   --->   "%tmp_38 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 7, i6 %select_ln16)" [matrixmultiplication.cpp:16]   --->   Operation 314 'bitconcatenate' 'tmp_38' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_21 : Operation 315 [1/1] (0.00ns)   --->   "%B_addr_14 = getelementptr [1024 x i32]* %B, i64 0, i64 %tmp_38" [matrixmultiplication.cpp:16]   --->   Operation 315 'getelementptr' 'B_addr_14' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_21 : Operation 316 [5/5] (3.95ns)   --->   "%mul_ln16_3 = mul nsw i32 %B_load_3, %A_load_3" [matrixmultiplication.cpp:16]   --->   Operation 316 'mul' 'mul_ln16_3' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 317 [1/2] (2.56ns)   --->   "%A_load_11 = load i32* %A_addr_11, align 4" [matrixmultiplication.cpp:16]   --->   Operation 317 'load' 'A_load_11' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_21 : Operation 318 [1/2] (2.56ns)   --->   "%B_load_11 = load i32* %B_addr_11, align 4" [matrixmultiplication.cpp:16]   --->   Operation 318 'load' 'B_load_11' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_21 : Operation 319 [2/2] (2.56ns)   --->   "%A_load_14 = load i32* %A_addr_14, align 4" [matrixmultiplication.cpp:16]   --->   Operation 319 'load' 'A_load_14' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_21 : Operation 320 [2/2] (2.56ns)   --->   "%B_load_14 = load i32* %B_addr_14, align 4" [matrixmultiplication.cpp:16]   --->   Operation 320 'load' 'B_load_14' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_21 : Operation 321 [1/5] (3.95ns)   --->   "%mul_ln16_16 = mul nsw i32 %B_load_16, %A_load_16" [matrixmultiplication.cpp:16]   --->   Operation 321 'mul' 'mul_ln16_16' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 322 [2/5] (3.95ns)   --->   "%mul_ln16_17 = mul nsw i32 %B_load_17, %A_load_17" [matrixmultiplication.cpp:16]   --->   Operation 322 'mul' 'mul_ln16_17' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 323 [3/5] (3.95ns)   --->   "%mul_ln16_24 = mul nsw i32 %B_load_24, %A_load_24" [matrixmultiplication.cpp:16]   --->   Operation 323 'mul' 'mul_ln16_24' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 324 [4/5] (3.95ns)   --->   "%mul_ln16_25 = mul nsw i32 %B_load_25, %A_load_25" [matrixmultiplication.cpp:16]   --->   Operation 324 'mul' 'mul_ln16_25' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 22 <SV = 21> <Delay = 4.29>
ST_22 : Operation 325 [1/1] (0.00ns)   --->   "%or_ln16_14 = or i11 %tmp, 15" [matrixmultiplication.cpp:16]   --->   Operation 325 'or' 'or_ln16_14' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_22 : Operation 326 [1/1] (0.00ns)   --->   "%tmp_15 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %or_ln16_14)" [matrixmultiplication.cpp:16]   --->   Operation 326 'bitconcatenate' 'tmp_15' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_22 : Operation 327 [1/1] (0.00ns)   --->   "%A_addr_15 = getelementptr [1024 x i32]* %A, i64 0, i64 %tmp_15" [matrixmultiplication.cpp:16]   --->   Operation 327 'getelementptr' 'A_addr_15' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_22 : Operation 328 [1/1] (1.73ns)   --->   "%add_ln16_37 = add i10 %zext_ln16_5, 480" [matrixmultiplication.cpp:16]   --->   Operation 328 'add' 'add_ln16_37' <Predicate = (!icmp_ln10)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 329 [1/1] (0.00ns)   --->   "%zext_ln16_16 = zext i10 %add_ln16_37 to i64" [matrixmultiplication.cpp:16]   --->   Operation 329 'zext' 'zext_ln16_16' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_22 : Operation 330 [1/1] (0.00ns)   --->   "%B_addr_15 = getelementptr [1024 x i32]* %B, i64 0, i64 %zext_ln16_16" [matrixmultiplication.cpp:16]   --->   Operation 330 'getelementptr' 'B_addr_15' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_22 : Operation 331 [4/5] (3.95ns)   --->   "%mul_ln16_3 = mul nsw i32 %B_load_3, %A_load_3" [matrixmultiplication.cpp:16]   --->   Operation 331 'mul' 'mul_ln16_3' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 332 [5/5] (3.95ns)   --->   "%mul_ln16_5 = mul nsw i32 %B_load_5, %A_load_5" [matrixmultiplication.cpp:16]   --->   Operation 332 'mul' 'mul_ln16_5' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 333 [1/2] (2.56ns)   --->   "%A_load_14 = load i32* %A_addr_14, align 4" [matrixmultiplication.cpp:16]   --->   Operation 333 'load' 'A_load_14' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_22 : Operation 334 [1/2] (2.56ns)   --->   "%B_load_14 = load i32* %B_addr_14, align 4" [matrixmultiplication.cpp:16]   --->   Operation 334 'load' 'B_load_14' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_22 : Operation 335 [2/2] (2.56ns)   --->   "%A_load_15 = load i32* %A_addr_15, align 4" [matrixmultiplication.cpp:16]   --->   Operation 335 'load' 'A_load_15' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_22 : Operation 336 [2/2] (2.56ns)   --->   "%B_load_15 = load i32* %B_addr_15, align 4" [matrixmultiplication.cpp:16]   --->   Operation 336 'load' 'B_load_15' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_22 : Operation 337 [1/5] (3.95ns)   --->   "%mul_ln16_17 = mul nsw i32 %B_load_17, %A_load_17" [matrixmultiplication.cpp:16]   --->   Operation 337 'mul' 'mul_ln16_17' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 338 [2/5] (3.95ns)   --->   "%mul_ln16_24 = mul nsw i32 %B_load_24, %A_load_24" [matrixmultiplication.cpp:16]   --->   Operation 338 'mul' 'mul_ln16_24' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 339 [3/5] (3.95ns)   --->   "%mul_ln16_25 = mul nsw i32 %B_load_25, %A_load_25" [matrixmultiplication.cpp:16]   --->   Operation 339 'mul' 'mul_ln16_25' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 23 <SV = 22> <Delay = 3.95>
ST_23 : Operation 340 [1/1] (0.00ns)   --->   "%or_ln16_17 = or i11 %tmp, 18" [matrixmultiplication.cpp:16]   --->   Operation 340 'or' 'or_ln16_17' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_23 : Operation 341 [1/1] (0.00ns)   --->   "%tmp_18 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %or_ln16_17)" [matrixmultiplication.cpp:16]   --->   Operation 341 'bitconcatenate' 'tmp_18' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_23 : Operation 342 [1/1] (0.00ns)   --->   "%A_addr_18 = getelementptr [1024 x i32]* %A, i64 0, i64 %tmp_18" [matrixmultiplication.cpp:16]   --->   Operation 342 'getelementptr' 'A_addr_18' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_23 : Operation 343 [1/1] (0.00ns)   --->   "%tmp_40 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 9, i6 %select_ln16)" [matrixmultiplication.cpp:16]   --->   Operation 343 'bitconcatenate' 'tmp_40' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_23 : Operation 344 [1/1] (0.00ns)   --->   "%B_addr_18 = getelementptr [1024 x i32]* %B, i64 0, i64 %tmp_40" [matrixmultiplication.cpp:16]   --->   Operation 344 'getelementptr' 'B_addr_18' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_23 : Operation 345 [3/5] (3.95ns)   --->   "%mul_ln16_3 = mul nsw i32 %B_load_3, %A_load_3" [matrixmultiplication.cpp:16]   --->   Operation 345 'mul' 'mul_ln16_3' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 346 [4/5] (3.95ns)   --->   "%mul_ln16_5 = mul nsw i32 %B_load_5, %A_load_5" [matrixmultiplication.cpp:16]   --->   Operation 346 'mul' 'mul_ln16_5' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 347 [5/5] (3.95ns)   --->   "%mul_ln16_13 = mul nsw i32 %B_load_13, %A_load_13" [matrixmultiplication.cpp:16]   --->   Operation 347 'mul' 'mul_ln16_13' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 348 [1/2] (2.56ns)   --->   "%A_load_15 = load i32* %A_addr_15, align 4" [matrixmultiplication.cpp:16]   --->   Operation 348 'load' 'A_load_15' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_23 : Operation 349 [1/2] (2.56ns)   --->   "%B_load_15 = load i32* %B_addr_15, align 4" [matrixmultiplication.cpp:16]   --->   Operation 349 'load' 'B_load_15' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_23 : Operation 350 [2/2] (2.56ns)   --->   "%A_load_18 = load i32* %A_addr_18, align 4" [matrixmultiplication.cpp:16]   --->   Operation 350 'load' 'A_load_18' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_23 : Operation 351 [2/2] (2.56ns)   --->   "%B_load_18 = load i32* %B_addr_18, align 4" [matrixmultiplication.cpp:16]   --->   Operation 351 'load' 'B_load_18' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_23 : Operation 352 [1/5] (3.95ns)   --->   "%mul_ln16_24 = mul nsw i32 %B_load_24, %A_load_24" [matrixmultiplication.cpp:16]   --->   Operation 352 'mul' 'mul_ln16_24' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 353 [2/5] (3.95ns)   --->   "%mul_ln16_25 = mul nsw i32 %B_load_25, %A_load_25" [matrixmultiplication.cpp:16]   --->   Operation 353 'mul' 'mul_ln16_25' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 354 [1/1] (2.55ns)   --->   "%add_ln16_15 = add i32 %mul_ln16_17, %mul_ln16_16" [matrixmultiplication.cpp:16]   --->   Operation 354 'add' 'add_ln16_15' <Predicate = (!icmp_ln10)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 24 <SV = 23> <Delay = 4.29>
ST_24 : Operation 355 [1/1] (0.00ns)   --->   "%or_ln16_18 = or i11 %tmp, 19" [matrixmultiplication.cpp:16]   --->   Operation 355 'or' 'or_ln16_18' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_24 : Operation 356 [1/1] (0.00ns)   --->   "%tmp_19 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %or_ln16_18)" [matrixmultiplication.cpp:16]   --->   Operation 356 'bitconcatenate' 'tmp_19' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_24 : Operation 357 [1/1] (0.00ns)   --->   "%A_addr_19 = getelementptr [1024 x i32]* %A, i64 0, i64 %tmp_19" [matrixmultiplication.cpp:16]   --->   Operation 357 'getelementptr' 'A_addr_19' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_24 : Operation 358 [1/1] (1.73ns)   --->   "%add_ln16_39 = add i10 %zext_ln16_5, -416" [matrixmultiplication.cpp:16]   --->   Operation 358 'add' 'add_ln16_39' <Predicate = (!icmp_ln10)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 359 [1/1] (0.00ns)   --->   "%zext_ln16_18 = zext i10 %add_ln16_39 to i64" [matrixmultiplication.cpp:16]   --->   Operation 359 'zext' 'zext_ln16_18' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_24 : Operation 360 [1/1] (0.00ns)   --->   "%B_addr_19 = getelementptr [1024 x i32]* %B, i64 0, i64 %zext_ln16_18" [matrixmultiplication.cpp:16]   --->   Operation 360 'getelementptr' 'B_addr_19' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_24 : Operation 361 [2/5] (3.95ns)   --->   "%mul_ln16_3 = mul nsw i32 %B_load_3, %A_load_3" [matrixmultiplication.cpp:16]   --->   Operation 361 'mul' 'mul_ln16_3' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 362 [3/5] (3.95ns)   --->   "%mul_ln16_5 = mul nsw i32 %B_load_5, %A_load_5" [matrixmultiplication.cpp:16]   --->   Operation 362 'mul' 'mul_ln16_5' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 363 [5/5] (3.95ns)   --->   "%mul_ln16_10 = mul nsw i32 %B_load_10, %A_load_10" [matrixmultiplication.cpp:16]   --->   Operation 363 'mul' 'mul_ln16_10' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 364 [4/5] (3.95ns)   --->   "%mul_ln16_13 = mul nsw i32 %B_load_13, %A_load_13" [matrixmultiplication.cpp:16]   --->   Operation 364 'mul' 'mul_ln16_13' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 365 [1/2] (2.56ns)   --->   "%A_load_18 = load i32* %A_addr_18, align 4" [matrixmultiplication.cpp:16]   --->   Operation 365 'load' 'A_load_18' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_24 : Operation 366 [1/2] (2.56ns)   --->   "%B_load_18 = load i32* %B_addr_18, align 4" [matrixmultiplication.cpp:16]   --->   Operation 366 'load' 'B_load_18' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_24 : Operation 367 [2/2] (2.56ns)   --->   "%A_load_19 = load i32* %A_addr_19, align 4" [matrixmultiplication.cpp:16]   --->   Operation 367 'load' 'A_load_19' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_24 : Operation 368 [2/2] (2.56ns)   --->   "%B_load_19 = load i32* %B_addr_19, align 4" [matrixmultiplication.cpp:16]   --->   Operation 368 'load' 'B_load_19' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_24 : Operation 369 [1/5] (3.95ns)   --->   "%mul_ln16_25 = mul nsw i32 %B_load_25, %A_load_25" [matrixmultiplication.cpp:16]   --->   Operation 369 'mul' 'mul_ln16_25' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 25 <SV = 24> <Delay = 3.95>
ST_25 : Operation 370 [1/1] (0.00ns)   --->   "%or_ln16_19 = or i11 %tmp, 20" [matrixmultiplication.cpp:16]   --->   Operation 370 'or' 'or_ln16_19' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_25 : Operation 371 [1/1] (0.00ns)   --->   "%tmp_20 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %or_ln16_19)" [matrixmultiplication.cpp:16]   --->   Operation 371 'bitconcatenate' 'tmp_20' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_25 : Operation 372 [1/1] (0.00ns)   --->   "%A_addr_20 = getelementptr [1024 x i32]* %A, i64 0, i64 %tmp_20" [matrixmultiplication.cpp:16]   --->   Operation 372 'getelementptr' 'A_addr_20' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_25 : Operation 373 [1/1] (0.00ns)   --->   "%tmp_41 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 10, i6 %select_ln16)" [matrixmultiplication.cpp:16]   --->   Operation 373 'bitconcatenate' 'tmp_41' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_25 : Operation 374 [1/1] (0.00ns)   --->   "%B_addr_20 = getelementptr [1024 x i32]* %B, i64 0, i64 %tmp_41" [matrixmultiplication.cpp:16]   --->   Operation 374 'getelementptr' 'B_addr_20' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_25 : Operation 375 [1/5] (3.95ns)   --->   "%mul_ln16_3 = mul nsw i32 %B_load_3, %A_load_3" [matrixmultiplication.cpp:16]   --->   Operation 375 'mul' 'mul_ln16_3' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 376 [2/5] (3.95ns)   --->   "%mul_ln16_5 = mul nsw i32 %B_load_5, %A_load_5" [matrixmultiplication.cpp:16]   --->   Operation 376 'mul' 'mul_ln16_5' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 377 [4/5] (3.95ns)   --->   "%mul_ln16_10 = mul nsw i32 %B_load_10, %A_load_10" [matrixmultiplication.cpp:16]   --->   Operation 377 'mul' 'mul_ln16_10' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 378 [5/5] (3.95ns)   --->   "%mul_ln16_11 = mul nsw i32 %B_load_11, %A_load_11" [matrixmultiplication.cpp:16]   --->   Operation 378 'mul' 'mul_ln16_11' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 379 [3/5] (3.95ns)   --->   "%mul_ln16_13 = mul nsw i32 %B_load_13, %A_load_13" [matrixmultiplication.cpp:16]   --->   Operation 379 'mul' 'mul_ln16_13' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 380 [1/2] (2.56ns)   --->   "%A_load_19 = load i32* %A_addr_19, align 4" [matrixmultiplication.cpp:16]   --->   Operation 380 'load' 'A_load_19' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_25 : Operation 381 [1/2] (2.56ns)   --->   "%B_load_19 = load i32* %B_addr_19, align 4" [matrixmultiplication.cpp:16]   --->   Operation 381 'load' 'B_load_19' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_25 : Operation 382 [2/2] (2.56ns)   --->   "%A_load_20 = load i32* %A_addr_20, align 4" [matrixmultiplication.cpp:16]   --->   Operation 382 'load' 'A_load_20' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_25 : Operation 383 [2/2] (2.56ns)   --->   "%B_load_20 = load i32* %B_addr_20, align 4" [matrixmultiplication.cpp:16]   --->   Operation 383 'load' 'B_load_20' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_25 : Operation 384 [1/1] (2.55ns)   --->   "%add_ln16_22 = add i32 %mul_ln16_25, %mul_ln16_24" [matrixmultiplication.cpp:16]   --->   Operation 384 'add' 'add_ln16_22' <Predicate = (!icmp_ln10)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 26 <SV = 25> <Delay = 4.37>
ST_26 : Operation 385 [1/1] (0.00ns)   --->   "%or_ln16_20 = or i11 %tmp, 21" [matrixmultiplication.cpp:16]   --->   Operation 385 'or' 'or_ln16_20' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_26 : Operation 386 [1/1] (0.00ns)   --->   "%tmp_21 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %or_ln16_20)" [matrixmultiplication.cpp:16]   --->   Operation 386 'bitconcatenate' 'tmp_21' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_26 : Operation 387 [1/1] (0.00ns)   --->   "%A_addr_21 = getelementptr [1024 x i32]* %A, i64 0, i64 %tmp_21" [matrixmultiplication.cpp:16]   --->   Operation 387 'getelementptr' 'A_addr_21' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_26 : Operation 388 [1/1] (1.73ns)   --->   "%add_ln16_40 = add i10 %zext_ln16_5, -352" [matrixmultiplication.cpp:16]   --->   Operation 388 'add' 'add_ln16_40' <Predicate = (!icmp_ln10)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 389 [1/1] (0.00ns)   --->   "%zext_ln16_19 = zext i10 %add_ln16_40 to i64" [matrixmultiplication.cpp:16]   --->   Operation 389 'zext' 'zext_ln16_19' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_26 : Operation 390 [1/1] (0.00ns)   --->   "%B_addr_21 = getelementptr [1024 x i32]* %B, i64 0, i64 %zext_ln16_19" [matrixmultiplication.cpp:16]   --->   Operation 390 'getelementptr' 'B_addr_21' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_26 : Operation 391 [1/5] (3.95ns)   --->   "%mul_ln16_5 = mul nsw i32 %B_load_5, %A_load_5" [matrixmultiplication.cpp:16]   --->   Operation 391 'mul' 'mul_ln16_5' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 392 [3/5] (3.95ns)   --->   "%mul_ln16_10 = mul nsw i32 %B_load_10, %A_load_10" [matrixmultiplication.cpp:16]   --->   Operation 392 'mul' 'mul_ln16_10' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 393 [4/5] (3.95ns)   --->   "%mul_ln16_11 = mul nsw i32 %B_load_11, %A_load_11" [matrixmultiplication.cpp:16]   --->   Operation 393 'mul' 'mul_ln16_11' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 394 [2/5] (3.95ns)   --->   "%mul_ln16_13 = mul nsw i32 %B_load_13, %A_load_13" [matrixmultiplication.cpp:16]   --->   Operation 394 'mul' 'mul_ln16_13' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 395 [5/5] (3.95ns)   --->   "%mul_ln16_14 = mul nsw i32 %B_load_14, %A_load_14" [matrixmultiplication.cpp:16]   --->   Operation 395 'mul' 'mul_ln16_14' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 396 [1/2] (2.56ns)   --->   "%A_load_20 = load i32* %A_addr_20, align 4" [matrixmultiplication.cpp:16]   --->   Operation 396 'load' 'A_load_20' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_26 : Operation 397 [1/2] (2.56ns)   --->   "%B_load_20 = load i32* %B_addr_20, align 4" [matrixmultiplication.cpp:16]   --->   Operation 397 'load' 'B_load_20' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_26 : Operation 398 [2/2] (2.56ns)   --->   "%A_load_21 = load i32* %A_addr_21, align 4" [matrixmultiplication.cpp:16]   --->   Operation 398 'load' 'A_load_21' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_26 : Operation 399 [2/2] (2.56ns)   --->   "%B_load_21 = load i32* %B_addr_21, align 4" [matrixmultiplication.cpp:16]   --->   Operation 399 'load' 'B_load_21' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_26 : Operation 400 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln16_1 = add i32 %mul_ln16_3, %mul_ln16_2" [matrixmultiplication.cpp:16]   --->   Operation 400 'add' 'add_ln16_1' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_26 : Operation 401 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln16_2 = add i32 %add_ln16, %add_ln16_1" [matrixmultiplication.cpp:16]   --->   Operation 401 'add' 'add_ln16_2' <Predicate = (!icmp_ln10)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 27 <SV = 26> <Delay = 3.95>
ST_27 : Operation 402 [1/1] (0.00ns)   --->   "%or_ln16_21 = or i11 %tmp, 22" [matrixmultiplication.cpp:16]   --->   Operation 402 'or' 'or_ln16_21' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_27 : Operation 403 [1/1] (0.00ns)   --->   "%tmp_22 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %or_ln16_21)" [matrixmultiplication.cpp:16]   --->   Operation 403 'bitconcatenate' 'tmp_22' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_27 : Operation 404 [1/1] (0.00ns)   --->   "%A_addr_22 = getelementptr [1024 x i32]* %A, i64 0, i64 %tmp_22" [matrixmultiplication.cpp:16]   --->   Operation 404 'getelementptr' 'A_addr_22' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_27 : Operation 405 [1/1] (0.00ns)   --->   "%tmp_42 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 11, i6 %select_ln16)" [matrixmultiplication.cpp:16]   --->   Operation 405 'bitconcatenate' 'tmp_42' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_27 : Operation 406 [1/1] (0.00ns)   --->   "%B_addr_22 = getelementptr [1024 x i32]* %B, i64 0, i64 %tmp_42" [matrixmultiplication.cpp:16]   --->   Operation 406 'getelementptr' 'B_addr_22' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_27 : Operation 407 [2/5] (3.95ns)   --->   "%mul_ln16_10 = mul nsw i32 %B_load_10, %A_load_10" [matrixmultiplication.cpp:16]   --->   Operation 407 'mul' 'mul_ln16_10' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 408 [3/5] (3.95ns)   --->   "%mul_ln16_11 = mul nsw i32 %B_load_11, %A_load_11" [matrixmultiplication.cpp:16]   --->   Operation 408 'mul' 'mul_ln16_11' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 409 [1/5] (3.95ns)   --->   "%mul_ln16_13 = mul nsw i32 %B_load_13, %A_load_13" [matrixmultiplication.cpp:16]   --->   Operation 409 'mul' 'mul_ln16_13' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 410 [4/5] (3.95ns)   --->   "%mul_ln16_14 = mul nsw i32 %B_load_14, %A_load_14" [matrixmultiplication.cpp:16]   --->   Operation 410 'mul' 'mul_ln16_14' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 411 [5/5] (3.95ns)   --->   "%mul_ln16_15 = mul nsw i32 %B_load_15, %A_load_15" [matrixmultiplication.cpp:16]   --->   Operation 411 'mul' 'mul_ln16_15' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 412 [1/2] (2.56ns)   --->   "%A_load_21 = load i32* %A_addr_21, align 4" [matrixmultiplication.cpp:16]   --->   Operation 412 'load' 'A_load_21' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_27 : Operation 413 [1/2] (2.56ns)   --->   "%B_load_21 = load i32* %B_addr_21, align 4" [matrixmultiplication.cpp:16]   --->   Operation 413 'load' 'B_load_21' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_27 : Operation 414 [2/2] (2.56ns)   --->   "%A_load_22 = load i32* %A_addr_22, align 4" [matrixmultiplication.cpp:16]   --->   Operation 414 'load' 'A_load_22' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_27 : Operation 415 [2/2] (2.56ns)   --->   "%B_load_22 = load i32* %B_addr_22, align 4" [matrixmultiplication.cpp:16]   --->   Operation 415 'load' 'B_load_22' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_27 : Operation 416 [1/1] (2.55ns)   --->   "%add_ln16_3 = add i32 %mul_ln16_5, %mul_ln16_4" [matrixmultiplication.cpp:16]   --->   Operation 416 'add' 'add_ln16_3' <Predicate = (!icmp_ln10)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 28 <SV = 27> <Delay = 4.37>
ST_28 : Operation 417 [1/1] (0.00ns)   --->   "%or_ln16_22 = or i11 %tmp, 23" [matrixmultiplication.cpp:16]   --->   Operation 417 'or' 'or_ln16_22' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_28 : Operation 418 [1/1] (0.00ns)   --->   "%tmp_23 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %or_ln16_22)" [matrixmultiplication.cpp:16]   --->   Operation 418 'bitconcatenate' 'tmp_23' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_28 : Operation 419 [1/1] (0.00ns)   --->   "%A_addr_23 = getelementptr [1024 x i32]* %A, i64 0, i64 %tmp_23" [matrixmultiplication.cpp:16]   --->   Operation 419 'getelementptr' 'A_addr_23' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_28 : Operation 420 [1/1] (1.73ns)   --->   "%add_ln16_41 = add i10 %zext_ln16_5, -288" [matrixmultiplication.cpp:16]   --->   Operation 420 'add' 'add_ln16_41' <Predicate = (!icmp_ln10)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 421 [1/1] (0.00ns)   --->   "%zext_ln16_20 = zext i10 %add_ln16_41 to i64" [matrixmultiplication.cpp:16]   --->   Operation 421 'zext' 'zext_ln16_20' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_28 : Operation 422 [1/1] (0.00ns)   --->   "%B_addr_23 = getelementptr [1024 x i32]* %B, i64 0, i64 %zext_ln16_20" [matrixmultiplication.cpp:16]   --->   Operation 422 'getelementptr' 'B_addr_23' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_28 : Operation 423 [1/5] (3.95ns)   --->   "%mul_ln16_10 = mul nsw i32 %B_load_10, %A_load_10" [matrixmultiplication.cpp:16]   --->   Operation 423 'mul' 'mul_ln16_10' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 424 [2/5] (3.95ns)   --->   "%mul_ln16_11 = mul nsw i32 %B_load_11, %A_load_11" [matrixmultiplication.cpp:16]   --->   Operation 424 'mul' 'mul_ln16_11' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 425 [3/5] (3.95ns)   --->   "%mul_ln16_14 = mul nsw i32 %B_load_14, %A_load_14" [matrixmultiplication.cpp:16]   --->   Operation 425 'mul' 'mul_ln16_14' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 426 [4/5] (3.95ns)   --->   "%mul_ln16_15 = mul nsw i32 %B_load_15, %A_load_15" [matrixmultiplication.cpp:16]   --->   Operation 426 'mul' 'mul_ln16_15' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 427 [5/5] (3.95ns)   --->   "%mul_ln16_18 = mul nsw i32 %B_load_18, %A_load_18" [matrixmultiplication.cpp:16]   --->   Operation 427 'mul' 'mul_ln16_18' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 428 [1/2] (2.56ns)   --->   "%A_load_22 = load i32* %A_addr_22, align 4" [matrixmultiplication.cpp:16]   --->   Operation 428 'load' 'A_load_22' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_28 : Operation 429 [1/2] (2.56ns)   --->   "%B_load_22 = load i32* %B_addr_22, align 4" [matrixmultiplication.cpp:16]   --->   Operation 429 'load' 'B_load_22' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_28 : Operation 430 [2/2] (2.56ns)   --->   "%A_load_23 = load i32* %A_addr_23, align 4" [matrixmultiplication.cpp:16]   --->   Operation 430 'load' 'A_load_23' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_28 : Operation 431 [2/2] (2.56ns)   --->   "%B_load_23 = load i32* %B_addr_23, align 4" [matrixmultiplication.cpp:16]   --->   Operation 431 'load' 'B_load_23' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_28 : Operation 432 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln16_5 = add i32 %add_ln16_3, %add_ln16_4" [matrixmultiplication.cpp:16]   --->   Operation 432 'add' 'add_ln16_5' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_28 : Operation 433 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln16_6 = add i32 %add_ln16_2, %add_ln16_5" [matrixmultiplication.cpp:16]   --->   Operation 433 'add' 'add_ln16_6' <Predicate = (!icmp_ln10)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_28 : Operation 434 [1/1] (2.55ns)   --->   "%add_ln16_10 = add i32 %mul_ln16_13, %mul_ln16_12" [matrixmultiplication.cpp:16]   --->   Operation 434 'add' 'add_ln16_10' <Predicate = (!icmp_ln10)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 29 <SV = 28> <Delay = 3.95>
ST_29 : Operation 435 [1/1] (0.00ns)   --->   "%or_ln16_25 = or i11 %tmp, 26" [matrixmultiplication.cpp:16]   --->   Operation 435 'or' 'or_ln16_25' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_29 : Operation 436 [1/1] (0.00ns)   --->   "%tmp_26 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %or_ln16_25)" [matrixmultiplication.cpp:16]   --->   Operation 436 'bitconcatenate' 'tmp_26' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_29 : Operation 437 [1/1] (0.00ns)   --->   "%A_addr_26 = getelementptr [1024 x i32]* %A, i64 0, i64 %tmp_26" [matrixmultiplication.cpp:16]   --->   Operation 437 'getelementptr' 'A_addr_26' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_29 : Operation 438 [1/1] (0.00ns)   --->   "%tmp_44 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 13, i6 %select_ln16)" [matrixmultiplication.cpp:16]   --->   Operation 438 'bitconcatenate' 'tmp_44' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_29 : Operation 439 [1/1] (0.00ns)   --->   "%B_addr_26 = getelementptr [1024 x i32]* %B, i64 0, i64 %tmp_44" [matrixmultiplication.cpp:16]   --->   Operation 439 'getelementptr' 'B_addr_26' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_29 : Operation 440 [1/5] (3.95ns)   --->   "%mul_ln16_11 = mul nsw i32 %B_load_11, %A_load_11" [matrixmultiplication.cpp:16]   --->   Operation 440 'mul' 'mul_ln16_11' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 441 [2/5] (3.95ns)   --->   "%mul_ln16_14 = mul nsw i32 %B_load_14, %A_load_14" [matrixmultiplication.cpp:16]   --->   Operation 441 'mul' 'mul_ln16_14' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 442 [3/5] (3.95ns)   --->   "%mul_ln16_15 = mul nsw i32 %B_load_15, %A_load_15" [matrixmultiplication.cpp:16]   --->   Operation 442 'mul' 'mul_ln16_15' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 443 [4/5] (3.95ns)   --->   "%mul_ln16_18 = mul nsw i32 %B_load_18, %A_load_18" [matrixmultiplication.cpp:16]   --->   Operation 443 'mul' 'mul_ln16_18' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 444 [5/5] (3.95ns)   --->   "%mul_ln16_19 = mul nsw i32 %B_load_19, %A_load_19" [matrixmultiplication.cpp:16]   --->   Operation 444 'mul' 'mul_ln16_19' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 445 [1/2] (2.56ns)   --->   "%A_load_23 = load i32* %A_addr_23, align 4" [matrixmultiplication.cpp:16]   --->   Operation 445 'load' 'A_load_23' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_29 : Operation 446 [1/2] (2.56ns)   --->   "%B_load_23 = load i32* %B_addr_23, align 4" [matrixmultiplication.cpp:16]   --->   Operation 446 'load' 'B_load_23' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_29 : Operation 447 [2/2] (2.56ns)   --->   "%A_load_26 = load i32* %A_addr_26, align 4" [matrixmultiplication.cpp:16]   --->   Operation 447 'load' 'A_load_26' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_29 : Operation 448 [2/2] (2.56ns)   --->   "%B_load_26 = load i32* %B_addr_26, align 4" [matrixmultiplication.cpp:16]   --->   Operation 448 'load' 'B_load_26' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>

State 30 <SV = 29> <Delay = 4.37>
ST_30 : Operation 449 [1/1] (0.00ns)   --->   "%or_ln16_26 = or i11 %tmp, 27" [matrixmultiplication.cpp:16]   --->   Operation 449 'or' 'or_ln16_26' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_30 : Operation 450 [1/1] (0.00ns)   --->   "%tmp_27 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %or_ln16_26)" [matrixmultiplication.cpp:16]   --->   Operation 450 'bitconcatenate' 'tmp_27' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_30 : Operation 451 [1/1] (0.00ns)   --->   "%A_addr_27 = getelementptr [1024 x i32]* %A, i64 0, i64 %tmp_27" [matrixmultiplication.cpp:16]   --->   Operation 451 'getelementptr' 'A_addr_27' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_30 : Operation 452 [1/1] (0.00ns)   --->   "%sext_ln16_2 = sext i9 %add_ln16_36 to i10" [matrixmultiplication.cpp:16]   --->   Operation 452 'sext' 'sext_ln16_2' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_30 : Operation 453 [1/1] (0.00ns)   --->   "%zext_ln16_22 = zext i10 %sext_ln16_2 to i64" [matrixmultiplication.cpp:16]   --->   Operation 453 'zext' 'zext_ln16_22' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_30 : Operation 454 [1/1] (0.00ns)   --->   "%B_addr_27 = getelementptr [1024 x i32]* %B, i64 0, i64 %zext_ln16_22" [matrixmultiplication.cpp:16]   --->   Operation 454 'getelementptr' 'B_addr_27' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_30 : Operation 455 [1/5] (3.95ns)   --->   "%mul_ln16_14 = mul nsw i32 %B_load_14, %A_load_14" [matrixmultiplication.cpp:16]   --->   Operation 455 'mul' 'mul_ln16_14' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 456 [2/5] (3.95ns)   --->   "%mul_ln16_15 = mul nsw i32 %B_load_15, %A_load_15" [matrixmultiplication.cpp:16]   --->   Operation 456 'mul' 'mul_ln16_15' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 457 [3/5] (3.95ns)   --->   "%mul_ln16_18 = mul nsw i32 %B_load_18, %A_load_18" [matrixmultiplication.cpp:16]   --->   Operation 457 'mul' 'mul_ln16_18' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 458 [4/5] (3.95ns)   --->   "%mul_ln16_19 = mul nsw i32 %B_load_19, %A_load_19" [matrixmultiplication.cpp:16]   --->   Operation 458 'mul' 'mul_ln16_19' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 459 [5/5] (3.95ns)   --->   "%mul_ln16_20 = mul nsw i32 %B_load_20, %A_load_20" [matrixmultiplication.cpp:16]   --->   Operation 459 'mul' 'mul_ln16_20' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 460 [1/2] (2.56ns)   --->   "%A_load_26 = load i32* %A_addr_26, align 4" [matrixmultiplication.cpp:16]   --->   Operation 460 'load' 'A_load_26' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_30 : Operation 461 [1/2] (2.56ns)   --->   "%B_load_26 = load i32* %B_addr_26, align 4" [matrixmultiplication.cpp:16]   --->   Operation 461 'load' 'B_load_26' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_30 : Operation 462 [2/2] (2.56ns)   --->   "%A_load_27 = load i32* %A_addr_27, align 4" [matrixmultiplication.cpp:16]   --->   Operation 462 'load' 'A_load_27' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_30 : Operation 463 [2/2] (2.56ns)   --->   "%B_load_27 = load i32* %B_addr_27, align 4" [matrixmultiplication.cpp:16]   --->   Operation 463 'load' 'B_load_27' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_30 : Operation 464 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln16_8 = add i32 %mul_ln16_11, %mul_ln16_10" [matrixmultiplication.cpp:16]   --->   Operation 464 'add' 'add_ln16_8' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_30 : Operation 465 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln16_9 = add i32 %add_ln16_7, %add_ln16_8" [matrixmultiplication.cpp:16]   --->   Operation 465 'add' 'add_ln16_9' <Predicate = (!icmp_ln10)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 31 <SV = 30> <Delay = 3.95>
ST_31 : Operation 466 [1/1] (0.00ns)   --->   "%or_ln16_27 = or i11 %tmp, 28" [matrixmultiplication.cpp:16]   --->   Operation 466 'or' 'or_ln16_27' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_31 : Operation 467 [1/1] (0.00ns)   --->   "%tmp_28 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %or_ln16_27)" [matrixmultiplication.cpp:16]   --->   Operation 467 'bitconcatenate' 'tmp_28' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_31 : Operation 468 [1/1] (0.00ns)   --->   "%A_addr_28 = getelementptr [1024 x i32]* %A, i64 0, i64 %tmp_28" [matrixmultiplication.cpp:16]   --->   Operation 468 'getelementptr' 'A_addr_28' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_31 : Operation 469 [1/1] (0.00ns)   --->   "%tmp_45 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 14, i6 %select_ln16)" [matrixmultiplication.cpp:16]   --->   Operation 469 'bitconcatenate' 'tmp_45' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_31 : Operation 470 [1/1] (0.00ns)   --->   "%B_addr_28 = getelementptr [1024 x i32]* %B, i64 0, i64 %tmp_45" [matrixmultiplication.cpp:16]   --->   Operation 470 'getelementptr' 'B_addr_28' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_31 : Operation 471 [1/5] (3.95ns)   --->   "%mul_ln16_15 = mul nsw i32 %B_load_15, %A_load_15" [matrixmultiplication.cpp:16]   --->   Operation 471 'mul' 'mul_ln16_15' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 472 [2/5] (3.95ns)   --->   "%mul_ln16_18 = mul nsw i32 %B_load_18, %A_load_18" [matrixmultiplication.cpp:16]   --->   Operation 472 'mul' 'mul_ln16_18' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 473 [3/5] (3.95ns)   --->   "%mul_ln16_19 = mul nsw i32 %B_load_19, %A_load_19" [matrixmultiplication.cpp:16]   --->   Operation 473 'mul' 'mul_ln16_19' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 474 [4/5] (3.95ns)   --->   "%mul_ln16_20 = mul nsw i32 %B_load_20, %A_load_20" [matrixmultiplication.cpp:16]   --->   Operation 474 'mul' 'mul_ln16_20' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 475 [5/5] (3.95ns)   --->   "%mul_ln16_21 = mul nsw i32 %B_load_21, %A_load_21" [matrixmultiplication.cpp:16]   --->   Operation 475 'mul' 'mul_ln16_21' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 476 [1/2] (2.56ns)   --->   "%A_load_27 = load i32* %A_addr_27, align 4" [matrixmultiplication.cpp:16]   --->   Operation 476 'load' 'A_load_27' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_31 : Operation 477 [1/2] (2.56ns)   --->   "%B_load_27 = load i32* %B_addr_27, align 4" [matrixmultiplication.cpp:16]   --->   Operation 477 'load' 'B_load_27' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_31 : Operation 478 [2/2] (2.56ns)   --->   "%A_load_28 = load i32* %A_addr_28, align 4" [matrixmultiplication.cpp:16]   --->   Operation 478 'load' 'A_load_28' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_31 : Operation 479 [2/2] (2.56ns)   --->   "%B_load_28 = load i32* %B_addr_28, align 4" [matrixmultiplication.cpp:16]   --->   Operation 479 'load' 'B_load_28' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>

State 32 <SV = 31> <Delay = 4.37>
ST_32 : Operation 480 [1/1] (0.00ns)   --->   "%or_ln16_28 = or i11 %tmp, 29" [matrixmultiplication.cpp:16]   --->   Operation 480 'or' 'or_ln16_28' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_32 : Operation 481 [1/1] (0.00ns)   --->   "%tmp_29 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %or_ln16_28)" [matrixmultiplication.cpp:16]   --->   Operation 481 'bitconcatenate' 'tmp_29' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_32 : Operation 482 [1/1] (0.00ns)   --->   "%A_addr_29 = getelementptr [1024 x i32]* %A, i64 0, i64 %tmp_29" [matrixmultiplication.cpp:16]   --->   Operation 482 'getelementptr' 'A_addr_29' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_32 : Operation 483 [1/1] (0.00ns)   --->   "%tmp_46 = call i64 @_ssdm_op_BitConcatenate.i64.i58.i6(i58 15, i6 %select_ln16)" [matrixmultiplication.cpp:16]   --->   Operation 483 'bitconcatenate' 'tmp_46' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_32 : Operation 484 [1/1] (0.00ns)   --->   "%B_addr_30 = getelementptr [1024 x i32]* %B, i64 0, i64 %tmp_46" [matrixmultiplication.cpp:16]   --->   Operation 484 'getelementptr' 'B_addr_30' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_32 : Operation 485 [1/5] (3.95ns)   --->   "%mul_ln16_18 = mul nsw i32 %B_load_18, %A_load_18" [matrixmultiplication.cpp:16]   --->   Operation 485 'mul' 'mul_ln16_18' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 486 [2/5] (3.95ns)   --->   "%mul_ln16_19 = mul nsw i32 %B_load_19, %A_load_19" [matrixmultiplication.cpp:16]   --->   Operation 486 'mul' 'mul_ln16_19' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 487 [3/5] (3.95ns)   --->   "%mul_ln16_20 = mul nsw i32 %B_load_20, %A_load_20" [matrixmultiplication.cpp:16]   --->   Operation 487 'mul' 'mul_ln16_20' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 488 [4/5] (3.95ns)   --->   "%mul_ln16_21 = mul nsw i32 %B_load_21, %A_load_21" [matrixmultiplication.cpp:16]   --->   Operation 488 'mul' 'mul_ln16_21' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 489 [5/5] (3.95ns)   --->   "%mul_ln16_22 = mul nsw i32 %B_load_22, %A_load_22" [matrixmultiplication.cpp:16]   --->   Operation 489 'mul' 'mul_ln16_22' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 490 [1/2] (2.56ns)   --->   "%A_load_28 = load i32* %A_addr_28, align 4" [matrixmultiplication.cpp:16]   --->   Operation 490 'load' 'A_load_28' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_32 : Operation 491 [1/2] (2.56ns)   --->   "%B_load_28 = load i32* %B_addr_28, align 4" [matrixmultiplication.cpp:16]   --->   Operation 491 'load' 'B_load_28' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_32 : Operation 492 [2/2] (2.56ns)   --->   "%A_load_29 = load i32* %A_addr_29, align 4" [matrixmultiplication.cpp:16]   --->   Operation 492 'load' 'A_load_29' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_32 : Operation 493 [2/2] (2.56ns)   --->   "%B_load_30 = load i32* %B_addr_30, align 4" [matrixmultiplication.cpp:16]   --->   Operation 493 'load' 'B_load_30' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_32 : Operation 494 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln16_11 = add i32 %mul_ln16_15, %mul_ln16_14" [matrixmultiplication.cpp:16]   --->   Operation 494 'add' 'add_ln16_11' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_32 : Operation 495 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln16_12 = add i32 %add_ln16_10, %add_ln16_11" [matrixmultiplication.cpp:16]   --->   Operation 495 'add' 'add_ln16_12' <Predicate = (!icmp_ln10)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 33 <SV = 32> <Delay = 4.37>
ST_33 : Operation 496 [1/1] (0.00ns)   --->   "%or_ln16_29 = or i11 %tmp, 30" [matrixmultiplication.cpp:16]   --->   Operation 496 'or' 'or_ln16_29' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_33 : Operation 497 [1/1] (0.00ns)   --->   "%tmp_30 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %or_ln16_29)" [matrixmultiplication.cpp:16]   --->   Operation 497 'bitconcatenate' 'tmp_30' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_33 : Operation 498 [1/1] (0.00ns)   --->   "%A_addr_30 = getelementptr [1024 x i32]* %A, i64 0, i64 %tmp_30" [matrixmultiplication.cpp:16]   --->   Operation 498 'getelementptr' 'A_addr_30' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_33 : Operation 499 [1/1] (0.00ns)   --->   "%zext_ln16_4 = zext i6 %select_ln16 to i11" [matrixmultiplication.cpp:16]   --->   Operation 499 'zext' 'zext_ln16_4' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_33 : Operation 500 [1/1] (1.63ns)   --->   "%add_ln16_42 = add i11 %zext_ln16_4, 992" [matrixmultiplication.cpp:16]   --->   Operation 500 'add' 'add_ln16_42' <Predicate = (!icmp_ln10)> <Delay = 1.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 501 [1/1] (0.00ns)   --->   "%zext_ln16_24 = zext i11 %add_ln16_42 to i64" [matrixmultiplication.cpp:16]   --->   Operation 501 'zext' 'zext_ln16_24' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_33 : Operation 502 [1/1] (0.00ns)   --->   "%B_addr_31 = getelementptr [1024 x i32]* %B, i64 0, i64 %zext_ln16_24" [matrixmultiplication.cpp:16]   --->   Operation 502 'getelementptr' 'B_addr_31' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_33 : Operation 503 [1/5] (3.95ns)   --->   "%mul_ln16_19 = mul nsw i32 %B_load_19, %A_load_19" [matrixmultiplication.cpp:16]   --->   Operation 503 'mul' 'mul_ln16_19' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 504 [2/5] (3.95ns)   --->   "%mul_ln16_20 = mul nsw i32 %B_load_20, %A_load_20" [matrixmultiplication.cpp:16]   --->   Operation 504 'mul' 'mul_ln16_20' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 505 [3/5] (3.95ns)   --->   "%mul_ln16_21 = mul nsw i32 %B_load_21, %A_load_21" [matrixmultiplication.cpp:16]   --->   Operation 505 'mul' 'mul_ln16_21' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 506 [4/5] (3.95ns)   --->   "%mul_ln16_22 = mul nsw i32 %B_load_22, %A_load_22" [matrixmultiplication.cpp:16]   --->   Operation 506 'mul' 'mul_ln16_22' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 507 [5/5] (3.95ns)   --->   "%mul_ln16_23 = mul nsw i32 %B_load_23, %A_load_23" [matrixmultiplication.cpp:16]   --->   Operation 507 'mul' 'mul_ln16_23' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 508 [1/2] (2.56ns)   --->   "%A_load_29 = load i32* %A_addr_29, align 4" [matrixmultiplication.cpp:16]   --->   Operation 508 'load' 'A_load_29' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_33 : Operation 509 [2/2] (2.56ns)   --->   "%A_load_30 = load i32* %A_addr_30, align 4" [matrixmultiplication.cpp:16]   --->   Operation 509 'load' 'A_load_30' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_33 : Operation 510 [1/2] (2.56ns)   --->   "%B_load_30 = load i32* %B_addr_30, align 4" [matrixmultiplication.cpp:16]   --->   Operation 510 'load' 'B_load_30' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_33 : Operation 511 [2/2] (2.56ns)   --->   "%B_load_31 = load i32* %B_addr_31, align 4" [matrixmultiplication.cpp:16]   --->   Operation 511 'load' 'B_load_31' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_33 : Operation 512 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln16_13 = add i32 %add_ln16_9, %add_ln16_12" [matrixmultiplication.cpp:16]   --->   Operation 512 'add' 'add_ln16_13' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_33 : Operation 513 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln16_14 = add i32 %add_ln16_6, %add_ln16_13" [matrixmultiplication.cpp:16]   --->   Operation 513 'add' 'add_ln16_14' <Predicate = (!icmp_ln10)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_33 : Operation 514 [1/1] (1.82ns)   --->   "%j = add i6 %select_ln16, 1" [matrixmultiplication.cpp:11]   --->   Operation 514 'add' 'j' <Predicate = (!icmp_ln10)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 34 <SV = 33> <Delay = 4.37>
ST_34 : Operation 515 [1/1] (0.00ns)   --->   "%zext_ln16_2 = zext i11 %tmp to i12" [matrixmultiplication.cpp:16]   --->   Operation 515 'zext' 'zext_ln16_2' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_34 : Operation 516 [1/1] (0.00ns)   --->   "%or_ln16_30 = or i11 %tmp, 31" [matrixmultiplication.cpp:16]   --->   Operation 516 'or' 'or_ln16_30' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_34 : Operation 517 [1/1] (0.00ns)   --->   "%tmp_31 = call i64 @_ssdm_op_BitConcatenate.i64.i53.i11(i53 0, i11 %or_ln16_30)" [matrixmultiplication.cpp:16]   --->   Operation 517 'bitconcatenate' 'tmp_31' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_34 : Operation 518 [1/1] (0.00ns)   --->   "%A_addr_31 = getelementptr [1024 x i32]* %A, i64 0, i64 %tmp_31" [matrixmultiplication.cpp:16]   --->   Operation 518 'getelementptr' 'A_addr_31' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_34 : Operation 519 [1/1] (0.00ns)   --->   "%zext_ln16_3 = zext i6 %select_ln16 to i12" [matrixmultiplication.cpp:16]   --->   Operation 519 'zext' 'zext_ln16_3' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_34 : Operation 520 [1/1] (0.00ns)   --->   "%sext_ln16_3 = sext i8 %add_ln16_33 to i10" [matrixmultiplication.cpp:16]   --->   Operation 520 'sext' 'sext_ln16_3' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_34 : Operation 521 [1/1] (0.00ns)   --->   "%zext_ln16_23 = zext i10 %sext_ln16_3 to i64" [matrixmultiplication.cpp:16]   --->   Operation 521 'zext' 'zext_ln16_23' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_34 : Operation 522 [1/1] (0.00ns)   --->   "%B_addr_29 = getelementptr [1024 x i32]* %B, i64 0, i64 %zext_ln16_23" [matrixmultiplication.cpp:16]   --->   Operation 522 'getelementptr' 'B_addr_29' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_34 : Operation 523 [1/1] (1.63ns)   --->   "%add_ln18 = add i12 %zext_ln16_2, %zext_ln16_3" [matrixmultiplication.cpp:18]   --->   Operation 523 'add' 'add_ln18' <Predicate = (!icmp_ln10)> <Delay = 1.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 524 [1/5] (3.95ns)   --->   "%mul_ln16_20 = mul nsw i32 %B_load_20, %A_load_20" [matrixmultiplication.cpp:16]   --->   Operation 524 'mul' 'mul_ln16_20' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 525 [2/5] (3.95ns)   --->   "%mul_ln16_21 = mul nsw i32 %B_load_21, %A_load_21" [matrixmultiplication.cpp:16]   --->   Operation 525 'mul' 'mul_ln16_21' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 526 [3/5] (3.95ns)   --->   "%mul_ln16_22 = mul nsw i32 %B_load_22, %A_load_22" [matrixmultiplication.cpp:16]   --->   Operation 526 'mul' 'mul_ln16_22' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 527 [4/5] (3.95ns)   --->   "%mul_ln16_23 = mul nsw i32 %B_load_23, %A_load_23" [matrixmultiplication.cpp:16]   --->   Operation 527 'mul' 'mul_ln16_23' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 528 [5/5] (3.95ns)   --->   "%mul_ln16_26 = mul nsw i32 %B_load_26, %A_load_26" [matrixmultiplication.cpp:16]   --->   Operation 528 'mul' 'mul_ln16_26' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 529 [2/2] (2.56ns)   --->   "%B_load_29 = load i32* %B_addr_29, align 4" [matrixmultiplication.cpp:16]   --->   Operation 529 'load' 'B_load_29' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_34 : Operation 530 [1/2] (2.56ns)   --->   "%A_load_30 = load i32* %A_addr_30, align 4" [matrixmultiplication.cpp:16]   --->   Operation 530 'load' 'A_load_30' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_34 : Operation 531 [2/2] (2.56ns)   --->   "%A_load_31 = load i32* %A_addr_31, align 4" [matrixmultiplication.cpp:16]   --->   Operation 531 'load' 'A_load_31' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_34 : Operation 532 [1/2] (2.56ns)   --->   "%B_load_31 = load i32* %B_addr_31, align 4" [matrixmultiplication.cpp:16]   --->   Operation 532 'load' 'B_load_31' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_34 : Operation 533 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln16_16 = add i32 %mul_ln16_19, %mul_ln16_18" [matrixmultiplication.cpp:16]   --->   Operation 533 'add' 'add_ln16_16' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_34 : Operation 534 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln16_17 = add i32 %add_ln16_15, %add_ln16_16" [matrixmultiplication.cpp:16]   --->   Operation 534 'add' 'add_ln16_17' <Predicate = (!icmp_ln10)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 35 <SV = 34> <Delay = 3.95>
ST_35 : Operation 535 [1/5] (3.95ns)   --->   "%mul_ln16_21 = mul nsw i32 %B_load_21, %A_load_21" [matrixmultiplication.cpp:16]   --->   Operation 535 'mul' 'mul_ln16_21' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 536 [2/5] (3.95ns)   --->   "%mul_ln16_22 = mul nsw i32 %B_load_22, %A_load_22" [matrixmultiplication.cpp:16]   --->   Operation 536 'mul' 'mul_ln16_22' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 537 [3/5] (3.95ns)   --->   "%mul_ln16_23 = mul nsw i32 %B_load_23, %A_load_23" [matrixmultiplication.cpp:16]   --->   Operation 537 'mul' 'mul_ln16_23' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 538 [4/5] (3.95ns)   --->   "%mul_ln16_26 = mul nsw i32 %B_load_26, %A_load_26" [matrixmultiplication.cpp:16]   --->   Operation 538 'mul' 'mul_ln16_26' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 539 [5/5] (3.95ns)   --->   "%mul_ln16_27 = mul nsw i32 %B_load_27, %A_load_27" [matrixmultiplication.cpp:16]   --->   Operation 539 'mul' 'mul_ln16_27' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 540 [1/2] (2.56ns)   --->   "%B_load_29 = load i32* %B_addr_29, align 4" [matrixmultiplication.cpp:16]   --->   Operation 540 'load' 'B_load_29' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_35 : Operation 541 [1/2] (2.56ns)   --->   "%A_load_31 = load i32* %A_addr_31, align 4" [matrixmultiplication.cpp:16]   --->   Operation 541 'load' 'A_load_31' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>

State 36 <SV = 35> <Delay = 3.95>
ST_36 : Operation 542 [1/5] (3.95ns)   --->   "%mul_ln16_22 = mul nsw i32 %B_load_22, %A_load_22" [matrixmultiplication.cpp:16]   --->   Operation 542 'mul' 'mul_ln16_22' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 543 [2/5] (3.95ns)   --->   "%mul_ln16_23 = mul nsw i32 %B_load_23, %A_load_23" [matrixmultiplication.cpp:16]   --->   Operation 543 'mul' 'mul_ln16_23' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 544 [3/5] (3.95ns)   --->   "%mul_ln16_26 = mul nsw i32 %B_load_26, %A_load_26" [matrixmultiplication.cpp:16]   --->   Operation 544 'mul' 'mul_ln16_26' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 545 [4/5] (3.95ns)   --->   "%mul_ln16_27 = mul nsw i32 %B_load_27, %A_load_27" [matrixmultiplication.cpp:16]   --->   Operation 545 'mul' 'mul_ln16_27' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 546 [5/5] (3.95ns)   --->   "%mul_ln16_28 = mul nsw i32 %B_load_28, %A_load_28" [matrixmultiplication.cpp:16]   --->   Operation 546 'mul' 'mul_ln16_28' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 547 [1/1] (2.55ns)   --->   "%add_ln16_18 = add i32 %mul_ln16_21, %mul_ln16_20" [matrixmultiplication.cpp:16]   --->   Operation 547 'add' 'add_ln16_18' <Predicate = (!icmp_ln10)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 37 <SV = 36> <Delay = 3.95>
ST_37 : Operation 548 [1/5] (3.95ns)   --->   "%mul_ln16_23 = mul nsw i32 %B_load_23, %A_load_23" [matrixmultiplication.cpp:16]   --->   Operation 548 'mul' 'mul_ln16_23' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 549 [2/5] (3.95ns)   --->   "%mul_ln16_26 = mul nsw i32 %B_load_26, %A_load_26" [matrixmultiplication.cpp:16]   --->   Operation 549 'mul' 'mul_ln16_26' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 550 [3/5] (3.95ns)   --->   "%mul_ln16_27 = mul nsw i32 %B_load_27, %A_load_27" [matrixmultiplication.cpp:16]   --->   Operation 550 'mul' 'mul_ln16_27' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 551 [4/5] (3.95ns)   --->   "%mul_ln16_28 = mul nsw i32 %B_load_28, %A_load_28" [matrixmultiplication.cpp:16]   --->   Operation 551 'mul' 'mul_ln16_28' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 38 <SV = 37> <Delay = 3.95>
ST_38 : Operation 552 [1/5] (3.95ns)   --->   "%mul_ln16_26 = mul nsw i32 %B_load_26, %A_load_26" [matrixmultiplication.cpp:16]   --->   Operation 552 'mul' 'mul_ln16_26' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 553 [2/5] (3.95ns)   --->   "%mul_ln16_27 = mul nsw i32 %B_load_27, %A_load_27" [matrixmultiplication.cpp:16]   --->   Operation 553 'mul' 'mul_ln16_27' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 554 [3/5] (3.95ns)   --->   "%mul_ln16_28 = mul nsw i32 %B_load_28, %A_load_28" [matrixmultiplication.cpp:16]   --->   Operation 554 'mul' 'mul_ln16_28' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 555 [1/1] (2.55ns)   --->   "%add_ln16_19 = add i32 %mul_ln16_23, %mul_ln16_22" [matrixmultiplication.cpp:16]   --->   Operation 555 'add' 'add_ln16_19' <Predicate = (!icmp_ln10)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 39 <SV = 38> <Delay = 4.37>
ST_39 : Operation 556 [1/5] (3.95ns)   --->   "%mul_ln16_27 = mul nsw i32 %B_load_27, %A_load_27" [matrixmultiplication.cpp:16]   --->   Operation 556 'mul' 'mul_ln16_27' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 557 [2/5] (3.95ns)   --->   "%mul_ln16_28 = mul nsw i32 %B_load_28, %A_load_28" [matrixmultiplication.cpp:16]   --->   Operation 557 'mul' 'mul_ln16_28' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 558 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln16_20 = add i32 %add_ln16_18, %add_ln16_19" [matrixmultiplication.cpp:16]   --->   Operation 558 'add' 'add_ln16_20' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_39 : Operation 559 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln16_21 = add i32 %add_ln16_17, %add_ln16_20" [matrixmultiplication.cpp:16]   --->   Operation 559 'add' 'add_ln16_21' <Predicate = (!icmp_ln10)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 40 <SV = 39> <Delay = 4.37>
ST_40 : Operation 560 [1/5] (3.95ns)   --->   "%mul_ln16_28 = mul nsw i32 %B_load_28, %A_load_28" [matrixmultiplication.cpp:16]   --->   Operation 560 'mul' 'mul_ln16_28' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 561 [5/5] (3.95ns)   --->   "%mul_ln16_30 = mul nsw i32 %B_load_30, %A_load_30" [matrixmultiplication.cpp:16]   --->   Operation 561 'mul' 'mul_ln16_30' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 562 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln16_23 = add i32 %mul_ln16_27, %mul_ln16_26" [matrixmultiplication.cpp:16]   --->   Operation 562 'add' 'add_ln16_23' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_40 : Operation 563 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln16_24 = add i32 %add_ln16_22, %add_ln16_23" [matrixmultiplication.cpp:16]   --->   Operation 563 'add' 'add_ln16_24' <Predicate = (!icmp_ln10)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 41 <SV = 40> <Delay = 3.95>
ST_41 : Operation 564 [4/5] (3.95ns)   --->   "%mul_ln16_30 = mul nsw i32 %B_load_30, %A_load_30" [matrixmultiplication.cpp:16]   --->   Operation 564 'mul' 'mul_ln16_30' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 42 <SV = 41> <Delay = 3.95>
ST_42 : Operation 565 [3/5] (3.95ns)   --->   "%mul_ln16_30 = mul nsw i32 %B_load_30, %A_load_30" [matrixmultiplication.cpp:16]   --->   Operation 565 'mul' 'mul_ln16_30' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 566 [5/5] (3.95ns)   --->   "%mul_ln16_31 = mul nsw i32 %B_load_31, %A_load_31" [matrixmultiplication.cpp:16]   --->   Operation 566 'mul' 'mul_ln16_31' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 43 <SV = 42> <Delay = 3.95>
ST_43 : Operation 567 [2/5] (3.95ns)   --->   "%mul_ln16_30 = mul nsw i32 %B_load_30, %A_load_30" [matrixmultiplication.cpp:16]   --->   Operation 567 'mul' 'mul_ln16_30' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 568 [4/5] (3.95ns)   --->   "%mul_ln16_31 = mul nsw i32 %B_load_31, %A_load_31" [matrixmultiplication.cpp:16]   --->   Operation 568 'mul' 'mul_ln16_31' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 44 <SV = 43> <Delay = 3.95>
ST_44 : Operation 569 [1/5] (3.95ns)   --->   "%mul_ln16_30 = mul nsw i32 %B_load_30, %A_load_30" [matrixmultiplication.cpp:16]   --->   Operation 569 'mul' 'mul_ln16_30' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 570 [3/5] (3.95ns)   --->   "%mul_ln16_31 = mul nsw i32 %B_load_31, %A_load_31" [matrixmultiplication.cpp:16]   --->   Operation 570 'mul' 'mul_ln16_31' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 45 <SV = 44> <Delay = 3.95>
ST_45 : Operation 571 [2/5] (3.95ns)   --->   "%mul_ln16_31 = mul nsw i32 %B_load_31, %A_load_31" [matrixmultiplication.cpp:16]   --->   Operation 571 'mul' 'mul_ln16_31' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 46 <SV = 45> <Delay = 3.95>
ST_46 : Operation 572 [1/5] (3.95ns)   --->   "%mul_ln16_31 = mul nsw i32 %B_load_31, %A_load_31" [matrixmultiplication.cpp:16]   --->   Operation 572 'mul' 'mul_ln16_31' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 47 <SV = 46> <Delay = 2.55>
ST_47 : Operation 573 [1/1] (2.55ns)   --->   "%add_ln16_26 = add i32 %mul_ln16_31, %mul_ln16_30" [matrixmultiplication.cpp:16]   --->   Operation 573 'add' 'add_ln16_26' <Predicate = (!icmp_ln10)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 48 <SV = 47> <Delay = 3.95>
ST_48 : Operation 574 [5/5] (3.95ns)   --->   "%mul_ln16_29 = mul nsw i32 %B_load_29, %A_load_29" [matrixmultiplication.cpp:16]   --->   Operation 574 'mul' 'mul_ln16_29' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 49 <SV = 48> <Delay = 3.95>
ST_49 : Operation 575 [4/5] (3.95ns)   --->   "%mul_ln16_29 = mul nsw i32 %B_load_29, %A_load_29" [matrixmultiplication.cpp:16]   --->   Operation 575 'mul' 'mul_ln16_29' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 50 <SV = 49> <Delay = 3.95>
ST_50 : Operation 576 [3/5] (3.95ns)   --->   "%mul_ln16_29 = mul nsw i32 %B_load_29, %A_load_29" [matrixmultiplication.cpp:16]   --->   Operation 576 'mul' 'mul_ln16_29' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 51 <SV = 50> <Delay = 3.95>
ST_51 : Operation 577 [2/5] (3.95ns)   --->   "%mul_ln16_29 = mul nsw i32 %B_load_29, %A_load_29" [matrixmultiplication.cpp:16]   --->   Operation 577 'mul' 'mul_ln16_29' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 52 <SV = 51> <Delay = 3.95>
ST_52 : Operation 578 [1/5] (3.95ns)   --->   "%mul_ln16_29 = mul nsw i32 %B_load_29, %A_load_29" [matrixmultiplication.cpp:16]   --->   Operation 578 'mul' 'mul_ln16_29' <Predicate = (!icmp_ln10)> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 53 <SV = 52> <Delay = 2.55>
ST_53 : Operation 579 [1/1] (2.55ns)   --->   "%add_ln16_25 = add i32 %mul_ln16_29, %mul_ln16_28" [matrixmultiplication.cpp:16]   --->   Operation 579 'add' 'add_ln16_25' <Predicate = (!icmp_ln10)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 54 <SV = 53> <Delay = 4.37>
ST_54 : Operation 580 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln16_27 = add i32 %add_ln16_25, %add_ln16_26" [matrixmultiplication.cpp:16]   --->   Operation 580 'add' 'add_ln16_27' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_54 : Operation 581 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln16_28 = add i32 %add_ln16_24, %add_ln16_27" [matrixmultiplication.cpp:16]   --->   Operation 581 'add' 'add_ln16_28' <Predicate = (!icmp_ln10)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 55 <SV = 54> <Delay = 4.37>
ST_55 : Operation 582 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln16_29 = add i32 %add_ln16_21, %add_ln16_28" [matrixmultiplication.cpp:16]   --->   Operation 582 'add' 'add_ln16_29' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_55 : Operation 583 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln16_30 = add nsw i32 %add_ln16_14, %add_ln16_29" [matrixmultiplication.cpp:16]   --->   Operation 583 'add' 'add_ln16_30' <Predicate = (!icmp_ln10)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 56 <SV = 55> <Delay = 2.56>
ST_56 : Operation 584 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @row_col_str)"   --->   Operation 584 'specloopname' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_56 : Operation 585 [1/1] (0.00ns)   --->   "%empty_4 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1024, i64 1024, i64 1024) nounwind"   --->   Operation 585 'speclooptripcount' 'empty_4' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_56 : Operation 586 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([4 x i8]* @p_str3) nounwind" [matrixmultiplication.cpp:11]   --->   Operation 586 'specloopname' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_56 : Operation 587 [1/1] (0.00ns)   --->   "%tmp_1 = call i32 (...)* @_ssdm_op_SpecRegionBegin([4 x i8]* @p_str3) nounwind" [matrixmultiplication.cpp:11]   --->   Operation 587 'specregionbegin' 'tmp_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_56 : Operation 588 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [matrixmultiplication.cpp:12]   --->   Operation 588 'specpipeline' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_56 : Operation 589 [1/1] (0.00ns)   --->   "%zext_ln18 = zext i12 %add_ln18 to i64" [matrixmultiplication.cpp:18]   --->   Operation 589 'zext' 'zext_ln18' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_56 : Operation 590 [1/1] (0.00ns)   --->   "%AB_addr = getelementptr [1024 x i32]* %AB, i64 0, i64 %zext_ln18" [matrixmultiplication.cpp:18]   --->   Operation 590 'getelementptr' 'AB_addr' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_56 : Operation 591 [1/1] (2.56ns)   --->   "store i32 %add_ln16_30, i32* %AB_addr, align 4" [matrixmultiplication.cpp:18]   --->   Operation 591 'store' <Predicate = (!icmp_ln10)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_56 : Operation 592 [1/1] (0.00ns)   --->   "%empty_5 = call i32 (...)* @_ssdm_op_SpecRegionEnd([4 x i8]* @p_str3, i32 %tmp_1) nounwind" [matrixmultiplication.cpp:19]   --->   Operation 592 'specregionend' 'empty_5' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_56 : Operation 593 [1/1] (0.00ns)   --->   "br label %1"   --->   Operation 593 'br' <Predicate = (!icmp_ln10)> <Delay = 0.00>

State 57 <SV = 2> <Delay = 0.00>
ST_57 : Operation 594 [1/1] (0.00ns)   --->   "ret void" [matrixmultiplication.cpp:21]   --->   Operation 594 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 5ns, clock uncertainty: 0.625ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten', matrixmultiplication.cpp:10) with incoming values : ('add_ln10', matrixmultiplication.cpp:10) [17]  (1.77 ns)

 <State 2>: 3.01ns
The critical path consists of the following:
	'phi' operation ('i_0', matrixmultiplication.cpp:16) with incoming values : ('select_ln16_1', matrixmultiplication.cpp:16) [18]  (0 ns)
	'add' operation ('i', matrixmultiplication.cpp:10) [24]  (1.83 ns)
	'select' operation ('select_ln16_1', matrixmultiplication.cpp:16) [29]  (1.19 ns)

 <State 3>: 2.57ns
The critical path consists of the following:
	'getelementptr' operation ('A_addr', matrixmultiplication.cpp:16) [33]  (0 ns)
	'load' operation ('A_load', matrixmultiplication.cpp:16) on array 'A' [219]  (2.57 ns)

 <State 4>: 2.57ns
The critical path consists of the following:
	'or' operation ('or_ln16', matrixmultiplication.cpp:16) [34]  (0 ns)
	'getelementptr' operation ('A_addr_1', matrixmultiplication.cpp:16) [36]  (0 ns)
	'load' operation ('A_load_1', matrixmultiplication.cpp:16) on array 'A' [222]  (2.57 ns)

 <State 5>: 3.95ns
The critical path consists of the following:
	'mul' operation ('mul_ln16', matrixmultiplication.cpp:16) [221]  (3.95 ns)

 <State 6>: 3.95ns
The critical path consists of the following:
	'mul' operation ('mul_ln16', matrixmultiplication.cpp:16) [221]  (3.95 ns)

 <State 7>: 3.95ns
The critical path consists of the following:
	'mul' operation ('mul_ln16', matrixmultiplication.cpp:16) [221]  (3.95 ns)

 <State 8>: 3.95ns
The critical path consists of the following:
	'mul' operation ('mul_ln16', matrixmultiplication.cpp:16) [221]  (3.95 ns)

 <State 9>: 3.95ns
The critical path consists of the following:
	'mul' operation ('mul_ln16', matrixmultiplication.cpp:16) [221]  (3.95 ns)

 <State 10>: 3.95ns
The critical path consists of the following:
	'mul' operation ('mul_ln16_1', matrixmultiplication.cpp:16) [224]  (3.95 ns)

 <State 11>: 3.95ns
The critical path consists of the following:
	'mul' operation ('mul_ln16_2', matrixmultiplication.cpp:16) [227]  (3.95 ns)

 <State 12>: 3.95ns
The critical path consists of the following:
	'mul' operation ('mul_ln16_4', matrixmultiplication.cpp:16) [233]  (3.95 ns)

 <State 13>: 4.3ns
The critical path consists of the following:
	'add' operation ('add_ln16_38', matrixmultiplication.cpp:16) [178]  (1.73 ns)
	'getelementptr' operation ('B_addr_17', matrixmultiplication.cpp:16) [180]  (0 ns)
	'load' operation ('B_load_17', matrixmultiplication.cpp:16) on array 'B' [271]  (2.57 ns)

 <State 14>: 3.95ns
The critical path consists of the following:
	'mul' operation ('mul_ln16_6', matrixmultiplication.cpp:16) [239]  (3.95 ns)

 <State 15>: 3.95ns
The critical path consists of the following:
	'mul' operation ('mul_ln16_6', matrixmultiplication.cpp:16) [239]  (3.95 ns)

 <State 16>: 3.95ns
The critical path consists of the following:
	'mul' operation ('mul_ln16_7', matrixmultiplication.cpp:16) [242]  (3.95 ns)

 <State 17>: 3.95ns
The critical path consists of the following:
	'mul' operation ('mul_ln16_8', matrixmultiplication.cpp:16) [245]  (3.95 ns)

 <State 18>: 3.95ns
The critical path consists of the following:
	'mul' operation ('mul_ln16_9', matrixmultiplication.cpp:16) [248]  (3.95 ns)

 <State 19>: 3.95ns
The critical path consists of the following:
	'mul' operation ('mul_ln16_12', matrixmultiplication.cpp:16) [257]  (3.95 ns)

 <State 20>: 3.95ns
The critical path consists of the following:
	'mul' operation ('mul_ln16_16', matrixmultiplication.cpp:16) [269]  (3.95 ns)

 <State 21>: 3.95ns
The critical path consists of the following:
	'mul' operation ('mul_ln16_3', matrixmultiplication.cpp:16) [230]  (3.95 ns)

 <State 22>: 4.3ns
The critical path consists of the following:
	'add' operation ('add_ln16_37', matrixmultiplication.cpp:16) [173]  (1.73 ns)
	'getelementptr' operation ('B_addr_15', matrixmultiplication.cpp:16) [175]  (0 ns)
	'load' operation ('B_load_15', matrixmultiplication.cpp:16) on array 'B' [265]  (2.57 ns)

 <State 23>: 3.95ns
The critical path consists of the following:
	'mul' operation ('mul_ln16_3', matrixmultiplication.cpp:16) [230]  (3.95 ns)

 <State 24>: 4.3ns
The critical path consists of the following:
	'add' operation ('add_ln16_39', matrixmultiplication.cpp:16) [183]  (1.73 ns)
	'getelementptr' operation ('B_addr_19', matrixmultiplication.cpp:16) [185]  (0 ns)
	'load' operation ('B_load_19', matrixmultiplication.cpp:16) on array 'B' [277]  (2.57 ns)

 <State 25>: 3.95ns
The critical path consists of the following:
	'mul' operation ('mul_ln16_3', matrixmultiplication.cpp:16) [230]  (3.95 ns)

 <State 26>: 4.37ns
The critical path consists of the following:
	'add' operation ('add_ln16_1', matrixmultiplication.cpp:16) [316]  (0 ns)
	'add' operation ('add_ln16_2', matrixmultiplication.cpp:16) [317]  (4.37 ns)

 <State 27>: 3.95ns
The critical path consists of the following:
	'mul' operation ('mul_ln16_10', matrixmultiplication.cpp:16) [251]  (3.95 ns)

 <State 28>: 4.37ns
The critical path consists of the following:
	'add' operation ('add_ln16_5', matrixmultiplication.cpp:16) [320]  (0 ns)
	'add' operation ('add_ln16_6', matrixmultiplication.cpp:16) [321]  (4.37 ns)

 <State 29>: 3.95ns
The critical path consists of the following:
	'mul' operation ('mul_ln16_11', matrixmultiplication.cpp:16) [254]  (3.95 ns)

 <State 30>: 4.37ns
The critical path consists of the following:
	'add' operation ('add_ln16_8', matrixmultiplication.cpp:16) [323]  (0 ns)
	'add' operation ('add_ln16_9', matrixmultiplication.cpp:16) [324]  (4.37 ns)

 <State 31>: 3.95ns
The critical path consists of the following:
	'mul' operation ('mul_ln16_15', matrixmultiplication.cpp:16) [266]  (3.95 ns)

 <State 32>: 4.37ns
The critical path consists of the following:
	'add' operation ('add_ln16_11', matrixmultiplication.cpp:16) [326]  (0 ns)
	'add' operation ('add_ln16_12', matrixmultiplication.cpp:16) [327]  (4.37 ns)

 <State 33>: 4.37ns
The critical path consists of the following:
	'add' operation ('add_ln16_13', matrixmultiplication.cpp:16) [328]  (0 ns)
	'add' operation ('add_ln16_14', matrixmultiplication.cpp:16) [329]  (4.37 ns)

 <State 34>: 4.37ns
The critical path consists of the following:
	'add' operation ('add_ln16_16', matrixmultiplication.cpp:16) [331]  (0 ns)
	'add' operation ('add_ln16_17', matrixmultiplication.cpp:16) [332]  (4.37 ns)

 <State 35>: 3.95ns
The critical path consists of the following:
	'mul' operation ('mul_ln16_21', matrixmultiplication.cpp:16) [284]  (3.95 ns)

 <State 36>: 3.95ns
The critical path consists of the following:
	'mul' operation ('mul_ln16_22', matrixmultiplication.cpp:16) [287]  (3.95 ns)

 <State 37>: 3.95ns
The critical path consists of the following:
	'mul' operation ('mul_ln16_23', matrixmultiplication.cpp:16) [290]  (3.95 ns)

 <State 38>: 3.95ns
The critical path consists of the following:
	'mul' operation ('mul_ln16_26', matrixmultiplication.cpp:16) [299]  (3.95 ns)

 <State 39>: 4.37ns
The critical path consists of the following:
	'add' operation ('add_ln16_20', matrixmultiplication.cpp:16) [335]  (0 ns)
	'add' operation ('add_ln16_21', matrixmultiplication.cpp:16) [336]  (4.37 ns)

 <State 40>: 4.37ns
The critical path consists of the following:
	'add' operation ('add_ln16_23', matrixmultiplication.cpp:16) [338]  (0 ns)
	'add' operation ('add_ln16_24', matrixmultiplication.cpp:16) [339]  (4.37 ns)

 <State 41>: 3.95ns
The critical path consists of the following:
	'mul' operation ('mul_ln16_30', matrixmultiplication.cpp:16) [311]  (3.95 ns)

 <State 42>: 3.95ns
The critical path consists of the following:
	'mul' operation ('mul_ln16_30', matrixmultiplication.cpp:16) [311]  (3.95 ns)

 <State 43>: 3.95ns
The critical path consists of the following:
	'mul' operation ('mul_ln16_30', matrixmultiplication.cpp:16) [311]  (3.95 ns)

 <State 44>: 3.95ns
The critical path consists of the following:
	'mul' operation ('mul_ln16_30', matrixmultiplication.cpp:16) [311]  (3.95 ns)

 <State 45>: 3.95ns
The critical path consists of the following:
	'mul' operation ('mul_ln16_31', matrixmultiplication.cpp:16) [314]  (3.95 ns)

 <State 46>: 3.95ns
The critical path consists of the following:
	'mul' operation ('mul_ln16_31', matrixmultiplication.cpp:16) [314]  (3.95 ns)

 <State 47>: 2.55ns
The critical path consists of the following:
	'add' operation ('add_ln16_26', matrixmultiplication.cpp:16) [341]  (2.55 ns)

 <State 48>: 3.95ns
The critical path consists of the following:
	'mul' operation ('mul_ln16_29', matrixmultiplication.cpp:16) [308]  (3.95 ns)

 <State 49>: 3.95ns
The critical path consists of the following:
	'mul' operation ('mul_ln16_29', matrixmultiplication.cpp:16) [308]  (3.95 ns)

 <State 50>: 3.95ns
The critical path consists of the following:
	'mul' operation ('mul_ln16_29', matrixmultiplication.cpp:16) [308]  (3.95 ns)

 <State 51>: 3.95ns
The critical path consists of the following:
	'mul' operation ('mul_ln16_29', matrixmultiplication.cpp:16) [308]  (3.95 ns)

 <State 52>: 3.95ns
The critical path consists of the following:
	'mul' operation ('mul_ln16_29', matrixmultiplication.cpp:16) [308]  (3.95 ns)

 <State 53>: 2.55ns
The critical path consists of the following:
	'add' operation ('add_ln16_25', matrixmultiplication.cpp:16) [340]  (2.55 ns)

 <State 54>: 4.37ns
The critical path consists of the following:
	'add' operation ('add_ln16_27', matrixmultiplication.cpp:16) [342]  (0 ns)
	'add' operation ('add_ln16_28', matrixmultiplication.cpp:16) [343]  (4.37 ns)

 <State 55>: 4.37ns
The critical path consists of the following:
	'add' operation ('add_ln16_29', matrixmultiplication.cpp:16) [344]  (0 ns)
	'add' operation ('add_ln16_30', matrixmultiplication.cpp:16) [345]  (4.37 ns)

 <State 56>: 2.57ns
The critical path consists of the following:
	'getelementptr' operation ('AB_addr', matrixmultiplication.cpp:18) [218]  (0 ns)
	'store' operation ('store_ln18', matrixmultiplication.cpp:18) of variable 'add_ln16_30', matrixmultiplication.cpp:16 on array 'AB' [346]  (2.57 ns)

 <State 57>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
