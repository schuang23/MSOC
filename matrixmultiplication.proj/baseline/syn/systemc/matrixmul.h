// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _matrixmul_HH_
#define _matrixmul_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "matrixmul_mul_32sbkb.h"
#include "matrixmul_AXILiteS_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_AXILITES_ADDR_WIDTH = 14,
         unsigned int C_S_AXI_AXILITES_DATA_WIDTH = 32>
struct matrixmul : public sc_module {
    // Port declarations 20
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_logic > s_axi_AXILiteS_AWVALID;
    sc_out< sc_logic > s_axi_AXILiteS_AWREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_AWADDR;
    sc_in< sc_logic > s_axi_AXILiteS_WVALID;
    sc_out< sc_logic > s_axi_AXILiteS_WREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_WDATA;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH/8> > s_axi_AXILiteS_WSTRB;
    sc_in< sc_logic > s_axi_AXILiteS_ARVALID;
    sc_out< sc_logic > s_axi_AXILiteS_ARREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_ARADDR;
    sc_out< sc_logic > s_axi_AXILiteS_RVALID;
    sc_in< sc_logic > s_axi_AXILiteS_RREADY;
    sc_out< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_RDATA;
    sc_out< sc_lv<2> > s_axi_AXILiteS_RRESP;
    sc_out< sc_logic > s_axi_AXILiteS_BVALID;
    sc_in< sc_logic > s_axi_AXILiteS_BREADY;
    sc_out< sc_lv<2> > s_axi_AXILiteS_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    matrixmul(sc_module_name name);
    SC_HAS_PROCESS(matrixmul);

    ~matrixmul();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    matrixmul_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>* matrixmul_AXILiteS_s_axi_U;
    matrixmul_mul_32sbkb<1,5,32,32,32>* matrixmul_mul_32sbkb_U1;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<11> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<10> > A_address0;
    sc_signal< sc_logic > A_ce0;
    sc_signal< sc_lv<32> > A_q0;
    sc_signal< sc_lv<10> > B_address0;
    sc_signal< sc_logic > B_ce0;
    sc_signal< sc_lv<32> > B_q0;
    sc_signal< sc_logic > AB_ce0;
    sc_signal< sc_logic > AB_we0;
    sc_signal< sc_lv<6> > i_fu_150_p2;
    sc_signal< sc_lv<6> > i_reg_254;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<12> > zext_ln11_fu_164_p1;
    sc_signal< sc_lv<12> > zext_ln11_reg_259;
    sc_signal< sc_lv<1> > icmp_ln10_fu_144_p2;
    sc_signal< sc_lv<6> > j_fu_174_p2;
    sc_signal< sc_lv<6> > j_reg_268;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<12> > zext_ln18_fu_180_p1;
    sc_signal< sc_lv<12> > zext_ln18_reg_273;
    sc_signal< sc_lv<1> > icmp_ln11_fu_168_p2;
    sc_signal< sc_lv<10> > AB_addr_reg_278;
    sc_signal< sc_lv<6> > k_fu_200_p2;
    sc_signal< sc_lv<6> > k_reg_286;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > icmp_ln15_fu_194_p2;
    sc_signal< sc_lv<32> > A_load_reg_301;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<32> > B_load_reg_306;
    sc_signal< sc_lv<32> > grp_fu_242_p2;
    sc_signal< sc_lv<32> > mul_ln16_reg_311;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<32> > ABij_fu_246_p2;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<6> > i_0_reg_98;
    sc_signal< sc_lv<6> > j_0_reg_109;
    sc_signal< sc_lv<32> > ABij_0_reg_120;
    sc_signal< sc_lv<6> > k_0_reg_133;
    sc_signal< sc_lv<64> > zext_ln18_1_fu_189_p1;
    sc_signal< sc_lv<64> > zext_ln16_1_fu_215_p1;
    sc_signal< sc_lv<64> > zext_ln16_3_fu_237_p1;
    sc_signal< sc_lv<11> > tmp_2_fu_156_p3;
    sc_signal< sc_lv<12> > add_ln18_fu_184_p2;
    sc_signal< sc_lv<12> > zext_ln16_fu_206_p1;
    sc_signal< sc_lv<12> > add_ln16_fu_210_p2;
    sc_signal< sc_lv<11> > tmp_3_fu_220_p3;
    sc_signal< sc_lv<12> > zext_ln16_2_fu_228_p1;
    sc_signal< sc_lv<12> > add_ln16_1_fu_232_p2;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<11> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<11> ap_ST_fsm_state1;
    static const sc_lv<11> ap_ST_fsm_state2;
    static const sc_lv<11> ap_ST_fsm_state3;
    static const sc_lv<11> ap_ST_fsm_state4;
    static const sc_lv<11> ap_ST_fsm_state5;
    static const sc_lv<11> ap_ST_fsm_state6;
    static const sc_lv<11> ap_ST_fsm_state7;
    static const sc_lv<11> ap_ST_fsm_state8;
    static const sc_lv<11> ap_ST_fsm_state9;
    static const sc_lv<11> ap_ST_fsm_state10;
    static const sc_lv<11> ap_ST_fsm_state11;
    static const sc_lv<32> ap_const_lv32_0;
    static const int C_S_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<6> ap_const_lv6_20;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_AB_ce0();
    void thread_AB_we0();
    void thread_ABij_fu_246_p2();
    void thread_A_address0();
    void thread_A_ce0();
    void thread_B_address0();
    void thread_B_ce0();
    void thread_add_ln16_1_fu_232_p2();
    void thread_add_ln16_fu_210_p2();
    void thread_add_ln18_fu_184_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_i_fu_150_p2();
    void thread_icmp_ln10_fu_144_p2();
    void thread_icmp_ln11_fu_168_p2();
    void thread_icmp_ln15_fu_194_p2();
    void thread_j_fu_174_p2();
    void thread_k_fu_200_p2();
    void thread_tmp_2_fu_156_p3();
    void thread_tmp_3_fu_220_p3();
    void thread_zext_ln11_fu_164_p1();
    void thread_zext_ln16_1_fu_215_p1();
    void thread_zext_ln16_2_fu_228_p1();
    void thread_zext_ln16_3_fu_237_p1();
    void thread_zext_ln16_fu_206_p1();
    void thread_zext_ln18_1_fu_189_p1();
    void thread_zext_ln18_fu_180_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
