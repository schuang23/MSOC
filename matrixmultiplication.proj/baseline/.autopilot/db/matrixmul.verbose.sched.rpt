

================================================================
== Vivado HLS Report for 'matrixmul'
================================================================
* Date:           Wed Dec 23 21:16:25 2020

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        matrixmultiplication.proj
* Solution:       baseline
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  | 5.00 ns | 4.205 ns |   0.63 ns  |
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+--------+--------+---------+
    |  Latency (cycles) |  Latency (absolute) |     Interval    | Pipeline|
    |   min   |   max   |    min   |    max   |   min  |   max  |   Type  |
    +---------+---------+----------+----------+--------+--------+---------+
    |   264257|   264257| 1.321 ms | 1.321 ms |  264257|  264257|   none  |
    +---------+---------+----------+----------+--------+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------+---------+---------+----------+-----------+-----------+------+----------+
        |              |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |   Loop Name  |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------+---------+---------+----------+-----------+-----------+------+----------+
        |- row         |   264256|   264256|      8258|          -|          -|    32|    no    |
        | + col        |     8256|     8256|       258|          -|          -|    32|    no    |
        |  ++ product  |      256|      256|         8|          -|          -|    32|    no    |
        +--------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 11
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 2 
4 --> 5 3 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 4 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([1024 x i32]* %A) nounwind, !map !7"   --->   Operation 12 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([1024 x i32]* %B) nounwind, !map !13"   --->   Operation 13 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([1024 x i32]* %AB) nounwind, !map !17"   --->   Operation 14 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([10 x i8]* @matrixmul_str) nounwind"   --->   Operation 15 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecMemCore([1024 x i32]* %A, [1 x i8]* @p_str5, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str5, i32 -1, [1 x i8]* @p_str5, [1 x i8]* @p_str5, [1 x i8]* @p_str5, [1 x i8]* @p_str5, [1 x i8]* @p_str5) nounwind" [matrixmultiplication.cpp:7]   --->   Operation 16 'specmemcore' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface([1024 x i32]* %A, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)" [matrixmultiplication.cpp:7]   --->   Operation 17 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%empty_2 = call i32 (...)* @_ssdm_op_SpecMemCore([1024 x i32]* %AB, [1 x i8]* @p_str7, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str7, i32 -1, [1 x i8]* @p_str7, [1 x i8]* @p_str7, [1 x i8]* @p_str7, [1 x i8]* @p_str7, [1 x i8]* @p_str7) nounwind" [matrixmultiplication.cpp:7]   --->   Operation 18 'specmemcore' 'empty_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface([1024 x i32]* %AB, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)" [matrixmultiplication.cpp:7]   --->   Operation 19 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%empty_3 = call i32 (...)* @_ssdm_op_SpecMemCore([1024 x i32]* %B, [1 x i8]* @p_str6, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str6, i32 -1, [1 x i8]* @p_str6, [1 x i8]* @p_str6, [1 x i8]* @p_str6, [1 x i8]* @p_str6, [1 x i8]* @p_str6) nounwind" [matrixmultiplication.cpp:7]   --->   Operation 20 'specmemcore' 'empty_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface([1024 x i32]* %B, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)" [matrixmultiplication.cpp:7]   --->   Operation 21 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [matrixmultiplication.cpp:7]   --->   Operation 22 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (1.76ns)   --->   "br label %1" [matrixmultiplication.cpp:10]   --->   Operation 23 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 1.82>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%i_0 = phi i6 [ 0, %0 ], [ %i, %row_end ]"   --->   Operation 24 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (1.42ns)   --->   "%icmp_ln10 = icmp eq i6 %i_0, -32" [matrixmultiplication.cpp:10]   --->   Operation 25 'icmp' 'icmp_ln10' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%empty_4 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) nounwind"   --->   Operation 26 'speclooptripcount' 'empty_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (1.82ns)   --->   "%i = add i6 %i_0, 1" [matrixmultiplication.cpp:10]   --->   Operation 27 'add' 'i' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "br i1 %icmp_ln10, label %5, label %row_begin" [matrixmultiplication.cpp:10]   --->   Operation 28 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([4 x i8]* @p_str2) nounwind" [matrixmultiplication.cpp:10]   --->   Operation 29 'specloopname' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([4 x i8]* @p_str2) nounwind" [matrixmultiplication.cpp:10]   --->   Operation 30 'specregionbegin' 'tmp' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%tmp_2 = call i11 @_ssdm_op_BitConcatenate.i11.i6.i5(i6 %i_0, i5 0)" [matrixmultiplication.cpp:16]   --->   Operation 31 'bitconcatenate' 'tmp_2' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%zext_ln11 = zext i11 %tmp_2 to i12" [matrixmultiplication.cpp:11]   --->   Operation 32 'zext' 'zext_ln11' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (1.76ns)   --->   "br label %2" [matrixmultiplication.cpp:11]   --->   Operation 33 'br' <Predicate = (!icmp_ln10)> <Delay = 1.76>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "ret void" [matrixmultiplication.cpp:21]   --->   Operation 34 'ret' <Predicate = (icmp_ln10)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 1.82>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "%j_0 = phi i6 [ 0, %row_begin ], [ %j, %col_end ]"   --->   Operation 35 'phi' 'j_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 36 [1/1] (1.42ns)   --->   "%icmp_ln11 = icmp eq i6 %j_0, -32" [matrixmultiplication.cpp:11]   --->   Operation 36 'icmp' 'icmp_ln11' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "%empty_5 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) nounwind"   --->   Operation 37 'speclooptripcount' 'empty_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 38 [1/1] (1.82ns)   --->   "%j = add i6 %j_0, 1" [matrixmultiplication.cpp:11]   --->   Operation 38 'add' 'j' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "br i1 %icmp_ln11, label %row_end, label %col_begin" [matrixmultiplication.cpp:11]   --->   Operation 39 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([4 x i8]* @p_str3) nounwind" [matrixmultiplication.cpp:11]   --->   Operation 40 'specloopname' <Predicate = (!icmp_ln11)> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "%tmp_1 = call i32 (...)* @_ssdm_op_SpecRegionBegin([4 x i8]* @p_str3) nounwind" [matrixmultiplication.cpp:11]   --->   Operation 41 'specregionbegin' 'tmp_1' <Predicate = (!icmp_ln11)> <Delay = 0.00>
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "%zext_ln18 = zext i6 %j_0 to i12" [matrixmultiplication.cpp:18]   --->   Operation 42 'zext' 'zext_ln18' <Predicate = (!icmp_ln11)> <Delay = 0.00>
ST_3 : Operation 43 [1/1] (1.63ns)   --->   "%add_ln18 = add i12 %zext_ln11, %zext_ln18" [matrixmultiplication.cpp:18]   --->   Operation 43 'add' 'add_ln18' <Predicate = (!icmp_ln11)> <Delay = 1.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "%zext_ln18_1 = zext i12 %add_ln18 to i64" [matrixmultiplication.cpp:18]   --->   Operation 44 'zext' 'zext_ln18_1' <Predicate = (!icmp_ln11)> <Delay = 0.00>
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "%AB_addr = getelementptr [1024 x i32]* %AB, i64 0, i64 %zext_ln18_1" [matrixmultiplication.cpp:18]   --->   Operation 45 'getelementptr' 'AB_addr' <Predicate = (!icmp_ln11)> <Delay = 0.00>
ST_3 : Operation 46 [1/1] (1.76ns)   --->   "br label %3" [matrixmultiplication.cpp:15]   --->   Operation 46 'br' <Predicate = (!icmp_ln11)> <Delay = 1.76>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "%empty_8 = call i32 (...)* @_ssdm_op_SpecRegionEnd([4 x i8]* @p_str2, i32 %tmp) nounwind" [matrixmultiplication.cpp:20]   --->   Operation 47 'specregionend' 'empty_8' <Predicate = (icmp_ln11)> <Delay = 0.00>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "br label %1" [matrixmultiplication.cpp:10]   --->   Operation 48 'br' <Predicate = (icmp_ln11)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 4.20>
ST_4 : Operation 49 [1/1] (0.00ns)   --->   "%ABij_0 = phi i32 [ 0, %col_begin ], [ %ABij, %4 ]"   --->   Operation 49 'phi' 'ABij_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 50 [1/1] (0.00ns)   --->   "%k_0 = phi i6 [ 0, %col_begin ], [ %k, %4 ]"   --->   Operation 50 'phi' 'k_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 51 [1/1] (1.42ns)   --->   "%icmp_ln15 = icmp eq i6 %k_0, -32" [matrixmultiplication.cpp:15]   --->   Operation 51 'icmp' 'icmp_ln15' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 52 [1/1] (0.00ns)   --->   "%empty_6 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) nounwind"   --->   Operation 52 'speclooptripcount' 'empty_6' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 53 [1/1] (1.82ns)   --->   "%k = add i6 %k_0, 1" [matrixmultiplication.cpp:15]   --->   Operation 53 'add' 'k' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 54 [1/1] (0.00ns)   --->   "br i1 %icmp_ln15, label %col_end, label %4" [matrixmultiplication.cpp:15]   --->   Operation 54 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 55 [1/1] (0.00ns)   --->   "%zext_ln16 = zext i6 %k_0 to i12" [matrixmultiplication.cpp:16]   --->   Operation 55 'zext' 'zext_ln16' <Predicate = (!icmp_ln15)> <Delay = 0.00>
ST_4 : Operation 56 [1/1] (1.63ns)   --->   "%add_ln16 = add i12 %zext_ln16, %zext_ln11" [matrixmultiplication.cpp:16]   --->   Operation 56 'add' 'add_ln16' <Predicate = (!icmp_ln15)> <Delay = 1.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 57 [1/1] (0.00ns)   --->   "%zext_ln16_1 = zext i12 %add_ln16 to i64" [matrixmultiplication.cpp:16]   --->   Operation 57 'zext' 'zext_ln16_1' <Predicate = (!icmp_ln15)> <Delay = 0.00>
ST_4 : Operation 58 [1/1] (0.00ns)   --->   "%A_addr = getelementptr [1024 x i32]* %A, i64 0, i64 %zext_ln16_1" [matrixmultiplication.cpp:16]   --->   Operation 58 'getelementptr' 'A_addr' <Predicate = (!icmp_ln15)> <Delay = 0.00>
ST_4 : Operation 59 [1/1] (0.00ns)   --->   "%tmp_3 = call i11 @_ssdm_op_BitConcatenate.i11.i6.i5(i6 %k_0, i5 0)" [matrixmultiplication.cpp:16]   --->   Operation 59 'bitconcatenate' 'tmp_3' <Predicate = (!icmp_ln15)> <Delay = 0.00>
ST_4 : Operation 60 [1/1] (0.00ns)   --->   "%zext_ln16_2 = zext i11 %tmp_3 to i12" [matrixmultiplication.cpp:16]   --->   Operation 60 'zext' 'zext_ln16_2' <Predicate = (!icmp_ln15)> <Delay = 0.00>
ST_4 : Operation 61 [1/1] (1.63ns)   --->   "%add_ln16_1 = add i12 %zext_ln18, %zext_ln16_2" [matrixmultiplication.cpp:16]   --->   Operation 61 'add' 'add_ln16_1' <Predicate = (!icmp_ln15)> <Delay = 1.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 62 [1/1] (0.00ns)   --->   "%zext_ln16_3 = zext i12 %add_ln16_1 to i64" [matrixmultiplication.cpp:16]   --->   Operation 62 'zext' 'zext_ln16_3' <Predicate = (!icmp_ln15)> <Delay = 0.00>
ST_4 : Operation 63 [1/1] (0.00ns)   --->   "%B_addr = getelementptr [1024 x i32]* %B, i64 0, i64 %zext_ln16_3" [matrixmultiplication.cpp:16]   --->   Operation 63 'getelementptr' 'B_addr' <Predicate = (!icmp_ln15)> <Delay = 0.00>
ST_4 : Operation 64 [2/2] (2.56ns)   --->   "%A_load = load i32* %A_addr, align 4" [matrixmultiplication.cpp:16]   --->   Operation 64 'load' 'A_load' <Predicate = (!icmp_ln15)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_4 : Operation 65 [2/2] (2.56ns)   --->   "%B_load = load i32* %B_addr, align 4" [matrixmultiplication.cpp:16]   --->   Operation 65 'load' 'B_load' <Predicate = (!icmp_ln15)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_4 : Operation 66 [1/1] (2.56ns)   --->   "store i32 %ABij_0, i32* %AB_addr, align 4" [matrixmultiplication.cpp:18]   --->   Operation 66 'store' <Predicate = (icmp_ln15)> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_4 : Operation 67 [1/1] (0.00ns)   --->   "%empty_7 = call i32 (...)* @_ssdm_op_SpecRegionEnd([4 x i8]* @p_str3, i32 %tmp_1) nounwind" [matrixmultiplication.cpp:19]   --->   Operation 67 'specregionend' 'empty_7' <Predicate = (icmp_ln15)> <Delay = 0.00>
ST_4 : Operation 68 [1/1] (0.00ns)   --->   "br label %2" [matrixmultiplication.cpp:11]   --->   Operation 68 'br' <Predicate = (icmp_ln15)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 2.56>
ST_5 : Operation 69 [1/2] (2.56ns)   --->   "%A_load = load i32* %A_addr, align 4" [matrixmultiplication.cpp:16]   --->   Operation 69 'load' 'A_load' <Predicate = true> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_5 : Operation 70 [1/2] (2.56ns)   --->   "%B_load = load i32* %B_addr, align 4" [matrixmultiplication.cpp:16]   --->   Operation 70 'load' 'B_load' <Predicate = true> <Delay = 2.56> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>

State 6 <SV = 5> <Delay = 3.95>
ST_6 : Operation 71 [5/5] (3.95ns)   --->   "%mul_ln16 = mul nsw i32 %A_load, %B_load" [matrixmultiplication.cpp:16]   --->   Operation 71 'mul' 'mul_ln16' <Predicate = true> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 3.95>
ST_7 : Operation 72 [4/5] (3.95ns)   --->   "%mul_ln16 = mul nsw i32 %A_load, %B_load" [matrixmultiplication.cpp:16]   --->   Operation 72 'mul' 'mul_ln16' <Predicate = true> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 3.95>
ST_8 : Operation 73 [3/5] (3.95ns)   --->   "%mul_ln16 = mul nsw i32 %A_load, %B_load" [matrixmultiplication.cpp:16]   --->   Operation 73 'mul' 'mul_ln16' <Predicate = true> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 3.95>
ST_9 : Operation 74 [2/5] (3.95ns)   --->   "%mul_ln16 = mul nsw i32 %A_load, %B_load" [matrixmultiplication.cpp:16]   --->   Operation 74 'mul' 'mul_ln16' <Predicate = true> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 3.95>
ST_10 : Operation 75 [1/5] (3.95ns)   --->   "%mul_ln16 = mul nsw i32 %A_load, %B_load" [matrixmultiplication.cpp:16]   --->   Operation 75 'mul' 'mul_ln16' <Predicate = true> <Delay = 3.95> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 4> <II = 1> <Delay = 3.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 2.55>
ST_11 : Operation 76 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @p_str4) nounwind" [matrixmultiplication.cpp:15]   --->   Operation 76 'specloopname' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 77 [1/1] (2.55ns)   --->   "%ABij = add nsw i32 %mul_ln16, %ABij_0" [matrixmultiplication.cpp:16]   --->   Operation 77 'add' 'ABij' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 78 [1/1] (0.00ns)   --->   "br label %3" [matrixmultiplication.cpp:15]   --->   Operation 78 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 5ns, clock uncertainty: 0.625ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', matrixmultiplication.cpp:10) [17]  (1.77 ns)

 <State 2>: 1.83ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', matrixmultiplication.cpp:10) [17]  (0 ns)
	'add' operation ('i', matrixmultiplication.cpp:10) [20]  (1.83 ns)

 <State 3>: 1.83ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', matrixmultiplication.cpp:11) [29]  (0 ns)
	'add' operation ('j', matrixmultiplication.cpp:11) [32]  (1.83 ns)

 <State 4>: 4.21ns
The critical path consists of the following:
	'phi' operation ('k') with incoming values : ('k', matrixmultiplication.cpp:15) [44]  (0 ns)
	'add' operation ('add_ln16', matrixmultiplication.cpp:16) [52]  (1.64 ns)
	'getelementptr' operation ('A_addr', matrixmultiplication.cpp:16) [54]  (0 ns)
	'load' operation ('A_load', matrixmultiplication.cpp:16) on array 'A' [60]  (2.57 ns)

 <State 5>: 2.57ns
The critical path consists of the following:
	'load' operation ('A_load', matrixmultiplication.cpp:16) on array 'A' [60]  (2.57 ns)

 <State 6>: 3.95ns
The critical path consists of the following:
	'mul' operation ('mul_ln16', matrixmultiplication.cpp:16) [62]  (3.95 ns)

 <State 7>: 3.95ns
The critical path consists of the following:
	'mul' operation ('mul_ln16', matrixmultiplication.cpp:16) [62]  (3.95 ns)

 <State 8>: 3.95ns
The critical path consists of the following:
	'mul' operation ('mul_ln16', matrixmultiplication.cpp:16) [62]  (3.95 ns)

 <State 9>: 3.95ns
The critical path consists of the following:
	'mul' operation ('mul_ln16', matrixmultiplication.cpp:16) [62]  (3.95 ns)

 <State 10>: 3.95ns
The critical path consists of the following:
	'mul' operation ('mul_ln16', matrixmultiplication.cpp:16) [62]  (3.95 ns)

 <State 11>: 2.55ns
The critical path consists of the following:
	'add' operation ('ABij', matrixmultiplication.cpp:16) [63]  (2.55 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
