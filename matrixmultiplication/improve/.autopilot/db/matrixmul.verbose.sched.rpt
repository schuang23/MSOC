

================================================================
== Vivado HLS Report for 'matrixmul'
================================================================
* Date:           Mon Dec 21 14:37:47 2020

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        matrixmultiplication.proj
* Solution:       improve
* Product family: virtex7
* Target device:  xc7v585t-ffg1761-2


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  | 5.00 ns | 4.108 ns |   0.63 ns  |
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+------+------+---------+
    |  Latency (cycles) |  Latency (absolute) |   Interval  | Pipeline|
    |   min   |   max   |    min   |    max   |  min |  max |   Type  |
    +---------+---------+----------+----------+------+------+---------+
    |     1033|     1033| 5.165 us | 5.165 us |  1033|  1033|   none  |
    +---------+---------+----------+----------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------+---------+---------+----------+-----------+-----------+------+----------+
        |           |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-----------+---------+---------+----------+-----------+-----------+------+----------+
        |- row_col  |     1031|     1031|         9|          1|          1|  1024|    yes   |
        +-----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 9


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 11
* Pipeline : 1
  Pipeline-0 : II = 1, D = 9, States = { 2 3 4 5 6 7 8 9 10 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 11 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 2 
11 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.85>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([32 x i1024]* %B), !map !7"   --->   Operation 12 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([32 x i1024]* %A), !map !169"   --->   Operation 13 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([1024 x i32]* %AB), !map !298"   --->   Operation 14 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([10 x i8]* @matrixmul_str) nounwind"   --->   Operation 15 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecMemCore([32 x i1024]* %A, [1 x i8]* @p_str3, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str3, i32 -1, [1 x i8]* @p_str3, [1 x i8]* @p_str3, [1 x i8]* @p_str3, [1 x i8]* @p_str3, [1 x i8]* @p_str3)"   --->   Operation 16 'specmemcore' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface([32 x i1024]* %A, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind"   --->   Operation 17 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%empty_4 = call i32 (...)* @_ssdm_op_SpecMemCore([1024 x i32]* %AB, [1 x i8]* @p_str6, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str6, i32 -1, [1 x i8]* @p_str6, [1 x i8]* @p_str6, [1 x i8]* @p_str6, [1 x i8]* @p_str6, [1 x i8]* @p_str6)" [matrixmultiplication.cpp:7]   --->   Operation 18 'specmemcore' 'empty_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface([1024 x i32]* %AB, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)" [matrixmultiplication.cpp:7]   --->   Operation 19 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%empty_5 = call i32 (...)* @_ssdm_op_SpecMemCore([32 x i1024]* %B, [1 x i8]* @p_str5, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str5, i32 -1, [1 x i8]* @p_str5, [1 x i8]* @p_str5, [1 x i8]* @p_str5, [1 x i8]* @p_str5, [1 x i8]* @p_str5)"   --->   Operation 20 'specmemcore' 'empty_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface([32 x i1024]* %B, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind"   --->   Operation 21 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [matrixmultiplication.cpp:7]   --->   Operation 22 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.85ns)   --->   "br label %1" [matrixmultiplication.cpp:10]   --->   Operation 23 'br' <Predicate = true> <Delay = 0.85>

State 2 <SV = 1> <Delay = 2.93>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i11 [ 0, %0 ], [ %add_ln10, %col ]" [matrixmultiplication.cpp:10]   --->   Operation 24 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%i_0 = phi i6 [ 0, %0 ], [ %select_ln16_1, %col ]" [matrixmultiplication.cpp:16]   --->   Operation 25 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%j_0 = phi i6 [ 0, %0 ], [ %j, %col ]"   --->   Operation 26 'phi' 'j_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.98ns)   --->   "%icmp_ln10 = icmp eq i11 %indvar_flatten, -1024" [matrixmultiplication.cpp:10]   --->   Operation 27 'icmp' 'icmp_ln10' <Predicate = true> <Delay = 0.98> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 28 [1/1] (1.33ns)   --->   "%add_ln10 = add i11 %indvar_flatten, 1" [matrixmultiplication.cpp:10]   --->   Operation 28 'add' 'add_ln10' <Predicate = true> <Delay = 1.33> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "br i1 %icmp_ln10, label %2, label %col" [matrixmultiplication.cpp:10]   --->   Operation 29 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (1.18ns)   --->   "%i = add i6 1, %i_0" [matrixmultiplication.cpp:10]   --->   Operation 30 'add' 'i' <Predicate = (!icmp_ln10)> <Delay = 1.18> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (0.86ns)   --->   "%icmp_ln11 = icmp eq i6 %j_0, -32" [matrixmultiplication.cpp:11]   --->   Operation 31 'icmp' 'icmp_ln11' <Predicate = (!icmp_ln10)> <Delay = 0.86> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 32 [1/1] (0.60ns)   --->   "%select_ln16 = select i1 %icmp_ln11, i6 0, i6 %j_0" [matrixmultiplication.cpp:16]   --->   Operation 32 'select' 'select_ln16' <Predicate = (!icmp_ln10)> <Delay = 0.60> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.60> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (0.60ns)   --->   "%select_ln16_1 = select i1 %icmp_ln11, i6 %i, i6 %i_0" [matrixmultiplication.cpp:16]   --->   Operation 33 'select' 'select_ln16_1' <Predicate = (!icmp_ln10)> <Delay = 0.60> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.60> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%zext_ln16 = zext i6 %select_ln16_1 to i64" [matrixmultiplication.cpp:16]   --->   Operation 34 'zext' 'zext_ln16' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%zext_ln16_1 = zext i6 %select_ln16 to i64" [matrixmultiplication.cpp:16]   --->   Operation 35 'zext' 'zext_ln16_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%A_addr = getelementptr [32 x i1024]* %A, i64 0, i64 %zext_ln16" [matrixmultiplication.cpp:16]   --->   Operation 36 'getelementptr' 'A_addr' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 37 [2/2] (1.14ns)   --->   "%A_load = load i1024* %A_addr, align 8" [matrixmultiplication.cpp:16]   --->   Operation 37 'load' 'A_load' <Predicate = (!icmp_ln10)> <Delay = 1.14> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 1.33> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%B_addr = getelementptr [32 x i1024]* %B, i64 0, i64 %zext_ln16_1" [matrixmultiplication.cpp:16]   --->   Operation 38 'getelementptr' 'B_addr' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 39 [2/2] (1.14ns)   --->   "%B_load = load i1024* %B_addr, align 8" [matrixmultiplication.cpp:16]   --->   Operation 39 'load' 'B_load' <Predicate = (!icmp_ln10)> <Delay = 1.14> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 1.33> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_2 : Operation 40 [1/1] (1.18ns)   --->   "%j = add i6 1, %select_ln16" [matrixmultiplication.cpp:11]   --->   Operation 40 'add' 'j' <Predicate = (!icmp_ln10)> <Delay = 1.18> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 1.14>
ST_3 : Operation 41 [1/2] (1.14ns)   --->   "%A_load = load i1024* %A_addr, align 8" [matrixmultiplication.cpp:16]   --->   Operation 41 'load' 'A_load' <Predicate = (!icmp_ln10)> <Delay = 1.14> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 1.33> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "%trunc_ln16 = trunc i1024 %A_load to i32" [matrixmultiplication.cpp:16]   --->   Operation 42 'trunc' 'trunc_ln16' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 43 [1/2] (1.14ns)   --->   "%B_load = load i1024* %B_addr, align 8" [matrixmultiplication.cpp:16]   --->   Operation 43 'load' 'B_load' <Predicate = (!icmp_ln10)> <Delay = 1.14> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 1.33> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "%trunc_ln16_1 = trunc i1024 %B_load to i32" [matrixmultiplication.cpp:16]   --->   Operation 44 'trunc' 'trunc_ln16_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "%tmp_4 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %A_load, i32 32, i32 63)" [matrixmultiplication.cpp:16]   --->   Operation 45 'partselect' 'tmp_4' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "%tmp_5 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %B_load, i32 32, i32 63)" [matrixmultiplication.cpp:16]   --->   Operation 46 'partselect' 'tmp_5' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "%tmp_6 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %A_load, i32 64, i32 95)" [matrixmultiplication.cpp:16]   --->   Operation 47 'partselect' 'tmp_6' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "%tmp_7 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %B_load, i32 64, i32 95)" [matrixmultiplication.cpp:16]   --->   Operation 48 'partselect' 'tmp_7' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "%tmp_8 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %A_load, i32 96, i32 127)" [matrixmultiplication.cpp:16]   --->   Operation 49 'partselect' 'tmp_8' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 50 [1/1] (0.00ns)   --->   "%tmp_9 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %B_load, i32 96, i32 127)" [matrixmultiplication.cpp:16]   --->   Operation 50 'partselect' 'tmp_9' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 51 [1/1] (0.00ns)   --->   "%tmp_s = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %A_load, i32 128, i32 159)" [matrixmultiplication.cpp:16]   --->   Operation 51 'partselect' 'tmp_s' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 52 [1/1] (0.00ns)   --->   "%tmp_2 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %B_load, i32 128, i32 159)" [matrixmultiplication.cpp:16]   --->   Operation 52 'partselect' 'tmp_2' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "%tmp_3 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %A_load, i32 160, i32 191)" [matrixmultiplication.cpp:16]   --->   Operation 53 'partselect' 'tmp_3' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "%tmp_10 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %B_load, i32 160, i32 191)" [matrixmultiplication.cpp:16]   --->   Operation 54 'partselect' 'tmp_10' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 55 [1/1] (0.00ns)   --->   "%tmp_11 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %A_load, i32 192, i32 223)" [matrixmultiplication.cpp:16]   --->   Operation 55 'partselect' 'tmp_11' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 56 [1/1] (0.00ns)   --->   "%tmp_12 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %B_load, i32 192, i32 223)" [matrixmultiplication.cpp:16]   --->   Operation 56 'partselect' 'tmp_12' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 57 [1/1] (0.00ns)   --->   "%tmp_13 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %A_load, i32 224, i32 255)" [matrixmultiplication.cpp:16]   --->   Operation 57 'partselect' 'tmp_13' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 58 [1/1] (0.00ns)   --->   "%tmp_14 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %B_load, i32 224, i32 255)" [matrixmultiplication.cpp:16]   --->   Operation 58 'partselect' 'tmp_14' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 59 [1/1] (0.00ns)   --->   "%tmp_15 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %A_load, i32 256, i32 287)" [matrixmultiplication.cpp:16]   --->   Operation 59 'partselect' 'tmp_15' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 60 [1/1] (0.00ns)   --->   "%tmp_16 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %B_load, i32 256, i32 287)" [matrixmultiplication.cpp:16]   --->   Operation 60 'partselect' 'tmp_16' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 61 [1/1] (0.00ns)   --->   "%tmp_17 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %A_load, i32 288, i32 319)" [matrixmultiplication.cpp:16]   --->   Operation 61 'partselect' 'tmp_17' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 62 [1/1] (0.00ns)   --->   "%tmp_18 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %B_load, i32 288, i32 319)" [matrixmultiplication.cpp:16]   --->   Operation 62 'partselect' 'tmp_18' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 63 [1/1] (0.00ns)   --->   "%tmp_19 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %A_load, i32 320, i32 351)" [matrixmultiplication.cpp:16]   --->   Operation 63 'partselect' 'tmp_19' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 64 [1/1] (0.00ns)   --->   "%tmp_20 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %B_load, i32 320, i32 351)" [matrixmultiplication.cpp:16]   --->   Operation 64 'partselect' 'tmp_20' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 65 [1/1] (0.00ns)   --->   "%tmp_21 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %A_load, i32 352, i32 383)" [matrixmultiplication.cpp:16]   --->   Operation 65 'partselect' 'tmp_21' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 66 [1/1] (0.00ns)   --->   "%tmp_22 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %B_load, i32 352, i32 383)" [matrixmultiplication.cpp:16]   --->   Operation 66 'partselect' 'tmp_22' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 67 [1/1] (0.00ns)   --->   "%tmp_23 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %A_load, i32 384, i32 415)" [matrixmultiplication.cpp:16]   --->   Operation 67 'partselect' 'tmp_23' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 68 [1/1] (0.00ns)   --->   "%tmp_24 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %B_load, i32 384, i32 415)" [matrixmultiplication.cpp:16]   --->   Operation 68 'partselect' 'tmp_24' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 69 [1/1] (0.00ns)   --->   "%tmp_25 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %A_load, i32 416, i32 447)" [matrixmultiplication.cpp:16]   --->   Operation 69 'partselect' 'tmp_25' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 70 [1/1] (0.00ns)   --->   "%tmp_26 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %B_load, i32 416, i32 447)" [matrixmultiplication.cpp:16]   --->   Operation 70 'partselect' 'tmp_26' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 71 [1/1] (0.00ns)   --->   "%tmp_27 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %A_load, i32 448, i32 479)" [matrixmultiplication.cpp:16]   --->   Operation 71 'partselect' 'tmp_27' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 72 [1/1] (0.00ns)   --->   "%tmp_28 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %B_load, i32 448, i32 479)" [matrixmultiplication.cpp:16]   --->   Operation 72 'partselect' 'tmp_28' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 73 [1/1] (0.00ns)   --->   "%tmp_29 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %A_load, i32 480, i32 511)" [matrixmultiplication.cpp:16]   --->   Operation 73 'partselect' 'tmp_29' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 74 [1/1] (0.00ns)   --->   "%tmp_30 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %B_load, i32 480, i32 511)" [matrixmultiplication.cpp:16]   --->   Operation 74 'partselect' 'tmp_30' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 75 [1/1] (0.00ns)   --->   "%tmp_31 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %A_load, i32 512, i32 543)" [matrixmultiplication.cpp:16]   --->   Operation 75 'partselect' 'tmp_31' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 76 [1/1] (0.00ns)   --->   "%tmp_32 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %B_load, i32 512, i32 543)" [matrixmultiplication.cpp:16]   --->   Operation 76 'partselect' 'tmp_32' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 77 [1/1] (0.00ns)   --->   "%tmp_33 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %A_load, i32 544, i32 575)" [matrixmultiplication.cpp:16]   --->   Operation 77 'partselect' 'tmp_33' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 78 [1/1] (0.00ns)   --->   "%tmp_34 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %B_load, i32 544, i32 575)" [matrixmultiplication.cpp:16]   --->   Operation 78 'partselect' 'tmp_34' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 79 [1/1] (0.00ns)   --->   "%tmp_35 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %A_load, i32 576, i32 607)" [matrixmultiplication.cpp:16]   --->   Operation 79 'partselect' 'tmp_35' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 80 [1/1] (0.00ns)   --->   "%tmp_36 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %B_load, i32 576, i32 607)" [matrixmultiplication.cpp:16]   --->   Operation 80 'partselect' 'tmp_36' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 81 [1/1] (0.00ns)   --->   "%tmp_37 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %A_load, i32 608, i32 639)" [matrixmultiplication.cpp:16]   --->   Operation 81 'partselect' 'tmp_37' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 82 [1/1] (0.00ns)   --->   "%tmp_38 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %B_load, i32 608, i32 639)" [matrixmultiplication.cpp:16]   --->   Operation 82 'partselect' 'tmp_38' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 83 [1/1] (0.00ns)   --->   "%tmp_39 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %A_load, i32 640, i32 671)" [matrixmultiplication.cpp:16]   --->   Operation 83 'partselect' 'tmp_39' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 84 [1/1] (0.00ns)   --->   "%tmp_40 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %B_load, i32 640, i32 671)" [matrixmultiplication.cpp:16]   --->   Operation 84 'partselect' 'tmp_40' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 85 [1/1] (0.00ns)   --->   "%tmp_41 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %A_load, i32 672, i32 703)" [matrixmultiplication.cpp:16]   --->   Operation 85 'partselect' 'tmp_41' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 86 [1/1] (0.00ns)   --->   "%tmp_42 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %B_load, i32 672, i32 703)" [matrixmultiplication.cpp:16]   --->   Operation 86 'partselect' 'tmp_42' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 87 [1/1] (0.00ns)   --->   "%tmp_43 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %A_load, i32 704, i32 735)" [matrixmultiplication.cpp:16]   --->   Operation 87 'partselect' 'tmp_43' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 88 [1/1] (0.00ns)   --->   "%tmp_44 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %B_load, i32 704, i32 735)" [matrixmultiplication.cpp:16]   --->   Operation 88 'partselect' 'tmp_44' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 89 [1/1] (0.00ns)   --->   "%tmp_45 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %A_load, i32 736, i32 767)" [matrixmultiplication.cpp:16]   --->   Operation 89 'partselect' 'tmp_45' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 90 [1/1] (0.00ns)   --->   "%tmp_46 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %B_load, i32 736, i32 767)" [matrixmultiplication.cpp:16]   --->   Operation 90 'partselect' 'tmp_46' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 91 [1/1] (0.00ns)   --->   "%tmp_47 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %A_load, i32 768, i32 799)" [matrixmultiplication.cpp:16]   --->   Operation 91 'partselect' 'tmp_47' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 92 [1/1] (0.00ns)   --->   "%tmp_48 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %B_load, i32 768, i32 799)" [matrixmultiplication.cpp:16]   --->   Operation 92 'partselect' 'tmp_48' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 93 [1/1] (0.00ns)   --->   "%tmp_49 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %A_load, i32 800, i32 831)" [matrixmultiplication.cpp:16]   --->   Operation 93 'partselect' 'tmp_49' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 94 [1/1] (0.00ns)   --->   "%tmp_50 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %B_load, i32 800, i32 831)" [matrixmultiplication.cpp:16]   --->   Operation 94 'partselect' 'tmp_50' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 95 [1/1] (0.00ns)   --->   "%tmp_51 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %A_load, i32 832, i32 863)" [matrixmultiplication.cpp:16]   --->   Operation 95 'partselect' 'tmp_51' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 96 [1/1] (0.00ns)   --->   "%tmp_52 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %B_load, i32 832, i32 863)" [matrixmultiplication.cpp:16]   --->   Operation 96 'partselect' 'tmp_52' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 97 [1/1] (0.00ns)   --->   "%tmp_53 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %A_load, i32 864, i32 895)" [matrixmultiplication.cpp:16]   --->   Operation 97 'partselect' 'tmp_53' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 98 [1/1] (0.00ns)   --->   "%tmp_54 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %B_load, i32 864, i32 895)" [matrixmultiplication.cpp:16]   --->   Operation 98 'partselect' 'tmp_54' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 99 [1/1] (0.00ns)   --->   "%tmp_55 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %A_load, i32 896, i32 927)" [matrixmultiplication.cpp:16]   --->   Operation 99 'partselect' 'tmp_55' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 100 [1/1] (0.00ns)   --->   "%tmp_56 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %B_load, i32 896, i32 927)" [matrixmultiplication.cpp:16]   --->   Operation 100 'partselect' 'tmp_56' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 101 [1/1] (0.00ns)   --->   "%tmp_57 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %A_load, i32 928, i32 959)" [matrixmultiplication.cpp:16]   --->   Operation 101 'partselect' 'tmp_57' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 102 [1/1] (0.00ns)   --->   "%tmp_58 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %B_load, i32 928, i32 959)" [matrixmultiplication.cpp:16]   --->   Operation 102 'partselect' 'tmp_58' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 103 [1/1] (0.00ns)   --->   "%tmp_59 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %A_load, i32 960, i32 991)" [matrixmultiplication.cpp:16]   --->   Operation 103 'partselect' 'tmp_59' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 104 [1/1] (0.00ns)   --->   "%tmp_60 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %B_load, i32 960, i32 991)" [matrixmultiplication.cpp:16]   --->   Operation 104 'partselect' 'tmp_60' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 105 [1/1] (0.00ns)   --->   "%tmp_61 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %A_load, i32 992, i32 1023)" [matrixmultiplication.cpp:16]   --->   Operation 105 'partselect' 'tmp_61' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 106 [1/1] (0.00ns)   --->   "%tmp_62 = call i32 @_ssdm_op_PartSelect.i32.i1024.i32.i32(i1024 %B_load, i32 992, i32 1023)" [matrixmultiplication.cpp:16]   --->   Operation 106 'partselect' 'tmp_62' <Predicate = (!icmp_ln10)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 4.10>
ST_4 : Operation 107 [3/3] (4.10ns)   --->   "%mul_ln16 = mul nsw i32 %trunc_ln16_1, %trunc_ln16" [matrixmultiplication.cpp:16]   --->   Operation 107 'mul' 'mul_ln16' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 108 [3/3] (4.10ns)   --->   "%mul_ln16_1 = mul nsw i32 %tmp_5, %tmp_4" [matrixmultiplication.cpp:16]   --->   Operation 108 'mul' 'mul_ln16_1' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 109 [3/3] (4.10ns)   --->   "%mul_ln16_2 = mul nsw i32 %tmp_7, %tmp_6" [matrixmultiplication.cpp:16]   --->   Operation 109 'mul' 'mul_ln16_2' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 110 [3/3] (4.10ns)   --->   "%mul_ln16_3 = mul nsw i32 %tmp_9, %tmp_8" [matrixmultiplication.cpp:16]   --->   Operation 110 'mul' 'mul_ln16_3' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 111 [3/3] (4.10ns)   --->   "%mul_ln16_4 = mul nsw i32 %tmp_2, %tmp_s" [matrixmultiplication.cpp:16]   --->   Operation 111 'mul' 'mul_ln16_4' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 112 [3/3] (4.10ns)   --->   "%mul_ln16_5 = mul nsw i32 %tmp_10, %tmp_3" [matrixmultiplication.cpp:16]   --->   Operation 112 'mul' 'mul_ln16_5' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 113 [3/3] (4.10ns)   --->   "%mul_ln16_6 = mul nsw i32 %tmp_12, %tmp_11" [matrixmultiplication.cpp:16]   --->   Operation 113 'mul' 'mul_ln16_6' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 114 [3/3] (4.10ns)   --->   "%mul_ln16_7 = mul nsw i32 %tmp_14, %tmp_13" [matrixmultiplication.cpp:16]   --->   Operation 114 'mul' 'mul_ln16_7' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 115 [3/3] (4.10ns)   --->   "%mul_ln16_8 = mul nsw i32 %tmp_16, %tmp_15" [matrixmultiplication.cpp:16]   --->   Operation 115 'mul' 'mul_ln16_8' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 116 [3/3] (4.10ns)   --->   "%mul_ln16_9 = mul nsw i32 %tmp_18, %tmp_17" [matrixmultiplication.cpp:16]   --->   Operation 116 'mul' 'mul_ln16_9' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 117 [3/3] (4.10ns)   --->   "%mul_ln16_10 = mul nsw i32 %tmp_20, %tmp_19" [matrixmultiplication.cpp:16]   --->   Operation 117 'mul' 'mul_ln16_10' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 118 [3/3] (4.10ns)   --->   "%mul_ln16_11 = mul nsw i32 %tmp_22, %tmp_21" [matrixmultiplication.cpp:16]   --->   Operation 118 'mul' 'mul_ln16_11' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 119 [3/3] (4.10ns)   --->   "%mul_ln16_12 = mul nsw i32 %tmp_24, %tmp_23" [matrixmultiplication.cpp:16]   --->   Operation 119 'mul' 'mul_ln16_12' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 120 [3/3] (4.10ns)   --->   "%mul_ln16_13 = mul nsw i32 %tmp_26, %tmp_25" [matrixmultiplication.cpp:16]   --->   Operation 120 'mul' 'mul_ln16_13' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 121 [3/3] (4.10ns)   --->   "%mul_ln16_14 = mul nsw i32 %tmp_28, %tmp_27" [matrixmultiplication.cpp:16]   --->   Operation 121 'mul' 'mul_ln16_14' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 122 [3/3] (4.10ns)   --->   "%mul_ln16_15 = mul nsw i32 %tmp_30, %tmp_29" [matrixmultiplication.cpp:16]   --->   Operation 122 'mul' 'mul_ln16_15' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 123 [3/3] (4.10ns)   --->   "%mul_ln16_16 = mul nsw i32 %tmp_32, %tmp_31" [matrixmultiplication.cpp:16]   --->   Operation 123 'mul' 'mul_ln16_16' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 124 [3/3] (4.10ns)   --->   "%mul_ln16_17 = mul nsw i32 %tmp_34, %tmp_33" [matrixmultiplication.cpp:16]   --->   Operation 124 'mul' 'mul_ln16_17' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 125 [3/3] (4.10ns)   --->   "%mul_ln16_18 = mul nsw i32 %tmp_36, %tmp_35" [matrixmultiplication.cpp:16]   --->   Operation 125 'mul' 'mul_ln16_18' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 126 [3/3] (4.10ns)   --->   "%mul_ln16_19 = mul nsw i32 %tmp_38, %tmp_37" [matrixmultiplication.cpp:16]   --->   Operation 126 'mul' 'mul_ln16_19' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 127 [3/3] (4.10ns)   --->   "%mul_ln16_20 = mul nsw i32 %tmp_40, %tmp_39" [matrixmultiplication.cpp:16]   --->   Operation 127 'mul' 'mul_ln16_20' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 128 [3/3] (4.10ns)   --->   "%mul_ln16_21 = mul nsw i32 %tmp_42, %tmp_41" [matrixmultiplication.cpp:16]   --->   Operation 128 'mul' 'mul_ln16_21' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 129 [3/3] (4.10ns)   --->   "%mul_ln16_22 = mul nsw i32 %tmp_44, %tmp_43" [matrixmultiplication.cpp:16]   --->   Operation 129 'mul' 'mul_ln16_22' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 130 [3/3] (4.10ns)   --->   "%mul_ln16_23 = mul nsw i32 %tmp_46, %tmp_45" [matrixmultiplication.cpp:16]   --->   Operation 130 'mul' 'mul_ln16_23' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 131 [3/3] (4.10ns)   --->   "%mul_ln16_24 = mul nsw i32 %tmp_48, %tmp_47" [matrixmultiplication.cpp:16]   --->   Operation 131 'mul' 'mul_ln16_24' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 132 [3/3] (4.10ns)   --->   "%mul_ln16_25 = mul nsw i32 %tmp_50, %tmp_49" [matrixmultiplication.cpp:16]   --->   Operation 132 'mul' 'mul_ln16_25' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 133 [3/3] (4.10ns)   --->   "%mul_ln16_26 = mul nsw i32 %tmp_52, %tmp_51" [matrixmultiplication.cpp:16]   --->   Operation 133 'mul' 'mul_ln16_26' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 134 [3/3] (4.10ns)   --->   "%mul_ln16_27 = mul nsw i32 %tmp_54, %tmp_53" [matrixmultiplication.cpp:16]   --->   Operation 134 'mul' 'mul_ln16_27' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 135 [3/3] (4.10ns)   --->   "%mul_ln16_28 = mul nsw i32 %tmp_56, %tmp_55" [matrixmultiplication.cpp:16]   --->   Operation 135 'mul' 'mul_ln16_28' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 136 [3/3] (4.10ns)   --->   "%mul_ln16_29 = mul nsw i32 %tmp_58, %tmp_57" [matrixmultiplication.cpp:16]   --->   Operation 136 'mul' 'mul_ln16_29' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 137 [3/3] (4.10ns)   --->   "%mul_ln16_30 = mul nsw i32 %tmp_60, %tmp_59" [matrixmultiplication.cpp:16]   --->   Operation 137 'mul' 'mul_ln16_30' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 138 [3/3] (4.10ns)   --->   "%mul_ln16_31 = mul nsw i32 %tmp_62, %tmp_61" [matrixmultiplication.cpp:16]   --->   Operation 138 'mul' 'mul_ln16_31' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 4.10>
ST_5 : Operation 139 [2/3] (4.10ns)   --->   "%mul_ln16 = mul nsw i32 %trunc_ln16_1, %trunc_ln16" [matrixmultiplication.cpp:16]   --->   Operation 139 'mul' 'mul_ln16' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 140 [2/3] (4.10ns)   --->   "%mul_ln16_1 = mul nsw i32 %tmp_5, %tmp_4" [matrixmultiplication.cpp:16]   --->   Operation 140 'mul' 'mul_ln16_1' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 141 [2/3] (4.10ns)   --->   "%mul_ln16_2 = mul nsw i32 %tmp_7, %tmp_6" [matrixmultiplication.cpp:16]   --->   Operation 141 'mul' 'mul_ln16_2' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 142 [2/3] (4.10ns)   --->   "%mul_ln16_3 = mul nsw i32 %tmp_9, %tmp_8" [matrixmultiplication.cpp:16]   --->   Operation 142 'mul' 'mul_ln16_3' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 143 [2/3] (4.10ns)   --->   "%mul_ln16_4 = mul nsw i32 %tmp_2, %tmp_s" [matrixmultiplication.cpp:16]   --->   Operation 143 'mul' 'mul_ln16_4' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 144 [2/3] (4.10ns)   --->   "%mul_ln16_5 = mul nsw i32 %tmp_10, %tmp_3" [matrixmultiplication.cpp:16]   --->   Operation 144 'mul' 'mul_ln16_5' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 145 [2/3] (4.10ns)   --->   "%mul_ln16_6 = mul nsw i32 %tmp_12, %tmp_11" [matrixmultiplication.cpp:16]   --->   Operation 145 'mul' 'mul_ln16_6' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 146 [2/3] (4.10ns)   --->   "%mul_ln16_7 = mul nsw i32 %tmp_14, %tmp_13" [matrixmultiplication.cpp:16]   --->   Operation 146 'mul' 'mul_ln16_7' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 147 [2/3] (4.10ns)   --->   "%mul_ln16_8 = mul nsw i32 %tmp_16, %tmp_15" [matrixmultiplication.cpp:16]   --->   Operation 147 'mul' 'mul_ln16_8' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 148 [2/3] (4.10ns)   --->   "%mul_ln16_9 = mul nsw i32 %tmp_18, %tmp_17" [matrixmultiplication.cpp:16]   --->   Operation 148 'mul' 'mul_ln16_9' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 149 [2/3] (4.10ns)   --->   "%mul_ln16_10 = mul nsw i32 %tmp_20, %tmp_19" [matrixmultiplication.cpp:16]   --->   Operation 149 'mul' 'mul_ln16_10' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 150 [2/3] (4.10ns)   --->   "%mul_ln16_11 = mul nsw i32 %tmp_22, %tmp_21" [matrixmultiplication.cpp:16]   --->   Operation 150 'mul' 'mul_ln16_11' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 151 [2/3] (4.10ns)   --->   "%mul_ln16_12 = mul nsw i32 %tmp_24, %tmp_23" [matrixmultiplication.cpp:16]   --->   Operation 151 'mul' 'mul_ln16_12' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 152 [2/3] (4.10ns)   --->   "%mul_ln16_13 = mul nsw i32 %tmp_26, %tmp_25" [matrixmultiplication.cpp:16]   --->   Operation 152 'mul' 'mul_ln16_13' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 153 [2/3] (4.10ns)   --->   "%mul_ln16_14 = mul nsw i32 %tmp_28, %tmp_27" [matrixmultiplication.cpp:16]   --->   Operation 153 'mul' 'mul_ln16_14' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 154 [2/3] (4.10ns)   --->   "%mul_ln16_15 = mul nsw i32 %tmp_30, %tmp_29" [matrixmultiplication.cpp:16]   --->   Operation 154 'mul' 'mul_ln16_15' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 155 [2/3] (4.10ns)   --->   "%mul_ln16_16 = mul nsw i32 %tmp_32, %tmp_31" [matrixmultiplication.cpp:16]   --->   Operation 155 'mul' 'mul_ln16_16' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 156 [2/3] (4.10ns)   --->   "%mul_ln16_17 = mul nsw i32 %tmp_34, %tmp_33" [matrixmultiplication.cpp:16]   --->   Operation 156 'mul' 'mul_ln16_17' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 157 [2/3] (4.10ns)   --->   "%mul_ln16_18 = mul nsw i32 %tmp_36, %tmp_35" [matrixmultiplication.cpp:16]   --->   Operation 157 'mul' 'mul_ln16_18' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 158 [2/3] (4.10ns)   --->   "%mul_ln16_19 = mul nsw i32 %tmp_38, %tmp_37" [matrixmultiplication.cpp:16]   --->   Operation 158 'mul' 'mul_ln16_19' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 159 [2/3] (4.10ns)   --->   "%mul_ln16_20 = mul nsw i32 %tmp_40, %tmp_39" [matrixmultiplication.cpp:16]   --->   Operation 159 'mul' 'mul_ln16_20' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 160 [2/3] (4.10ns)   --->   "%mul_ln16_21 = mul nsw i32 %tmp_42, %tmp_41" [matrixmultiplication.cpp:16]   --->   Operation 160 'mul' 'mul_ln16_21' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 161 [2/3] (4.10ns)   --->   "%mul_ln16_22 = mul nsw i32 %tmp_44, %tmp_43" [matrixmultiplication.cpp:16]   --->   Operation 161 'mul' 'mul_ln16_22' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 162 [2/3] (4.10ns)   --->   "%mul_ln16_23 = mul nsw i32 %tmp_46, %tmp_45" [matrixmultiplication.cpp:16]   --->   Operation 162 'mul' 'mul_ln16_23' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 163 [2/3] (4.10ns)   --->   "%mul_ln16_24 = mul nsw i32 %tmp_48, %tmp_47" [matrixmultiplication.cpp:16]   --->   Operation 163 'mul' 'mul_ln16_24' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 164 [2/3] (4.10ns)   --->   "%mul_ln16_25 = mul nsw i32 %tmp_50, %tmp_49" [matrixmultiplication.cpp:16]   --->   Operation 164 'mul' 'mul_ln16_25' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 165 [2/3] (4.10ns)   --->   "%mul_ln16_26 = mul nsw i32 %tmp_52, %tmp_51" [matrixmultiplication.cpp:16]   --->   Operation 165 'mul' 'mul_ln16_26' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 166 [2/3] (4.10ns)   --->   "%mul_ln16_27 = mul nsw i32 %tmp_54, %tmp_53" [matrixmultiplication.cpp:16]   --->   Operation 166 'mul' 'mul_ln16_27' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 167 [2/3] (4.10ns)   --->   "%mul_ln16_28 = mul nsw i32 %tmp_56, %tmp_55" [matrixmultiplication.cpp:16]   --->   Operation 167 'mul' 'mul_ln16_28' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 168 [2/3] (4.10ns)   --->   "%mul_ln16_29 = mul nsw i32 %tmp_58, %tmp_57" [matrixmultiplication.cpp:16]   --->   Operation 168 'mul' 'mul_ln16_29' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 169 [2/3] (4.10ns)   --->   "%mul_ln16_30 = mul nsw i32 %tmp_60, %tmp_59" [matrixmultiplication.cpp:16]   --->   Operation 169 'mul' 'mul_ln16_30' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 170 [2/3] (4.10ns)   --->   "%mul_ln16_31 = mul nsw i32 %tmp_62, %tmp_61" [matrixmultiplication.cpp:16]   --->   Operation 170 'mul' 'mul_ln16_31' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 4.10>
ST_6 : Operation 171 [1/3] (4.10ns)   --->   "%mul_ln16 = mul nsw i32 %trunc_ln16_1, %trunc_ln16" [matrixmultiplication.cpp:16]   --->   Operation 171 'mul' 'mul_ln16' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 172 [1/3] (4.10ns)   --->   "%mul_ln16_1 = mul nsw i32 %tmp_5, %tmp_4" [matrixmultiplication.cpp:16]   --->   Operation 172 'mul' 'mul_ln16_1' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 173 [1/3] (4.10ns)   --->   "%mul_ln16_2 = mul nsw i32 %tmp_7, %tmp_6" [matrixmultiplication.cpp:16]   --->   Operation 173 'mul' 'mul_ln16_2' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 174 [1/3] (4.10ns)   --->   "%mul_ln16_3 = mul nsw i32 %tmp_9, %tmp_8" [matrixmultiplication.cpp:16]   --->   Operation 174 'mul' 'mul_ln16_3' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 175 [1/3] (4.10ns)   --->   "%mul_ln16_4 = mul nsw i32 %tmp_2, %tmp_s" [matrixmultiplication.cpp:16]   --->   Operation 175 'mul' 'mul_ln16_4' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 176 [1/3] (4.10ns)   --->   "%mul_ln16_5 = mul nsw i32 %tmp_10, %tmp_3" [matrixmultiplication.cpp:16]   --->   Operation 176 'mul' 'mul_ln16_5' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 177 [1/3] (4.10ns)   --->   "%mul_ln16_6 = mul nsw i32 %tmp_12, %tmp_11" [matrixmultiplication.cpp:16]   --->   Operation 177 'mul' 'mul_ln16_6' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 178 [1/3] (4.10ns)   --->   "%mul_ln16_7 = mul nsw i32 %tmp_14, %tmp_13" [matrixmultiplication.cpp:16]   --->   Operation 178 'mul' 'mul_ln16_7' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 179 [1/3] (4.10ns)   --->   "%mul_ln16_8 = mul nsw i32 %tmp_16, %tmp_15" [matrixmultiplication.cpp:16]   --->   Operation 179 'mul' 'mul_ln16_8' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 180 [1/3] (4.10ns)   --->   "%mul_ln16_9 = mul nsw i32 %tmp_18, %tmp_17" [matrixmultiplication.cpp:16]   --->   Operation 180 'mul' 'mul_ln16_9' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 181 [1/3] (4.10ns)   --->   "%mul_ln16_10 = mul nsw i32 %tmp_20, %tmp_19" [matrixmultiplication.cpp:16]   --->   Operation 181 'mul' 'mul_ln16_10' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 182 [1/3] (4.10ns)   --->   "%mul_ln16_11 = mul nsw i32 %tmp_22, %tmp_21" [matrixmultiplication.cpp:16]   --->   Operation 182 'mul' 'mul_ln16_11' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 183 [1/3] (4.10ns)   --->   "%mul_ln16_12 = mul nsw i32 %tmp_24, %tmp_23" [matrixmultiplication.cpp:16]   --->   Operation 183 'mul' 'mul_ln16_12' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 184 [1/3] (4.10ns)   --->   "%mul_ln16_13 = mul nsw i32 %tmp_26, %tmp_25" [matrixmultiplication.cpp:16]   --->   Operation 184 'mul' 'mul_ln16_13' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 185 [1/3] (4.10ns)   --->   "%mul_ln16_14 = mul nsw i32 %tmp_28, %tmp_27" [matrixmultiplication.cpp:16]   --->   Operation 185 'mul' 'mul_ln16_14' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 186 [1/3] (4.10ns)   --->   "%mul_ln16_15 = mul nsw i32 %tmp_30, %tmp_29" [matrixmultiplication.cpp:16]   --->   Operation 186 'mul' 'mul_ln16_15' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 187 [1/3] (4.10ns)   --->   "%mul_ln16_16 = mul nsw i32 %tmp_32, %tmp_31" [matrixmultiplication.cpp:16]   --->   Operation 187 'mul' 'mul_ln16_16' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 188 [1/3] (4.10ns)   --->   "%mul_ln16_17 = mul nsw i32 %tmp_34, %tmp_33" [matrixmultiplication.cpp:16]   --->   Operation 188 'mul' 'mul_ln16_17' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 189 [1/3] (4.10ns)   --->   "%mul_ln16_18 = mul nsw i32 %tmp_36, %tmp_35" [matrixmultiplication.cpp:16]   --->   Operation 189 'mul' 'mul_ln16_18' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 190 [1/3] (4.10ns)   --->   "%mul_ln16_19 = mul nsw i32 %tmp_38, %tmp_37" [matrixmultiplication.cpp:16]   --->   Operation 190 'mul' 'mul_ln16_19' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 191 [1/3] (4.10ns)   --->   "%mul_ln16_20 = mul nsw i32 %tmp_40, %tmp_39" [matrixmultiplication.cpp:16]   --->   Operation 191 'mul' 'mul_ln16_20' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 192 [1/3] (4.10ns)   --->   "%mul_ln16_21 = mul nsw i32 %tmp_42, %tmp_41" [matrixmultiplication.cpp:16]   --->   Operation 192 'mul' 'mul_ln16_21' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 193 [1/3] (4.10ns)   --->   "%mul_ln16_22 = mul nsw i32 %tmp_44, %tmp_43" [matrixmultiplication.cpp:16]   --->   Operation 193 'mul' 'mul_ln16_22' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 194 [1/3] (4.10ns)   --->   "%mul_ln16_23 = mul nsw i32 %tmp_46, %tmp_45" [matrixmultiplication.cpp:16]   --->   Operation 194 'mul' 'mul_ln16_23' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 195 [1/3] (4.10ns)   --->   "%mul_ln16_24 = mul nsw i32 %tmp_48, %tmp_47" [matrixmultiplication.cpp:16]   --->   Operation 195 'mul' 'mul_ln16_24' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 196 [1/3] (4.10ns)   --->   "%mul_ln16_25 = mul nsw i32 %tmp_50, %tmp_49" [matrixmultiplication.cpp:16]   --->   Operation 196 'mul' 'mul_ln16_25' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 197 [1/3] (4.10ns)   --->   "%mul_ln16_26 = mul nsw i32 %tmp_52, %tmp_51" [matrixmultiplication.cpp:16]   --->   Operation 197 'mul' 'mul_ln16_26' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 198 [1/3] (4.10ns)   --->   "%mul_ln16_27 = mul nsw i32 %tmp_54, %tmp_53" [matrixmultiplication.cpp:16]   --->   Operation 198 'mul' 'mul_ln16_27' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 199 [1/3] (4.10ns)   --->   "%mul_ln16_28 = mul nsw i32 %tmp_56, %tmp_55" [matrixmultiplication.cpp:16]   --->   Operation 199 'mul' 'mul_ln16_28' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 200 [1/3] (4.10ns)   --->   "%mul_ln16_29 = mul nsw i32 %tmp_58, %tmp_57" [matrixmultiplication.cpp:16]   --->   Operation 200 'mul' 'mul_ln16_29' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 201 [1/3] (4.10ns)   --->   "%mul_ln16_30 = mul nsw i32 %tmp_60, %tmp_59" [matrixmultiplication.cpp:16]   --->   Operation 201 'mul' 'mul_ln16_30' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 202 [1/3] (4.10ns)   --->   "%mul_ln16_31 = mul nsw i32 %tmp_62, %tmp_61" [matrixmultiplication.cpp:16]   --->   Operation 202 'mul' 'mul_ln16_31' <Predicate = (!icmp_ln10)> <Delay = 4.10> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 3.76>
ST_7 : Operation 203 [1/1] (1.51ns)   --->   "%add_ln16 = add i32 %mul_ln16_1, %mul_ln16" [matrixmultiplication.cpp:16]   --->   Operation 203 'add' 'add_ln16' <Predicate = (!icmp_ln10)> <Delay = 1.51> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 204 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln16_1 = add i32 %mul_ln16_3, %mul_ln16_2" [matrixmultiplication.cpp:16]   --->   Operation 204 'add' 'add_ln16_1' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.12> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 205 [1/1] (2.25ns) (root node of TernaryAdder)   --->   "%add_ln16_2 = add i32 %add_ln16, %add_ln16_1" [matrixmultiplication.cpp:16]   --->   Operation 205 'add' 'add_ln16_2' <Predicate = (!icmp_ln10)> <Delay = 2.25> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.12> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 206 [1/1] (1.51ns)   --->   "%add_ln16_3 = add i32 %mul_ln16_5, %mul_ln16_4" [matrixmultiplication.cpp:16]   --->   Operation 206 'add' 'add_ln16_3' <Predicate = (!icmp_ln10)> <Delay = 1.51> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 207 [1/1] (1.51ns)   --->   "%add_ln16_4 = add i32 %mul_ln16_7, %mul_ln16_6" [matrixmultiplication.cpp:16]   --->   Operation 207 'add' 'add_ln16_4' <Predicate = (!icmp_ln10)> <Delay = 1.51> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 208 [1/1] (1.51ns)   --->   "%add_ln16_7 = add i32 %mul_ln16_9, %mul_ln16_8" [matrixmultiplication.cpp:16]   --->   Operation 208 'add' 'add_ln16_7' <Predicate = (!icmp_ln10)> <Delay = 1.51> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 209 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln16_8 = add i32 %mul_ln16_11, %mul_ln16_10" [matrixmultiplication.cpp:16]   --->   Operation 209 'add' 'add_ln16_8' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.12> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 210 [1/1] (2.25ns) (root node of TernaryAdder)   --->   "%add_ln16_9 = add i32 %add_ln16_7, %add_ln16_8" [matrixmultiplication.cpp:16]   --->   Operation 210 'add' 'add_ln16_9' <Predicate = (!icmp_ln10)> <Delay = 2.25> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.12> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 211 [1/1] (1.51ns)   --->   "%add_ln16_10 = add i32 %mul_ln16_13, %mul_ln16_12" [matrixmultiplication.cpp:16]   --->   Operation 211 'add' 'add_ln16_10' <Predicate = (!icmp_ln10)> <Delay = 1.51> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 212 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln16_11 = add i32 %mul_ln16_15, %mul_ln16_14" [matrixmultiplication.cpp:16]   --->   Operation 212 'add' 'add_ln16_11' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.12> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 213 [1/1] (2.25ns) (root node of TernaryAdder)   --->   "%add_ln16_12 = add i32 %add_ln16_10, %add_ln16_11" [matrixmultiplication.cpp:16]   --->   Operation 213 'add' 'add_ln16_12' <Predicate = (!icmp_ln10)> <Delay = 2.25> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.12> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 214 [1/1] (1.51ns)   --->   "%add_ln16_15 = add i32 %mul_ln16_17, %mul_ln16_16" [matrixmultiplication.cpp:16]   --->   Operation 214 'add' 'add_ln16_15' <Predicate = (!icmp_ln10)> <Delay = 1.51> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 215 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln16_16 = add i32 %mul_ln16_19, %mul_ln16_18" [matrixmultiplication.cpp:16]   --->   Operation 215 'add' 'add_ln16_16' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.12> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 216 [1/1] (2.25ns) (root node of TernaryAdder)   --->   "%add_ln16_17 = add i32 %add_ln16_15, %add_ln16_16" [matrixmultiplication.cpp:16]   --->   Operation 216 'add' 'add_ln16_17' <Predicate = (!icmp_ln10)> <Delay = 2.25> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.12> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 217 [1/1] (1.51ns)   --->   "%add_ln16_18 = add i32 %mul_ln16_21, %mul_ln16_20" [matrixmultiplication.cpp:16]   --->   Operation 217 'add' 'add_ln16_18' <Predicate = (!icmp_ln10)> <Delay = 1.51> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 218 [1/1] (1.51ns)   --->   "%add_ln16_19 = add i32 %mul_ln16_23, %mul_ln16_22" [matrixmultiplication.cpp:16]   --->   Operation 218 'add' 'add_ln16_19' <Predicate = (!icmp_ln10)> <Delay = 1.51> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 219 [1/1] (1.51ns)   --->   "%add_ln16_22 = add i32 %mul_ln16_25, %mul_ln16_24" [matrixmultiplication.cpp:16]   --->   Operation 219 'add' 'add_ln16_22' <Predicate = (!icmp_ln10)> <Delay = 1.51> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 220 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln16_23 = add i32 %mul_ln16_27, %mul_ln16_26" [matrixmultiplication.cpp:16]   --->   Operation 220 'add' 'add_ln16_23' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.12> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 221 [1/1] (2.25ns) (root node of TernaryAdder)   --->   "%add_ln16_24 = add i32 %add_ln16_22, %add_ln16_23" [matrixmultiplication.cpp:16]   --->   Operation 221 'add' 'add_ln16_24' <Predicate = (!icmp_ln10)> <Delay = 2.25> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.12> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 222 [1/1] (1.51ns)   --->   "%add_ln16_25 = add i32 %mul_ln16_29, %mul_ln16_28" [matrixmultiplication.cpp:16]   --->   Operation 222 'add' 'add_ln16_25' <Predicate = (!icmp_ln10)> <Delay = 1.51> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 223 [1/1] (1.51ns)   --->   "%add_ln16_26 = add i32 %mul_ln16_31, %mul_ln16_30" [matrixmultiplication.cpp:16]   --->   Operation 223 'add' 'add_ln16_26' <Predicate = (!icmp_ln10)> <Delay = 1.51> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 2.25>
ST_8 : Operation 224 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln16_5 = add i32 %add_ln16_3, %add_ln16_4" [matrixmultiplication.cpp:16]   --->   Operation 224 'add' 'add_ln16_5' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.12> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_8 : Operation 225 [1/1] (2.25ns) (root node of TernaryAdder)   --->   "%add_ln16_6 = add i32 %add_ln16_2, %add_ln16_5" [matrixmultiplication.cpp:16]   --->   Operation 225 'add' 'add_ln16_6' <Predicate = (!icmp_ln10)> <Delay = 2.25> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.12> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_8 : Operation 226 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln16_20 = add i32 %add_ln16_18, %add_ln16_19" [matrixmultiplication.cpp:16]   --->   Operation 226 'add' 'add_ln16_20' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.12> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_8 : Operation 227 [1/1] (2.25ns) (root node of TernaryAdder)   --->   "%add_ln16_21 = add i32 %add_ln16_17, %add_ln16_20" [matrixmultiplication.cpp:16]   --->   Operation 227 'add' 'add_ln16_21' <Predicate = (!icmp_ln10)> <Delay = 2.25> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.12> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_8 : Operation 228 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln16_27 = add i32 %add_ln16_25, %add_ln16_26" [matrixmultiplication.cpp:16]   --->   Operation 228 'add' 'add_ln16_27' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.12> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_8 : Operation 229 [1/1] (2.25ns) (root node of TernaryAdder)   --->   "%add_ln16_28 = add i32 %add_ln16_24, %add_ln16_27" [matrixmultiplication.cpp:16]   --->   Operation 229 'add' 'add_ln16_28' <Predicate = (!icmp_ln10)> <Delay = 2.25> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.12> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 9 <SV = 8> <Delay = 2.25>
ST_9 : Operation 230 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln16_13 = add i32 %add_ln16_9, %add_ln16_12" [matrixmultiplication.cpp:16]   --->   Operation 230 'add' 'add_ln16_13' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.12> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_9 : Operation 231 [1/1] (2.25ns) (root node of TernaryAdder)   --->   "%add_ln16_14 = add i32 %add_ln16_6, %add_ln16_13" [matrixmultiplication.cpp:16]   --->   Operation 231 'add' 'add_ln16_14' <Predicate = (!icmp_ln10)> <Delay = 2.25> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.12> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 10 <SV = 9> <Delay = 3.58>
ST_10 : Operation 232 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @row_col_str)"   --->   Operation 232 'specloopname' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_10 : Operation 233 [1/1] (0.00ns)   --->   "%empty_6 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1024, i64 1024, i64 1024)"   --->   Operation 233 'speclooptripcount' 'empty_6' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_10 : Operation 234 [1/1] (0.00ns)   --->   "%tmp = call i11 @_ssdm_op_BitConcatenate.i11.i6.i5(i6 %select_ln16_1, i5 0)" [matrixmultiplication.cpp:18]   --->   Operation 234 'bitconcatenate' 'tmp' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_10 : Operation 235 [1/1] (0.00ns)   --->   "%zext_ln11 = zext i11 %tmp to i12" [matrixmultiplication.cpp:11]   --->   Operation 235 'zext' 'zext_ln11' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_10 : Operation 236 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([4 x i8]* @p_str4) nounwind" [matrixmultiplication.cpp:11]   --->   Operation 236 'specloopname' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_10 : Operation 237 [1/1] (0.00ns)   --->   "%tmp_1 = call i32 (...)* @_ssdm_op_SpecRegionBegin([4 x i8]* @p_str4) nounwind" [matrixmultiplication.cpp:11]   --->   Operation 237 'specregionbegin' 'tmp_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_10 : Operation 238 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [matrixmultiplication.cpp:12]   --->   Operation 238 'specpipeline' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_10 : Operation 239 [1/1] (0.00ns)   --->   "%zext_ln18 = zext i6 %select_ln16 to i12" [matrixmultiplication.cpp:18]   --->   Operation 239 'zext' 'zext_ln18' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_10 : Operation 240 [1/1] (1.33ns)   --->   "%add_ln18 = add i12 %zext_ln11, %zext_ln18" [matrixmultiplication.cpp:18]   --->   Operation 240 'add' 'add_ln18' <Predicate = (!icmp_ln10)> <Delay = 1.33> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 241 [1/1] (0.00ns)   --->   "%zext_ln18_1 = zext i12 %add_ln18 to i64" [matrixmultiplication.cpp:18]   --->   Operation 241 'zext' 'zext_ln18_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_10 : Operation 242 [1/1] (0.00ns)   --->   "%AB_addr = getelementptr [1024 x i32]* %AB, i64 0, i64 %zext_ln18_1" [matrixmultiplication.cpp:18]   --->   Operation 242 'getelementptr' 'AB_addr' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_10 : Operation 243 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln16_29 = add i32 %add_ln16_21, %add_ln16_28" [matrixmultiplication.cpp:16]   --->   Operation 243 'add' 'add_ln16_29' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.12> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_10 : Operation 244 [1/1] (2.25ns) (root node of TernaryAdder)   --->   "%add_ln16_30 = add nsw i32 %add_ln16_14, %add_ln16_29" [matrixmultiplication.cpp:16]   --->   Operation 244 'add' 'add_ln16_30' <Predicate = (!icmp_ln10)> <Delay = 2.25> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.12> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_10 : Operation 245 [1/1] (1.33ns)   --->   "store i32 %add_ln16_30, i32* %AB_addr, align 4" [matrixmultiplication.cpp:18]   --->   Operation 245 'store' <Predicate = (!icmp_ln10)> <Delay = 1.33> <Core = "RAM_1P">   --->   Core 44 'RAM_1P' <Latency = 1> <II = 1> <Delay = 1.33> <Storage> <Opcode : 'load' 'store'> <Ports = 1> <Width = 32> <Depth = 1024> <RAM>
ST_10 : Operation 246 [1/1] (0.00ns)   --->   "%empty_7 = call i32 (...)* @_ssdm_op_SpecRegionEnd([4 x i8]* @p_str4, i32 %tmp_1) nounwind" [matrixmultiplication.cpp:19]   --->   Operation 246 'specregionend' 'empty_7' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_10 : Operation 247 [1/1] (0.00ns)   --->   "br label %1"   --->   Operation 247 'br' <Predicate = (!icmp_ln10)> <Delay = 0.00>

State 11 <SV = 2> <Delay = 0.00>
ST_11 : Operation 248 [1/1] (0.00ns)   --->   "ret void" [matrixmultiplication.cpp:21]   --->   Operation 248 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 5ns, clock uncertainty: 0.625ns.

 <State 1>: 0.85ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten', matrixmultiplication.cpp:10) with incoming values : ('add_ln10', matrixmultiplication.cpp:10) [17]  (0.85 ns)

 <State 2>: 2.94ns
The critical path consists of the following:
	'phi' operation ('i_0', matrixmultiplication.cpp:16) with incoming values : ('select_ln16_1', matrixmultiplication.cpp:16) [18]  (0 ns)
	'add' operation ('i', matrixmultiplication.cpp:10) [24]  (1.19 ns)
	'select' operation ('select_ln16_1', matrixmultiplication.cpp:16) [29]  (0.602 ns)
	'getelementptr' operation ('A_addr', matrixmultiplication.cpp:16) [41]  (0 ns)
	'load' operation ('A_load', matrixmultiplication.cpp:16) on array 'A' [42]  (1.15 ns)

 <State 3>: 1.15ns
The critical path consists of the following:
	'load' operation ('A_load', matrixmultiplication.cpp:16) on array 'A' [42]  (1.15 ns)

 <State 4>: 4.11ns
The critical path consists of the following:
	'mul' operation ('mul_ln16', matrixmultiplication.cpp:16) [47]  (4.11 ns)

 <State 5>: 4.11ns
The critical path consists of the following:
	'mul' operation ('mul_ln16', matrixmultiplication.cpp:16) [47]  (4.11 ns)

 <State 6>: 4.11ns
The critical path consists of the following:
	'mul' operation ('mul_ln16', matrixmultiplication.cpp:16) [47]  (4.11 ns)

 <State 7>: 3.77ns
The critical path consists of the following:
	'add' operation ('add_ln16', matrixmultiplication.cpp:16) [141]  (1.51 ns)
	'add' operation ('add_ln16_2', matrixmultiplication.cpp:16) [143]  (2.25 ns)

 <State 8>: 2.25ns
The critical path consists of the following:
	'add' operation ('add_ln16_5', matrixmultiplication.cpp:16) [146]  (0 ns)
	'add' operation ('add_ln16_6', matrixmultiplication.cpp:16) [147]  (2.25 ns)

 <State 9>: 2.25ns
The critical path consists of the following:
	'add' operation ('add_ln16_13', matrixmultiplication.cpp:16) [154]  (0 ns)
	'add' operation ('add_ln16_14', matrixmultiplication.cpp:16) [155]  (2.25 ns)

 <State 10>: 3.59ns
The critical path consists of the following:
	'add' operation ('add_ln16_29', matrixmultiplication.cpp:16) [170]  (0 ns)
	'add' operation ('add_ln16_30', matrixmultiplication.cpp:16) [171]  (2.25 ns)
	'store' operation ('store_ln18', matrixmultiplication.cpp:18) of variable 'add_ln16_30', matrixmultiplication.cpp:16 on array 'AB' [172]  (1.33 ns)

 <State 11>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
